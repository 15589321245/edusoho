{"version":3,"sources":["app/Resources/static-src/app/js/file-chooser/base/upload-chooser.js"],"names":["UploaderChooser","element","$","_sdk","undefined","_initSdk","_bindEvent","$uploader","find","UploaderSDK","id","attr","initUrl","data","finishUrl","accept","process","ui","on","event","uploadProcess","get","reduce","prams","dom","val","setProcess","_onFileUploadFinish","file","error","message","source","placeFileName","name","html","emit","placeMediaAttr","length","$minute","$second","parseInt","minute","second","JSON","stringify"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;;;;IAEqBA,e;;;AACnB,2BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AAEnB,UAAKA,OAAL,GAAeC,EAAED,OAAF,CAAf;AACA,UAAKE,IAAL,GAAYC,SAAZ;AACA,UAAKC,QAAL,GACKC,UADL;AAJmB;AAMpB;;;;+BAEU;AACT,UAAI,KAAKH,IAAL,KAAcC,SAAlB,EAA6B;AAC3B,eAAO,IAAP;AACD;;AAED,UAAIG,YAAY,KAAKN,OAAL,CAAaO,IAAb,CAAkB,qBAAlB,CAAhB;AACA,WAAKL,IAAL,GAAY,IAAIM,WAAJ,CAAgB;AAC1BC,YAAIH,UAAUI,IAAV,CAAe,IAAf,CADsB;AAE1BC,iBAASL,UAAUM,IAAV,CAAe,SAAf,CAFiB;AAG1BC,mBAAWP,UAAUM,IAAV,CAAe,WAAf,CAHe;AAI1BE,gBAAQR,UAAUM,IAAV,CAAe,QAAf,CAJkB;AAK1BG,iBAAST,UAAUM,IAAV,CAAe,SAAf,CALiB;AAM1BI,YAAI;AANsB,OAAhB,CAAZ;;AASA,aAAO,IAAP;AACD;;;iCAEY;AAAA;;AACX,WAAKhB,OAAL,CAAaiB,EAAb,CAAgB,QAAhB,EAA0B,mBAA1B,EAA+C,UAACC,KAAD,EAAW;AACxD,YAAIC,gBAAgB,OAAKnB,OAAL,CAAaO,IAAb,CAAkB,mBAAlB,EAAuCa,GAAvC,GAA6CC,MAA7C,CAAoD,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACtFD,gBAAMrB,EAAEsB,GAAF,EAAOb,IAAP,CAAY,MAAZ,CAAN,IAA6BT,EAAEsB,GAAF,EAAOhB,IAAP,CAAY,iBAAZ,EAA+BiB,GAA/B,EAA7B;AACA,iBAAOF,KAAP;AACD,SAHmB,EAGjB,EAHiB,CAApB;AAIA,eAAKpB,IAAL,CAAUuB,UAAV,CAAqBN,aAArB;AACD,OAND;;AAQA,WAAKjB,IAAL,CAAUe,EAAV,CAAa,aAAb,EAA4B;AAAA,eAAQ,OAAKS,mBAAL,CAAyBC,IAAzB,CAAR;AAAA,OAA5B;;AAEA,WAAKzB,IAAL,CAAUe,EAAV,CAAa,OAAb,EAAsB,UAACW,KAAD,EAAW;AAC/B,8BAAO,QAAP,EAAiBA,MAAMC,OAAvB;AACD,OAFD;;AAIA,aAAO,IAAP;AACD;;;wCAEmBF,I,EAAM;AACxBA,WAAKG,MAAL,GAAc,MAAd;;AAEA,UAAIC,gBAAgB,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC5B/B,UAAE,2BAAF,EAA+BgC,IAA/B,CAAoCD,IAApC;AACD,OAFD;;AAIA,WAAKE,IAAL,CAAU,QAAV,EAAoBP,IAApB;;AAEA,UAAIQ,iBAAiB,SAAjBA,cAAiB,CAACR,IAAD,EAAU;AAC7B,YAAIA,KAAKS,MAAL,KAAgB,CAAhB,IAAqBT,KAAKS,MAAL,KAAgBjC,SAAzC,EAAoD;AAClD,cAAIkC,UAAUpC,EAAE,SAAF,CAAd;AACA,cAAIqC,UAAUrC,EAAE,SAAF,CAAd;AACA,cAAImC,SAASG,SAASZ,KAAKS,MAAd,CAAb;AACA,cAAII,SAASD,SAASH,SAAS,EAAlB,CAAb;AACA,cAAIK,SAASL,SAAS,EAAtB;AACAC,kBAAQb,GAAR,CAAYgB,MAAZ;AACAF,kBAAQd,GAAR,CAAYiB,MAAZ;AACAd,eAAKa,MAAL,GAAcA,MAAd;AACAb,eAAKc,MAAL,GAAcA,MAAd;AACD;;AAEDxC,UAAE,gBAAF,EAAoBuB,GAApB,CAAwBkB,KAAKC,SAAL,CAAehB,IAAf,CAAxB;AACD,OAdD;;AAgBAI,oBAAcJ,KAAKK,IAAnB;AACAG,qBAAeR,IAAf;AACD;;;;;;kBAxEkB5B,e","file":"upload-chooser.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import Chooser from './chooser';\nimport notify from 'common/notify';\n\nexport default class UploaderChooser extends Chooser {\n  constructor(element) {\n    super();\n    this.element = $(element);\n    this._sdk = undefined;\n    this._initSdk()\n        ._bindEvent();\n  }\n\n  _initSdk() {\n    if (this._sdk !== undefined) {\n      return this;\n    }\n\n    let $uploader = this.element.find('#uploader-container');\n    this._sdk = new UploaderSDK({\n      id: $uploader.attr('id'),\n      initUrl: $uploader.data('initUrl'),\n      finishUrl: $uploader.data('finishUrl'),\n      accept: $uploader.data('accept'),\n      process: $uploader.data('process'),\n      ui: 'single'\n    });\n\n    return this;\n  }\n\n  _bindEvent() {\n    this.element.on('change', '.js-upload-params', (event) => {\n      let uploadProcess = this.element.find('.js-upload-params').get().reduce((prams, dom) => {\n        prams[$(dom).attr('name')] = $(dom).find('option:selected').val();\n        return prams;\n      }, {});\n      this._sdk.setProcess(uploadProcess);\n    });\n\n    this._sdk.on('file.finish', file => this._onFileUploadFinish(file));\n\n    this._sdk.on('error', (error) => {\n      notify('danger', error.message);\n    });\n\n    return this;\n  }\n\n  _onFileUploadFinish(file) {\n    file.source = 'self';\n\n    let placeFileName = (name) => {\n      $('[data-role=\"placeholder\"]').html(name);\n    };\n\n    this.emit('select', file);\n\n    let placeMediaAttr = (file) => {\n      if (file.length !== 0 && file.length !== undefined) {\n        let $minute = $('#minute');\n        let $second = $('#second');\n        let length = parseInt(file.length);\n        let minute = parseInt(length / 60);\n        let second = length % 60;\n        $minute.val(minute);\n        $second.val(second);\n        file.minute = minute;\n        file.second = second;\n      }\n\n      $('[name=\"media\"]').val(JSON.stringify(file));\n    };\n\n    placeFileName(file.name);\n    placeMediaAttr(file);\n  }\n}\n"]}