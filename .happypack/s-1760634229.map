{"version":3,"sources":["app/Resources/static-src/app/js/course-manage/info/index.js"],"names":["courseInfo","init","$","length","get","data","done","liveCapacity","capacity","initCkeidtor","initValidator","checkBoxChange","renderMultiGroupComponent","CKEDITOR","replace","allowedContent","toolbar","filebrowserImageUploadUrl","elementId","name","datas","render","document","getElementById","$form","validator","validate","currentDom","groups","date","rules","title","maxlength","required","depends","val","trim","maxStudentNum","live_capacity","positive_integer","messages","require","Translator","trans","click","form","publishAddMessage","submit","publish","channel","topic","on","event","removeClass","addClass","jQuery","addMethod","value","element","maxCapacity","parseInt","message","parent","siblings","find","html"],"mappings":"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","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import ReactDOM from 'react-dom';\nimport React from 'react';\nimport MultiInput from 'app/common/component/multi-input';\nimport postal from 'postal';\n\nclass courseInfo {\n\n  constructor() {\n    this.init();\n  }\n\n  init() {\n    if ($('#maxStudentNum-field').length > 0) {\n      $.get($('#maxStudentNum-field').data('liveCapacityUrl')).done((liveCapacity) => {\n        $('#maxStudentNum-field').data('liveCapacity', liveCapacity.capacity);\n      })\n    }\n    this.initCkeidtor();\n    this.initValidator();\n    this.checkBoxChange();\n    \n    this.renderMultiGroupComponent('course-goals', 'goals');\n    this.renderMultiGroupComponent('intended-students', 'audiences');\n  }\n\n  initCkeidtor() {\n    CKEDITOR.replace('summary', {\n      allowedContent: true,\n      toolbar: 'Detail',\n      filebrowserImageUploadUrl: $('#summary').data('imageUploadUrl')\n    });\n  }\n\n  renderMultiGroupComponent(elementId, name) {\n    let datas = $('#' + elementId).data('init-value');\n    ReactDOM.render(<MultiInput\n      dataSource={datas}\n      outputDataElement={name} />, document.getElementById(elementId));\n  }\n\n  initValidator() {\n    let $form = $('#course-info-form');\n    let validator = $form.validate({\n      currentDom: '#course-submit',\n      groups: {\n        date: 'expiryStartDate expiryEndDate'\n      },\n      rules: {\n        title: {\n          maxlength: 100,\n          required: {\n            depends: function () {\n              $(this).val($.trim($(this).val()));\n              return true;\n            }\n          }\n        },\n        maxStudentNum: {\n          required: true,\n          live_capacity: true,\n          positive_integer: true\n        },\n        \n      },\n      messages: {\n        title: {\n          require: Translator.trans('请输入教学计划课程标题')\n        },\n        maxStudentNum: {\n          required: Translator.trans('请输入课程人数')\n        },\n      }\n    });\n\n\n\n    $('#course-submit').click(() => {\n      if (validator.form()) {\n        this.publishAddMessage();\n        $form.submit();\n      }\n    });\n  }\n\n  publishAddMessage() {\n    postal.publish({\n      channel: \"courseInfoMultiInput\",\n      topic: \"addMultiInput\",\n    });\n  }\n\n  \n\n  checkBoxChange() {\n    $('input[name=\"expiryMode\"]').on('change', function (event) {\n      if ($('input[name=\"expiryMode\"]:checked').val() == 'date') {\n        $('#expiry-days').removeClass('hidden').addClass('hidden');\n        $('#expiry-date').removeClass('hidden');\n      } else {\n        $('#expiry-date').removeClass('hidden').addClass('hidden');\n        $('#expiry-days').removeClass('hidden');\n      }\n    });\n  }\n}\n\nnew courseInfo();\n\njQuery.validator.addMethod(\"live_capacity\", function (value, element) {\n  const maxCapacity = parseInt($(element).data('liveCapacity'));\n  if (value > maxCapacity) {\n    const message = Translator.trans('网校可支持最多%capacity%人同时参加直播，您可以设置一个更大的数值，但届时有可能会导致满额后其他学员无法进入直播。', { capacity: maxCapacity });\n    $(element).parent().siblings('.js-course-rule').find('p').html(message);\n  } else {\n    $(element).parent().siblings('.js-course-rule').find('p').html('');\n  }\n\n  return true;\n});\n\n\n"]}