'use strict';

var _docPlayer = require('../../../common/doc-player');

var _docPlayer2 = _interopRequireDefault(_docPlayer);

var _activityEmitter = require('../activity-emitter');

var _activityEmitter2 = _interopRequireDefault(_activityEmitter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var $element = $('#document-content');
var watermarkUrl = $element.data('watermark-url');

console.log(watermarkUrl);

if (watermarkUrl) {
  console.log('watermarkUrl');
  $.get(watermarkUrl, function (watermark) {
    console.log(watermark);
    initDocPlayer(watermark);
  });
} else {
  initDocPlayer('');
}

function initDocPlayer(contents) {
  var doc = new _docPlayer2.default({
    element: $element,
    swfUrl: $element.data('swf'),
    pdfUrl: $element.data('pdf'),
    watermarkOptions: {
      contents: contents,
      xPosition: 'center',
      yPosition: 'center',
      rotate: 45
    }
  });
}

var activityEmitter = new _activityEmitter2.default();

var finishType = $element.data('finishType');

if (finishType == 'time') {
  (function () {
    var finishDetail = $element.data('finishDetail');
    activityEmitter.receive('doing', function (data) {
      if (finishDetail <= data.learnedTime) {
        activityEmitter.emit('finish');
      }
    });
  })();
}