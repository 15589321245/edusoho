{"version":3,"sources":["app/Resources/static-src/app/js/activity-manage/exercise/index.js"],"names":["Exercise","$form","$element","_setValidateRule","_init","_initEvent","_inItStep2form","$step2_form","$","validator","validate","onkeyup","rules","title","required","itemCount","positiveInteger","range","difficulty","remote","url","data","type","dataType","async","val","types","each","push","messages","$step3_form","finishCondition","addMethod","value","element","optional","test","format"],"mappings":";;;;;;IAAMA,Q;AACL,oBAAYC,KAAZ,EAAmB;AAAA;;AAClB,SAAKC,QAAL,GAAgBD,KAAhB;AACA,SAAKE,gBAAL;AACE,SAAKC,KAAL;AACA,SAAKC,UAAL;AACD;;;;4BAEO;AACN,WAAKC,cAAL;AACD;;;iCAEY,CACZ;;;qCAEgB;AACf,UAAKC,cAAcC,EAAE,aAAF,CAAnB;AACA,UAAIC,YAAYF,YAAYG,QAAZ,CAAqB;AACjCC,iBAAS,KADwB;AAEjCC,eAAO;AACLC,iBAAO;AACLC,sBAAS;AADJ,WADF;AAILC,qBAAW;AACTD,sBAAU,IADD;AAETE,6BAAgB;AAFP,WAJN;AAQLC,iBAAM;AACLH,sBAAS;AADJ,WARD;AAWLI,sBAAW;AACVJ,sBAAS;AADC,WAXN;AAcL,6BAAkB;AAChBA,sBAAS,IADO;AAEhBK,oBAAQ;AACNC,mBAAKZ,EAAE,wBAAF,EAA4Ba,IAA5B,CAAiC,UAAjC,CADC;AAENC,oBAAM,MAFA;AAGNC,wBAAU,MAHJ;AAINC,qBAAO,KAJD;AAKNH,oBAAM;AACJN,2BAAW,qBAAW;AACpB,yBAAOP,EAAE,oBAAF,EAAwBiB,GAAxB,EAAP;AACD,iBAHG;AAIJR,uBAAO,iBAAW;AAChB,yBAAOT,EAAE,wBAAF,EAA4BiB,GAA5B,EAAP;AACD,iBANG;AAOJP,4BAAY,sBAAW;AACrB,yBAAOV,EAAE,qBAAF,EAAyBiB,GAAzB,EAAP;AACD,iBATG;AAUJC,uBAAO,iBAAY;AACjB,sBAAIA,QAAQ,EAAZ;AACAlB,oBAAE,oCAAF,EAAwCmB,IAAxC,CAA6C,YAAU;AACrDD,0BAAME,IAAN,CAAWpB,EAAE,IAAF,EAAQiB,GAAR,EAAX;AACD,mBAFD;AAGA,yBAAOC,KAAP;AACD;AAhBG;AALA;AAFQ;AAdb,SAF0B;AA4CjCG,kBAAU;AACRf,oBAAS,OADD;AAERG,iBAAO,MAFC;AAGRC,sBAAY,SAHJ;AAIR,6BAAmB;AACjBJ,sBAAS,OADQ;AAEjBK,oBAAO;AAFU;AAJX;AA5CuB,OAArB,CAAhB;;AAuDA;;;;;;;;;;;;;;;AAeAZ,kBAAYc,IAAZ,CAAiB,WAAjB,EAA6BZ,SAA7B;AACD;;;qCAEgB;AACf,UAAIqB,cAActB,EAAE,aAAF,CAAlB;AACA,UAAIC,YAAYqB,YAAYpB,QAAZ,CAAqB;AACjCC,iBAAS,KADwB;AAEjCC,eAAO;AACHmB,2BAAiB;AACbjB,sBAAU;AADG;AADd,SAF0B;AAOjCe,kBAAU;AACNE,2BAAiB;AADX;AAPuB,OAArB,CAAhB;AAWAD,kBAAYT,IAAZ,CAAiB,WAAjB,EAA6BZ,SAA7B;AACD;;;uCAEkB;AACjBD,QAAEC,SAAF,CAAYuB,SAAZ,CAAsB,iBAAtB,EAAwC,UAASC,KAAT,EAAeC,OAAf,EAAuB;AAC/D,eAAO,KAAKC,QAAL,CAAeD,OAAf,KAA4B,aAAaE,IAAb,CAAkBH,KAAlB,CAAnC;AACD,OAFC,EAECzB,EAAEC,SAAF,CAAY4B,MAAZ,CAAmB,QAAnB,CAFD;AAID;;;;;;AAGH,IAAIrC,QAAJ,CAAaQ,EAAE,aAAF,CAAb","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["class Exercise {\n\tconstructor($form) {\n\t\tthis.$element = $form;\n\t\tthis._setValidateRule();\n    this._init();\n    this._initEvent();\n  }\n\n  _init() {\n    this._inItStep2form();\n  }\n\n  _initEvent() {\n  }\n\n  _inItStep2form() {\n    var  $step2_form = $(\"#step2-form\");\n    var validator = $step2_form.validate({\n        onkeyup: false,\n        rules: {\n          title: {\n            required:true\n          },\n          itemCount: {\n            required: true,\n            positiveInteger:true\n          },\n          range:{\n          \trequired:true,\n          },\n          difficulty:{\n          \trequired:true\n          },\n          'questionTypes[]':{\n            required:true,\n            remote: {    \n              url: $('[name=\"checkQuestion\"]').data('checkUrl'),   \n              type: \"post\",    \n              dataType: \"json\", \n              async: false,      \n              data: {    \n                itemCount: function() {    \n                  return $('[name=\"itemCount\"]').val();    \n                },\n                range: function() {\n                  return $('[name=\"range\"]:checked').val();\n                },\n                difficulty: function() {\n                  return $('[name=\"difficulty\"]').val();\n                },\n                types: function () {\n                  let types = [];\n                  $('[name=\"questionTypes\\[\\]\"]:checked').each(function(){\n                    types.push($(this).val());\n                  });\n                  return types;\n                }\n              }    \n            }    \n          }\n        },\n        messages: {\n          required:\"请填写标题\",\n          range: \"题目来源\",\n          difficulty: \"请选择难易程度\",\n          'questionTypes[]': {\n            required:\"请选择题型\",\n            remote:\"题目数量不足\"\n          },\n        }\n    });\n\n    /*if (validator.form()) {\n      $('input[namae=\"checkQuestion\"]').rules('add',{\n        required:true,\n        remote:{\n          url: $('input[namae=\"checkQuestion\"]').data('checkUrl'),     \n          type: 'post',               \n          dataType: 'json',           \n          data: $step2_form.serialize(),\n          success:function(response){\n            console.log(response);\n          }\n        }\n      })\n    }*/\n\n    $step2_form.data('validator',validator);\n  }\n\n  _inItStep3form() {\n    var $step3_form = $(\"#step3-form\");\n    var validator = $step3_form.validate({\n        onkeyup: false,\n        rules: {\n            finishCondition: {\n                required: true,\n            },\n        },\n        messages: {\n            finishCondition: \"请输完成条件\",\n        }\n    });\n    $step3_form.data('validator',validator);\n  }\n\n  _setValidateRule() {\n    $.validator.addMethod(\"positiveInteger\",function(value,element){  \n\t\t  return this.optional( element ) || /^[1-9]\\d*$/.test(value);\n\t\t}, $.validator.format(\"必须为正整数\"));\n\n  }\n}\n\nnew Exercise($('#step2-form'));"]}