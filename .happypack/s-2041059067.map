{"version":3,"sources":["app/Resources/static-src/app/js/file-chooser/base/import-video.js"],"names":["VideoImport","container","initEvent","$","on","_onImport","bind","e","self","$btn","currentTarget","$urlInput","parent","siblings","url","val","length","alert","Translator","trans","test","button","get","data","video","media","status","type","source","name","uri","files","_onChange","error","jqXHR","textStatus","errorThrown","always","file","value","JSON","stringify","emit","html"],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;IAEMA,W;;;AACJ,uBAAYC,SAAZ,EAAuB;AAAA;;AAAA;;AAErB,UAAKA,SAAL,GAAiBA,SAAjB;AACA,UAAKC,SAAL;AAHqB;AAItB;;;;gCAEW;AACVC,QAAE,KAAKF,SAAP,EAAkBG,EAAlB,CAAqB,OAArB,EAA8B,kBAA9B,EAAkD,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAlD;AACA;AACD;;;8BAGSC,C,EAAG;AACX,UAAIC,OAAO,IAAX;AAAA,UACEC,OAAON,EAAEI,EAAEG,aAAJ,CADT;AAAA,UAEEC,YAAYF,KAAKG,MAAL,GAAcC,QAAd,CAAuB,OAAvB,CAFd;AAAA,UAGEC,MAAMH,UAAUI,GAAV,EAHR;;AAKA,UAAID,IAAIE,MAAJ,IAAc,CAAlB,EAAqB;AACnBC,cAAMC,WAAWC,KAAX,CAAiB,WAAjB,CAAN;AACA;AACD;;AAED,UAAI,CAAC,yBAAyBC,IAAzB,CAA8BN,GAA9B,CAAL,EAAyC;AACvCG,cAAMC,WAAWC,KAAX,CAAiB,YAAjB,CAAN;AACA;AACD;;AAEDV,WAAKY,MAAL,CAAY,SAAZ;;AAEAlB,QAAEmB,GAAF,CAAMb,KAAKc,IAAL,CAAU,KAAV,CAAN,EAAwB,EAAET,KAAKA,GAAP,EAAxB,EAAsC,UAASU,KAAT,EAAgB;AACpD,YAAIC,QAAQ;AACVC,kBAAQ,MADE;AAEVC,gBAAMH,MAAMG,IAFF;AAGVC,kBAAQJ,MAAMI,MAHJ;AAIVC,gBAAML,MAAMK,IAJF;AAKVC,eAAKN,MAAMO,KAAN,CAAY,CAAZ,EAAejB;AALV,SAAZ;AAOAN,aAAKwB,SAAL,CAAeP,KAAf;AACAd,kBAAUI,GAAV,CAAc,EAAd;AACD,OAVD,EAUG,MAVH,EAUWkB,KAVX,CAUiB,UAASC,KAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,EAAyC;AACxDnB,cAAMC,WAAWC,KAAX,CAAiB,4BAAjB,CAAN;AACD,OAZD,EAYGkB,MAZH,CAYU,YAAW;AACnB5B,aAAKY,MAAL,CAAY,OAAZ;AACD,OAdD;;AAgBA;AACD;;;8BAESiB,I,EAAM;AACd;AACA,UAAIC,QAAQD,OAAOE,KAAKC,SAAL,CAAeH,IAAf,CAAP,GAA8B,EAA1C;AACA,WAAKI,IAAL,CAAU,aAAV,EAAyBJ,IAAzB;AACAnC,QAAE,2BAAF,EAA+BwC,IAA/B,CAAoCL,KAAKT,IAAzC;AACD;;;;;;kBAGY7B,W","file":"import-video.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import Chooser from './chooser';\n\nclass VideoImport extends Chooser {\n  constructor(container) {\n    super();\n    this.container = container;\n    this.initEvent();\n  }\n\n  initEvent() {\n    $(this.container).on('click', '.js-video-import', this._onImport.bind(this));\n    // $('.js-choose-trigger').on('click', this._open.bind(this))\n  }\n\n\n  _onImport(e) {\n    var self = this,\n      $btn = $(e.currentTarget),\n      $urlInput = $btn.parent().siblings('input'),\n      url = $urlInput.val();\n\n    if (url.length == 0) {\n      alert(Translator.trans('请输入视频页面地址'));\n      return;\n    }\n\n    if (!/^[a-zA-z]+:\\/\\/[^\\s]*$/.test(url)) {\n      alert(Translator.trans('请输入正确的视频网址'));\n      return;\n    }\n\n    $btn.button('loading');\n\n    $.get($btn.data('url'), { url: url }, function(video) {\n      var media = {\n        status: 'none',\n        type: video.type,\n        source: video.source,\n        name: video.name,\n        uri: video.files[0].url\n      };\n      self._onChange(media);\n      $urlInput.val('');\n    }, 'json').error(function(jqXHR, textStatus, errorThrown) {\n      alert(Translator.trans('读取视频页面信息失败，请检查您的输入的页面地址后重试'));\n    }).always(function() {\n      $btn.button('reset');\n    });\n\n    return;\n  }\n\n  _onChange(file) {\n    // this._close();\n    var value = file ? JSON.stringify(file) : '';\n    this.emit('file.select', file);\n    $('[data-role=\"placeholder\"]').html(file.name);\n  }\n}\n\nexport default VideoImport;\n"]}