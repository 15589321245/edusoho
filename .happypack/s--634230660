'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _chooser = require('./chooser');

var _chooser2 = _interopRequireDefault(_chooser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MaterialLibChoose = function (_Chooser) {
  _inherits(MaterialLibChoose, _Chooser);

  function MaterialLibChoose($container) {
    _classCallCheck(this, MaterialLibChoose);

    var _this = _possibleConstructorReturn(this, (MaterialLibChoose.__proto__ || Object.getPrototypeOf(MaterialLibChoose)).call(this));

    _this.container = $container;
    _this.loadShareingContacts = false;
    _this._init();
    _this._initEvent();
    return _this;
  }

  _createClass(MaterialLibChoose, [{
    key: '_init',
    value: function _init() {
      this._loadList();
    }
  }, {
    key: '_initEvent',
    value: function _initEvent() {
      $(this.container).on('click', '.js-material-type', this._switchFileSource.bind(this));
      $(this.container).on('change', '.js-file-owner', this._filterByFileOwner);
      $(this.container).on('click', '.js-browser-search', this._filterByFileName.bind(this));
      $(this.container).on('click', '.pagination a', this._paginationList.bind(this));
      $(this.container).on('click', '.file-browser-item', this._onSelectFile.bind(this));
      // $('.js-choose-trigger').on('click', this._open.bind(this))
    }
  }, {
    key: '_loadList',
    value: function _loadList() {
      var _this2 = this;

      var url = $('.js-browser-search').data('url');
      $.get(url, this._getParams(), function (html) {
        _this2.container.find('.js-material-list').html(html);
      });
    }
  }, {
    key: '_getParams',
    value: function _getParams() {
      var params = {};
      $('.js-material-lib-search-form input[type=hidden]').each(function (input) {
        params[$(this).attr('name')] = $(this).val();
      });
      return params;
    }
  }, {
    key: '_paginationList',
    value: function _paginationList(event) {
      event.stopImmediatePropagation();
      event.preventDefault();

      var page = this._getUrlParameter($(event.currentTarget).attr('href'), 'page');
      $('input[name=page]').val(page);
      this._loadList();
    }
  }, {
    key: '_switchFileSource',
    value: function _switchFileSource(event) {
      var that = event.currentTarget;
      var type = $(that).data('type');
      $(that).addClass('active').siblings().removeClass('active');
      $('input[name=sourceFrom]').val(type);
      $('input[name=page]').val(1);
      switch (type) {
        case 'my':
          $('.js-file-name-group').removeClass('hidden');
          $('.js-file-owner-group').addClass('hidden');
          break;
        case 'sharing':
          this._loadSharingContacts.call(this, $(that).data('sharingContactsUrl'));
          $('.js-file-name-group').removeClass('hidden');
          $('.js-file-owner-group').addClass('hidden');
          break;
        default:
          $('.js-file-name-group').removeClass('hidden');
          $('.js-file-owner-group').addClass('hidden');
          break;
      }
      this._loadList();
    }
  }, {
    key: '_loadSharingContacts',
    value: function _loadSharingContacts(url) {
      if (this.loadShareingContacts == true) {
        console.error('teacher list has been loaded');
        return;
      }
      $.get(url, function (teachers) {
        if (Object.keys(teachers).length > 0) {
          var html = '<option value=\'\'>' + Translator.trans('请选择老师') + '</option>';
          $.each(teachers, function (i, teacher) {
            html += '<option value=\'' + teacher.id + '\'>' + teacher.nickname + ' </option>';
          });

          $(".js-file-owner", self.element).html(html);
        }
      }, 'json');
      this.loadShareingContacts = true;
    }
  }, {
    key: '_filterByFileName',
    value: function _filterByFileName() {
      $('input[name=keyword]').val($('.js-file-name').val());
      this._loadList();
    }
  }, {
    key: '_filterByFileOwner',
    value: function _filterByFileOwner() {
      params.currentUserId = $('.js-file-owner option:selected').val();
      $('input[name=currentUserId]').val(currentUserId);
      this._loadList();
    }
  }, {
    key: '_onSelectFile',
    value: function _onSelectFile(event) {
      $('.file-browser-item').removeClass('active');
      var $that = $(event.currentTarget).addClass('active');
      var file = $that.data();
      $('[data-role="placeholder"]').html(file.name);

      this.emit('select', file);
      // this._close();
    }
  }, {
    key: '_getUrlParameter',
    value: function _getUrlParameter(url, param) {
      var sPageParams = url.split('?');
      if (sPageParams && sPageParams.length == 2) {
        var sPageURL = decodeURIComponent(sPageParams[1]);
        var sURLVariables = sPageURL.split('&');
        for (var i = 0; i < sURLVariables.length; i++) {
          var sParameterName = sURLVariables[i].split('=');

          if (sParameterName[0] === param) {
            return sParameterName[1] === undefined ? null : sParameterName[1];
          }
        }
      }
      return null;
    }
  }]);

  return MaterialLibChoose;
}(_chooser2.default);

exports.default = MaterialLibChoose;