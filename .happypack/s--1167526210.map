{"version":3,"sources":["app/Resources/static-src/libs/js/es-image-crop.js"],"names":["EsImageCrop","config","self","$","extend","element","group","$picture","scaledWidth","attr","scaledHeight","naturalWidth","data","naturalHeight","cropedWidth","cropedHeight","ratio","selectWidth","selectHeight","img","Jcrop","trueSize","setSelect","aspectRatio","keySupport","allowSelect","onSelect","c","postData","cropImgUrl","app","imgCropUrl","tellScaled","width","height","post","response","afterCrop"],"mappings":";;;;;;;;AAAA;;;;AACA;;IAEMA,W;AACL,yBAAYC,MAAZ,EAAoB;AAAA;;AACnB,YAAIC,OAAO,IAAX;AACA,aAAKD,MAAL,GAAcE,EAAEC,MAAF,CAAS;AACtBC,qBAAS,IADa;AAEtBC,mBAAO;AAFe,SAAT,EAGXL,MAHW,CAAd;;AAKA,YAAIM,WAAW,KAAKF,OAAL,GAAeF,EAAE,KAAKF,MAAL,CAAYI,OAAd,CAA9B;AACA,YAAIG,cAAcD,SAASE,IAAT,CAAc,OAAd,CAAlB;AAAA,YACUC,eAAeH,SAASE,IAAT,CAAc,QAAd,CADzB;AAAA,YAEUE,eAAeJ,SAASK,IAAT,CAAc,cAAd,CAFzB;AAAA,YAGUC,gBAAgBN,SAASK,IAAT,CAAc,eAAd,CAH1B;AAAA,YAIUE,cAAc,KAAKb,MAAL,CAAYa,WAJpC;AAAA,YAKUC,eAAe,KAAKd,MAAL,CAAYc,YALrC;AAAA,YAMUC,QAAQF,cAAcC,YANhC;AAAA,YAOUE,cAAeH,WAAD,IAAiBH,eAAaH,WAA9B,CAPxB;AAAA,YAQUU,eAAgBH,YAAD,IAAkBF,gBAAcH,YAAhC,CARzB;AASM;;AAEA,aAAKS,GAAL,GAAWhB,EAAEiB,KAAF,CAAQb,QAAR,EAAkB;AACzBc,sBAAU,CAACV,YAAD,EAAeE,aAAf,CADe;AAEzBS,uBAAW,CAAC,CAAD,EAAI,CAAJ,EAAOL,WAAP,EAAoBC,YAApB,CAFc;AAGzBK,yBAAaP,KAHY;AAIzBQ,wBAAY,KAJa;AAKzBC,yBAAa,KALY;AAMzBC,sBAAU,kBAASC,CAAT,EAAY;AAClBzB,qBAAKwB,QAAL,CAAcC,CAAd;AACH;AARwB,SAAlB,CAAX;AAUN;;;;6BAEIC,Q,EAAS;AACP,gBAAI1B,OAAO,IAAX;AACH,gBAAI2B,aAAaC,IAAIC,UAArB;;AAEAH,uBAAWA,YAAY,EAAvB;;AAEAA,uBAAWzB,EAAEC,MAAF,CAAS,KAAKe,GAAL,CAASa,UAAT,EAAT,EAAgCJ,QAAhC,EAA0C,EAACK,OAAO,KAAK5B,OAAL,CAAa4B,KAAb,EAAR,EAA8BC,QAAQ,KAAK7B,OAAL,CAAa6B,MAAb,EAAtC,EAA6D5B,OAAOJ,KAAKD,MAAL,CAAYK,KAAhF,EAA1C,CAAX;AACGH,cAAEgC,IAAF,CAAON,UAAP,EAAmBD,QAAnB,EAA6B,UAASQ,QAAT,EAAkB;AAC3ClC,qBAAKmC,SAAL,CAAeD,QAAf;AACH,aAFD;AAGH;;;iCAEQT,C,EAAG;AACd;AACA;;;kCAESS,Q,EAAU;AACnB;AACA;;;;;;kBAGapC,W","file":"es-image-crop.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import 'jquery-jcrop/js/jquery.Jcrop.js';\n// import 'jquery-jcrop/css/Jcrop.gif';\n\nclass EsImageCrop {\n\tconstructor(config) {\n\t\tlet self = this;\n\t\tthis.config = $.extend({\n\t\t\telement: null,\n\t\t\tgroup: 'default'\n\t\t}, config);\n\n\t\tlet $picture = this.element = $(this.config.element);\n\t\tlet scaledWidth = $picture.attr('width'),\n            scaledHeight = $picture.attr('height'),\n            naturalWidth = $picture.data('naturalWidth'),\n            naturalHeight = $picture.data('naturalHeight'),\n            cropedWidth = this.config.cropedWidth,\n            cropedHeight = this.config.cropedHeight,\n            ratio = cropedWidth / cropedHeight,\n            selectWidth = (cropedWidth) * (naturalWidth/scaledWidth),\n            selectHeight = (cropedHeight) * (naturalHeight/scaledHeight);\n        /*$picture.css('height', scaledHeight);\n*/\n        this.img = $.Jcrop($picture, {\n            trueSize: [naturalWidth, naturalHeight],\n            setSelect: [0, 0, selectWidth, selectHeight],\n            aspectRatio: ratio,\n            keySupport: false,\n            allowSelect: false,\n            onSelect: function(c) {\n                self.onSelect(c);\n            }\n        });\n\t}\n\n\tcrop(postData){\n        var self = this;\n    \tvar cropImgUrl = app.imgCropUrl;\n\n    \tpostData = postData || {};\n\n    \tpostData = $.extend(this.img.tellScaled(), postData, {width: this.element.width(), height: this.element.height(), group: self.config.group});\n        $.post(cropImgUrl, postData ,function(response){\n            self.afterCrop(response);\n        })\n    }\n\n    onSelect(c) {\n\t\t//override it\n\t}\n\n\tafterCrop(response) {\n\t\t//override it\n\t}\n}\n\nexport default EsImageCrop;"]}