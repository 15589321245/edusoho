'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _fileChoose = require('../../file-chooser/file-choose');

var _fileChoose2 = _interopRequireDefault(_fileChoose);

var _chooserUi = require('../widget/chooser-ui.js');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Flash = function () {
  function Flash() {
    _classCallCheck(this, Flash);

    this.$mediaId = $('[name="mediaId"]');
    this.init();
  }

  _createClass(Flash, [{
    key: 'init',
    value: function init() {
      (0, _chooserUi.showChooserType)(this.$mediaId);
      this.initStep2Form();
      this.initStep3Form();
      this.initFileChooser();
    }
  }, {
    key: 'initStep2Form',
    value: function initStep2Form() {
      var $form = $('#step2-form');
      var validator = $form.validate({
        rules: {
          title: {
            required: true,
            maxlength: 50,
            trim: true
          },
          mediaId: 'required'
        },
        messages: {
          mediaId: {
            required: '请上传或选择%display%'
          }
        }
      });

      $form.data('validator', validator);
    }
  }, {
    key: 'initStep3Form',
    value: function initStep3Form() {
      var $step3_form = $("#step3-form");

      var validator = $step3_form.validate({
        onkeyup: false,
        rules: {
          finishDetail: {
            required: true,
            positive_integer: true,
            max: 300
          }
        },
        messages: {
          finishDetail: {
            required: '请输入至少观看多少分钟'
          }
        }
      });

      $step3_form.data('validator', validator);
    }
  }, {
    key: 'initFileChooser',
    value: function initFileChooser() {
      var _this = this;

      var fileChooser = new _fileChoose2.default();
      fileChooser.on('select', function (file) {
        (0, _chooserUi.chooserUiClose)();
        _this.$mediaId.val(file.id);
      });
    }
  }]);

  return Flash;
}();