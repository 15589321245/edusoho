/*
 * grunt-contrib-concat
 * http://gruntjs.com/
 *
 * Copyright (c) 2015 "Cowboy" Ben Alman, contributors
 * Licensed under the MIT license.
 */

'use strict';

module.exports = function(grunt) {
	 var fs        = require('fs');
	 var zip = new require('./lib/nodezip')();

	  grunt.registerMultiTask('zip', 'files', function () {
	  	
	  	this.files.forEach(function(f) {
	  		f.src.filter(function(filepath) {
	  			if (!grunt.file.exists(filepath)) {
				          grunt.log.warn('Source file "' + filepath + '" not found.');
				          return false;
				} else {
				          return true;
				}
	  		}).map(function(filepath, i) {

	  			if (grunt.file.isDir(filepath)) {
			          		return;
			        	}

			        	var src = grunt.file.read(filepath);
			        	var parentPathIndex = filepath.indexOf("/");
		  		if (parentPathIndex != -1) {
		  			filepath = filepath.substring(parentPathIndex + 1);
		  		}

			        	zip.file(filepath, src);
	  		});

	  		var data = zip.generate( { base64 : false, compression : 'DEFLATE' } );
			fs.writeFileSync(f.dest, data, 'binary');
	  	});
	  });
};
