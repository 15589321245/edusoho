{"version":3,"sources":["app/Resources/static-src/app/common/component/persona-multi-input/list.js"],"names":["List","props","listId","$list","$item","sortId","$","sortable","element","itemSelector","ajax","data","children","remove","append","context","sortItem","onChange","on","dataSourceUi","name","length","listClassName","map","item","i","itemId","seq","avatar","nickname","isVisible","onChecked","event","removeItem","contextTypes","PropTypes","func"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;IAEqBA,I;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4GACXA,KADW;;AAEjB,UAAKC,MAAL,GAAc,4BAAd;AACA,UAAKC,KAAL,GAAa,IAAb;AACA,UAAKC,KAAL,GAAa,IAAb;AAJiB;AAKlB;;;;wCAEoB;AAAA;;AACnB,UAAIC,eAAa,KAAKH,MAAtB;AACA,WAAKC,KAAL,GAAaG,EAAED,MAAF,CAAb;AACA,UAAI,KAAKJ,KAAL,CAAWM,QAAf,EAAyB;AACvB,gCAAS;AACPC,mBAASH,MADF;AAEPI,wBAAc,IAFP;AAGPC,gBAAM;AAHC,SAAT,EAIG,UAACC,IAAD,EAAU;AACX;AACAL,YAAED,MAAF,EAAUO,QAAV,GAAqBC,MAArB;AACAP,YAAED,MAAF,EAAUS,MAAV,CAAiB,OAAKV,KAAtB;AACA,iBAAKW,OAAL,CAAaC,QAAb,CAAsBL,IAAtB;AACD,SATD;AAUA,aAAKM,QAAL,CAAcZ,MAAd;AACD;AACF;;;6BAEQA,M,EAAQ;AAAA;;AACf;AACA,WAAKF,KAAL,CAAWe,EAAX,CAAc,WAAd,EAA2B,IAA3B,EAAiC,YAAM;AACrC,eAAKd,KAAL,GAAaE,EAAED,MAAF,EAAUO,QAAV,CAAmB,kBAAnB,CAAb;AACD,OAFD;AAGD;;;6BAEQ;AAAA;;AAAA,UACCO,YADD,GACkB,KAAKlB,KADvB,CACCkB,YADD;;AAEP,UAAIC,OAAO,EAAX;AACA,UAAID,aAAaE,MAAb,GAAsB,CAA1B,EAA8B;AAC5BD,eAAO,YAAP;AACD;AACD,aACE;AAAA;AAAA,UAAI,IAAI,KAAKlB,MAAb,EAAqB,yCAAuCkB,IAAvC,SAA+C,KAAKnB,KAAL,CAAWqB,aAA/E;AAEEH,qBAAaI,GAAb,CAAkB,UAACC,IAAD,EAAMC,CAAN,EAAY;AAC5B,iBACE;AAAA;AAAA,cAAI,WAAU,iBAAd,EAAgC,IAAID,KAAKE,MAAzC,EAAiD,KAAKD,CAAtD,EAAyD,YAAUD,KAAKG,GAAxE;AACI,mBAAK1B,KAAL,CAAWM,QAAX,IAAuB,qCAAG,WAAU,oEAAb,GAD3B;AAEE,mDAAK,WAAU,gCAAf,EAAgD,KAAMiB,KAAKI,MAA3D,GAFF;AAGE;AAAA;AAAA,gBAAM,WAAU,uDAAhB;AAA0EJ,mBAAKK;AAA/E,aAHF;AAIE;AAAA;AAAA;AAAO,uDAAO,MAAK,UAAZ,EAAuB,SAASL,KAAKM,SAArC,EAAgD,UAAW;AAAA,yBAAO,OAAKf,OAAL,CAAagB,SAAb,CAAuBC,KAAvB,CAAP;AAAA,iBAA3D,EAAiG,OAAOR,KAAKE,MAA7G,GAAP;AAAA;AAAA,aAJF;AAKE;AAAA;AAAA,gBAAG,WAAU,0BAAb,EAAwC,SAAS;AAAA,yBAAO,OAAKX,OAAL,CAAakB,UAAb,CAAwBD,KAAxB,CAAP;AAAA,iBAAjD,EAAwF,gBAAcR,KAAKE,MAA3G;AACE,mDAAG,WAAY,iCAAf;AADF,aALF;AAQE,qDAAO,MAAK,QAAZ,EAAqB,MAAK,OAA1B,EAAkC,OAAM,mBAAxC;AARF,WADF;AAYD,SAbD;AAFF,OADF;AAoBD;;;;;;kBA3DkB1B,I;AA4DpB;;AAEDA,KAAKkC,YAAL,GAAoB;AAClBD,cAAY,gBAAME,SAAN,CAAgBC,IADV;AAElBpB,YAAU,gBAAMmB,SAAN,CAAgBC,IAFR;AAGlBL,aAAU,gBAAMI,SAAN,CAAgBC;AAHR,CAApB","file":"list.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import React, { Component } from 'react';\nimport sortList from 'common/sortable';\nimport { getRandomString } from '../multi-input/part';\n\nexport default class List extends Component {\n  constructor(props) {\n    super(props);\n    this.listId = getRandomString();\n    this.$list = null;\n    this.$item = null;\n  }\n\n   componentDidMount() {\n    let sortId = `#${this.listId}`;\n    this.$list = $(sortId);\n    if (this.props.sortable) {\n      sortList({\n        element: sortId,\n        itemSelector: \"li\",\n        ajax: false,\n      }, (data) => {\n        //@TODO需优化成React的组件\n        $(sortId).children().remove();\n        $(sortId).append(this.$item);\n        this.context.sortItem(data);\n      });\n      this.onChange(sortId);\n    }\n  }\n\n  onChange(sortId) {\n    //sortList操作了真实的DOM需要还原；\n    this.$list.on('mousedown', 'li', () => {\n      this.$item = $(sortId).children('.list-group-item');\n    })\n  }\n\n  render() {\n    const { dataSourceUi } = this.props;\n    let name = '';\n    if( dataSourceUi.length > 0 ) {\n      name = 'list-group';\n    }\n    return (\n      <ul id={this.listId} className={`multi-list sortable-list ${name} ${this.props.listClassName}`}>\n      {\n        dataSourceUi.map( (item,i) => {\n          return (\n            <li className=\"list-group-item\" id={item.itemId} key={i} data-seq={item.seq}>\n              { this.props.sortable && <i className=\"es-icon es-icon-yidong mrl color-gray inline-block vertical-middle\"></i> }\n              <img className=\"avatar-sm avatar-sm-square mrm\" src ={item.avatar}/> \n              <span className=\"label-name text-overflow inline-block vertical-middle\">{ item.nickname }</span>\n              <label><input type=\"checkbox\" checked={item.isVisible} onChange= {event=>this.context.onChecked(event)} value={item.itemId}/>显示</label>\n              <a className=\"pull-right link-gray mtm\" onClick={event=>this.context.removeItem(event)} data-item-id={item.itemId}>\n                <i className = \"es-icon es-icon-close01 text-12\"></i>\n              </a>\n              <input type=\"hidden\" name=\"ids[]\" value=\"{{ item.itemId }}\"/>   \n            </li>\n          )\n        })\n      }\n      </ul>\n    )\n  }\n};\n\nList.contextTypes = {\n  removeItem: React.PropTypes.func,\n  sortItem: React.PropTypes.func,\n  onChecked:React.PropTypes.func,\n};"]}