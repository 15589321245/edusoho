{
	"info": {
		"name": "Course2.0 copy",
		"_postman_id": "fca1242b-0fed-200d-fa3d-dcfcf487c8c7",
		"description": "课程--CourseSet\n\n教学计划--Course\n\n课时任务--task",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "00_regist",
			"description": "注册接口\n",
			"item": [
				{
					"name": "phoneRegist_error_smsCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"smsCode invalid\"] = (jsonData.error.name === \"sms_invalid\")&(jsonData.error.message ===  \"手机短信验证错误，请重新注册\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "注册手机号",
									"key": "phone",
									"type": "text",
									"value": "19878878932"
								},
								{
									"description": "密码",
									"key": "password",
									"type": "text",
									"value": "classroom"
								},
								{
									"description": "短信验证码",
									"key": "smsCode",
									"type": "text",
									"value": "1234567"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/regist",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"regist"
							]
						},
						"description": "手机号注册（短信验证码错误）"
					},
					"response": []
				},
				{
					"name": "phoneRegist_error_phoneNum ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"phoneNum invalid\"] = jsonData.error.name === \"phone_invalid\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "phone",
									"type": "text",
									"value": "a19878878932"
								},
								{
									"key": "password",
									"type": "text",
									"value": "classroom"
								},
								{
									"key": "smsCode",
									"type": "text",
									"value": "21312312"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/regist",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"regist"
							]
						},
						"description": "手机号注册（手机号格式错误）"
					},
					"response": []
				},
				{
					"name": "phoneRegist_error_phoneExist  ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The phoneNum has been registered ! \"] = jsonData.error.name === \"phone_exist\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "phone",
									"type": "text",
									"value": "{{phoneNum}}"
								},
								{
									"key": "password",
									"type": "text",
									"value": "123456"
								},
								{
									"key": "smsCode",
									"type": "text",
									"value": "123123"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/regist",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"regist"
							]
						},
						"description": "手机号注册（手机号已被其他账号绑定）"
					},
					"response": []
				},
				{
					"name": "regist_error_password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									"function getNowFormatDate() {",
									"           var day = new Date();",
									"           var Year = 0;",
									"           var Month = 0;",
									"           var Day = 0;",
									"           var CurrentDate = \"\";",
									"           Year = day.getFullYear(); //支持IE和火狐浏览器.",
									"           Month = day.getMonth() + 1;",
									"           Day = day.getDate();",
									"           CurrentDate += Year;",
									"           if (Month >= 10) {",
									"               CurrentDate += Month;",
									"           }",
									"           else {",
									"               CurrentDate += \"0\" + Month;",
									"           }",
									"           if (Day >= 10) {",
									"               CurrentDate += Day;",
									"           }",
									"           else {",
									"               CurrentDate += \"0\" + Day;",
									"           }",
									"           return CurrentDate;",
									"       }",
									"",
									"       var random = getNowFormatDate() + Math.floor(Math.random() * 1000);",
									"       postman.setEnvironmentVariable(\"random_email\", (random+\"@zfq.com\"));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The password length is invalid\"] = jsonData.error.name === \"password_invalid\";",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"type": "text",
									"value": "{{random_email}}"
								},
								{
									"key": "password",
									"type": "text",
									"value": "1234"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/regist",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"regist"
							]
						},
						"description": "用户注册（密码不符合规范）"
					},
					"response": []
				},
				{
					"name": "smsSend_error_phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The phoneNum format is error !\"] = ((jsonData.error.name === \"error\")&(jsonData.error.message.indexOf(\"手机号错误\") > -1 ));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "de4lu85ljw0s440wssc8cccs4cws48g",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "phoneNumber",
									"type": "text",
									"value": "1234"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/smsSend",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"smsSend"
							]
						},
						"description": "发送短信-手机号错误"
					},
					"response": []
				},
				{
					"name": "smsSend_error_phoneExist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The phoneNum has been registered ! \"] = (jsonData.error.name === \"error\")&( jsonData.error.message === \"该手机号码已被其他用户绑定\");",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "de4lu85ljw0s440wssc8cccs4cws48g",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "phoneNumber",
									"type": "text",
									"value": "{{phoneNum}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/smsSend",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"smsSend"
							]
						},
						"description": "发送短信-手机号已被绑定"
					},
					"response": []
				}
			]
		},
		{
			"name": "01_login",
			"description": "",
			"item": [
				{
					"name": "phone_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"login success\"] = (jsonData.user.id === data.userId)&((jsonData.token !== null))&(responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\")&responseBody.has(\"locked\")&responseBody.has(\"gender\"));",
									"",
									"",
									"// tests[\"Reward-Point-Notify  is present\"] = postman.getResponseHeader(\"Reward-Point-Notify\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "{{phoneNum}}"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "{{phonePWD}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"login"
							]
						},
						"description": "手机号登录（正确数据）"
					},
					"response": []
				},
				{
					"name": "email_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"login success\"] = (jsonData.user.id === data.userId)&((jsonData.token !== null))&(responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\")&responseBody.has(\"locked\")&responseBody.has(\"gender\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "{{email}}"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "{{emailPWD}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"login"
							]
						},
						"description": "邮箱登录（正确数据）"
					},
					"response": []
				},
				{
					"name": "login_encryptPass",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"login success\"] = (jsonData.user.id === data.userId)&((jsonData.token !== null))&(responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\")&responseBody.has(\"locked\")&responseBody.has(\"gender\"));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "{{userName}}"
								},
								{
									"key": "encrypt_password",
									"type": "text",
									"value": "{{encryptPWD}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"login"
							]
						},
						"description": "登录-密码加密传输"
					},
					"response": [
						{
							"id": "ed81c508-fcc8-47f0-98e0-7823f3f49784",
							"name": "login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_username",
											"value": "demost1",
											"type": "text"
										},
										{
											"key": "_password",
											"value": "123456",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/mapi_v2/User/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"mapi_v2",
										"User",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": "POST, GET"
								},
								{
									"description": "",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"description": "",
									"key": "Access-Control-Max-Age",
									"name": "Access-Control-Max-Age",
									"value": "30"
								},
								{
									"description": "",
									"key": "Access-Control-Request-Headers",
									"name": "Access-Control-Request-Headers",
									"value": "token"
								},
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Mon, 05 Dec 2016 08:58:38 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx"
								},
								{
									"description": "",
									"key": "Set-Cookie",
									"name": "Set-Cookie",
									"value": "PHPSESSID=21ar3b9pnvl3ndv8bkkb7jeuu2; path=/; HttpOnly"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.5.9-1ubuntu4.14"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "demo.edusoho.com",
									"path": "/",
									"secure": false,
									"value": "21ar3b9pnvl3ndv8bkkb7jeuu2",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "174",
							"body": "{\"token\":\"av3or0jndxk4w0ow4ocg0ssg0w8c4ww\",\"user\":{\"id\":\"19715\",\"email\":\"****\",\"verifiedMobile\":\"****\",\"locale\":null,\"uri\":\"\",\"nickname\":\"demost1\",\"title\":\"\",\"type\":\"import\",\"smallAvatar\":\"http:\\/\\/demo.edusoho.com\\/files\\/user\\/2016\\/10-18\\/1438455a0630643119.png?7.3.4\",\"mediumAvatar\":\"http:\\/\\/demo.edusoho.com\\/files\\/user\\/2016\\/10-18\\/1438455a00a5837296.png?7.3.4\",\"largeAvatar\":\"http:\\/\\/demo.edusoho.com\\/files\\/user\\/2016\\/10-18\\/14384559fa2a501644.png?7.3.4\",\"emailVerified\":\"0\",\"setup\":\"1\",\"roles\":[\"ROLE_USER\"],\"promotedSeq\":\"0\",\"locked\":\"0\",\"lastPasswordFailTime\":\"0\",\"lockDeadline\":\"0\",\"consecutivePasswordErrorTimes\":\"0\",\"createdTime\":\"2016-10-18T14:26:55+08:00\",\"updatedTime\":\"1480926869\",\"inviteCode\":null,\"orgId\":\"1\",\"orgCode\":\"1.\",\"registeredWay\":\"\",\"currentIp\":\"124.160.104.78\",\"truename\":\"\",\"idcard\":\"\",\"gender\":\"secret\",\"iam\":\"\",\"birthday\":null,\"city\":\"\",\"mobile\":\"****\",\"qq\":\"\",\"signature\":\"\",\"about\":null,\"company\":\"\",\"job\":\"\",\"school\":\"\",\"class\":\"\",\"weibo\":\"\",\"weixin\":\"\",\"isQQPublic\":\"0\",\"isWeixinPublic\":\"0\",\"isWeiboPublic\":\"0\",\"site\":\"\",\"vip\":null,\"following\":\"1\",\"follower\":\"1\"}}"
						}
					]
				},
				{
					"name": "login_error_password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"password_error\"] = jsonData.error.name === \"password_error\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "{{userName}}"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"login"
							]
						},
						"description": "用户登录（错误密码）"
					},
					"response": []
				},
				{
					"name": "login_error_username",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"username_error\"] = jsonData.error.name === \"username_error\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "errorname"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"login"
							]
						},
						"description": "用户登录（错误用户名）"
					},
					"response": []
				},
				{
					"name": "bind_login_QQ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"login success\"] = responseBody.has(\"token\")&responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"type": "text",
									"value": "紫陌青竹"
								},
								{
									"key": "id",
									"type": "text",
									"value": "0B9E77D5C05E4AA32FD98C1CB3EEA87B"
								},
								{
									"key": "type",
									"type": "text",
									"value": "qq"
								},
								{
									"key": "avatar",
									"type": "text",
									"value": "http://q.qlogo.cn/qqapp/1103424113/E54FAF39D50ABCFF233E1E4293ED8C1A/100"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users/bind_login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"bind_login"
							]
						},
						"description": "第三方登录_QQ登录（正确数据）"
					},
					"response": [
						{
							"id": "00975ac0-842b-4862-8cd0-90b05bdc752d",
							"name": "QQ",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "紫陌青竹1213",
											"type": "text"
										},
										{
											"key": "id",
											"value": "0B9E77D5C05E4AA32FD98C1CB3EEA87B",
											"type": "text"
										},
										{
											"key": "type",
											"value": "qq",
											"type": "text"
										},
										{
											"key": "avatar",
											"value": "http://q.qlogo.cn/qqapp/1103424113/E54FAF39D50ABCFF233E1E4293ED8C1A/100",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/bind_login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"bind_login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 07:00:35 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "176",
							"body": "{\"user\":{\"id\":\"301\",\"locale\":null,\"nickname\":\"\\u7d2b\\u964c\\u9752\\u7af9\",\"title\":\"\",\"smallAvatar\":\"http:\\/\\/trymob.edusoho.cn\\/files\\/user\\/2016\\/09-27\\/1124077424a1774463.jpg\",\"mediumAvatar\":\"http:\\/\\/trymob.edusoho.cn\\/files\\/user\\/2016\\/09-27\\/1124077409f8131681.jpg\",\"largeAvatar\":\"http:\\/\\/trymob.edusoho.cn\\/files\\/user\\/2016\\/09-27\\/112407737334084564.jpg\",\"roles\":[\"ROLE_USER\"],\"promotedSeq\":\"0\",\"updatedTime\":\"1480474479\",\"inviteCode\":null,\"orgCode\":\"1.\",\"orgId\":\"1\",\"registeredWay\":\"\",\"about\":\"\"},\"token\":\"aadh49tuq7kso0kowksgccog8ggk4oo\"}"
						}
					]
				},
				{
					"name": "bind_login_weixin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"login success\"] = responseBody.has(\"token\")&responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"type": "text",
									"value": "风之吟"
								},
								{
									"key": "id",
									"type": "text",
									"value": "ogX_ejljVdx6v_FY3w14vMRVmpkA"
								},
								{
									"key": "type",
									"type": "text",
									"value": "weixinmob"
								},
								{
									"key": "avatar",
									"type": "text",
									"value": "http://wx.qlogo.cn/mmopen/ibd1bDs9iaLBr8lib0DEppKqqTlpagvFB6DV04ribicibt4Hj7Gj9anaTyIF2iaId5J6r1ibyyWs3AD3xbfHl49Hibx2jvu9n0reWN0vw/0"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users/bind_login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"bind_login"
							]
						},
						"description": "第三方登录_微信登录（正确数据）"
					},
					"response": [
						{
							"id": "decb8db2-4889-4a31-b88c-b3d75a4e09a0",
							"name": "微信",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "name",
											"value": "风之吟",
											"type": "text"
										},
										{
											"key": "id",
											"value": "ogX_ejljVdx6v_FY3w14vMRVmpkA",
											"type": "text"
										},
										{
											"key": "type",
											"value": "weixinmob",
											"type": "text"
										},
										{
											"key": "avatar",
											"value": "http://wx.qlogo.cn/mmopen/ibd1bDs9iaLBr8lib0DEppKqqTlpagvFB6DV04ribicibt4Hj7Gj9anaTyIF2iaId5J6r1ibyyWs3AD3xbfHl49Hibx2jvu9n0reWN0vw/0",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/bind_login",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"bind_login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Tue, 13 Dec 2016 09:33:03 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "339",
							"body": "{\"user\":{\"id\":\"415\",\"locale\":null,\"nickname\":\"\\u98ce\\u4e4b\\u541ffop\",\"title\":\"\",\"smallAvatar\":\"http:\\/\\/trymob.edusoho.cn\\/files\\/user\\/2016\\/12-13\\/0310135a415e644675.jpg\",\"mediumAvatar\":\"http:\\/\\/trymob.edusoho.cn\\/files\\/user\\/2016\\/12-13\\/0310135988e5136669.jpg\",\"largeAvatar\":\"http:\\/\\/trymob.edusoho.cn\\/files\\/user\\/2016\\/12-13\\/03101358cbde280928.jpg\",\"roles\":[\"ROLE_USER\"],\"promotedSeq\":\"0\",\"updatedTime\":\"1481617424\",\"inviteCode\":null,\"orgCode\":\"1.\",\"orgId\":\"1\",\"registeredWay\":\"\",\"about\":\"\"},\"token\":\"heqglm28olws0gc00g4csk0w048o0c8\"}"
						}
					]
				},
				{
					"name": "nickname_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.token){",
									"    tests[\"login success !\"] = true;",
									"    postman.setEnvironmentVariable(\"token\", jsonData.token);",
									"}",
									"else{",
									"     tests[\"login success !\"] = false;",
									"}",
									"tests[\"getUserInfo success\"] = (jsonData.user.id === data.userId)&(responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\")&responseBody.has(\"locked\")&responseBody.has(\"gender\"));",
									"if(jsonData.user.vip){",
									"    postman.setEnvironmentVariable(\"myVipId\", jsonData.user.vip.levelId);",
									"}",
									"//&responseBody.has(\"vip\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "{{userName}}"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "{{userPWD}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"login"
							]
						},
						"description": "用户名登录（正确数据）"
					},
					"response": []
				},
				{
					"name": "loginWithToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.token){",
									"    tests[\"login success !\"] = true;",
									"    postman.setEnvironmentVariable(\"token\", jsonData.token);",
									"}",
									"else{",
									"     tests[\"login success !\"] = false;",
									"}",
									"tests[\"getUserInfo success\"] = (jsonData.user.id === data.userId)&(responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\")&responseBody.has(\"locked\")&responseBody.has(\"gender\"));",
									"if(jsonData.user.vip){",
									"    postman.setEnvironmentVariable(\"myVipId\", jsonData.user.vip.levelId);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/mapi_v2/User/loginWithToken",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"loginWithToken"
							]
						},
						"description": "用户自动登录或扫码登录"
					},
					"response": []
				},
				{
					"name": "loginScoolWithSite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*var jsonData = JSON.parse(responseBody);",
									"if(jsonData.token){",
									"    tests[\"login success !\"] = true;",
									"    postman.setEnvironmentVariable(\"token\", jsonData.token);",
									"}",
									"else{",
									"     tests[\"login success !\"] = false;",
									"}",
									"tests[\"getUserInfo success\"] = (jsonData.user.id === data.userId)&(responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\")&responseBody.has(\"locked\")&responseBody.has(\"gender\"));",
									"if(jsonData.user.vip){",
									"    postman.setEnvironmentVariable(\"myVipId\", jsonData.user.vip.levelId);",
									"}*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}",
								"disabled": true
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/mapi_v2/School/loginSchoolWithSite?v=1&version=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"loginSchoolWithSite"
							],
							"query": [
								{
									"equals": true,
									"key": "v",
									"value": "1"
								},
								{
									"equals": true,
									"key": "version",
									"value": "2 "
								}
							]
						},
						"description": "用户自动登录或扫码登录"
					},
					"response": []
				},
				{
					"name": "teacher_login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[data.teacherName+\" userId is \"+data.teacherId] = jsonData.user.id === data.teacherId;",
									"if(jsonData.token){",
									"    tests[\"token is not null\"] = true;",
									"    postman.setEnvironmentVariable(\"teacherToken\", jsonData.token);",
									"}",
									"else{",
									"     tests[\"token is not null\"] = false;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "{{teacherName}}"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "{{teacherPWD}}"
								},
								{
									"key": "",
									"type": "text",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"login"
							]
						},
						"description": "教师登录 "
					},
					"response": []
				},
				{
					"name": "smsSend_bind",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "auth-token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "mobile",
									"type": "text",
									"value": "18268096715"
								},
								{
									"key": "type",
									"type": "text",
									"value": "sms_bind"
								},
								{
									"key": "img_code",
									"type": "text",
									"value": "ukwzv"
								},
								{
									"key": "verified_token",
									"type": "text",
									"value": "1yElWHyObeljadBrQxKvKD402WXAxctE1",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/sms_codes",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"sms_codes"
							]
						},
						"description": "第三方登录手机号绑定，发送短信码"
					},
					"response": [
						{
							"id": "f1f100bb-f0ee-4eeb-8e5c-ccbf23aae512",
							"name": "不带verified_token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "sms_bind",
										"value": "aadh49tuq7kso0kowksgccog8ggk4oo",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms_bind",
											"type": "text"
										},
										{
											"key": "img_code",
											"value": "ukwzv",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "1yElWHyObeljadBrQxKvKD402WXAxctE1",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/sms_codes",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"sms_codes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 08:13:07 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "155",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"\\u975e\\u6cd5\\u8bf7\\u6c42\"}}"
						},
						{
							"id": "8011aee8-56eb-4c89-9124-2cf9c847cf62",
							"name": "该手机号已被绑",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "sms_bind",
										"value": "aadh49tuq7kso0kowksgccog8ggk4oo",
										"enabled": true,
										"warning": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms_bind",
											"type": "text"
										},
										{
											"key": "img_code",
											"value": "djwlm",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "hOjlVb3YrNOOOeqRFMtxhnmJOEdmpRAT",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/sms_codes",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"sms_codes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 07:04:50 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "193",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"\\u8be5\\u624b\\u673a\\u53f7\\u5df2\\u88ab\\u7ed1\\u5b9a\"}}"
						},
						{
							"id": "f1b3285c-b856-46c7-b6ff-5db360e5555d",
							"name": "图形验证码错误",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "sms_bind",
										"value": "aadh49tuq7kso0kowksgccog8ggk4oo",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms_bind",
											"type": "text"
										},
										{
											"key": "img_code",
											"value": "aallv11111",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "KnvO9rk8lngVZS5X879OR4DtAjPD75iu",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/sms_codes",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"sms_codes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 07:15:40 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "212",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"\\u56fe\\u5f62\\u9a8c\\u8bc1\\u7801\\u9519\\u8bef\"}}"
						},
						{
							"id": "0ece19be-526c-4752-a3e3-865d31bc9d32",
							"name": "手机号错误:182680967151",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "sms_bind",
										"value": "aadh49tuq7kso0kowksgccog8ggk4oo",
										"enabled": true,
										"warning": ""
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "mobile",
											"value": "182680967151",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms_bind",
											"type": "text"
										},
										{
											"key": "img_code",
											"value": "djwlm",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "hOjlVb3YrNOOOeqRFMtxhnmJOEdmpRAT",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/sms_codes",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"sms_codes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 07:06:07 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "233",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"\\u624b\\u673a\\u53f7\\u9519\\u8bef:182680967151\"}}"
						},
						{
							"id": "1ccaac40-f91d-4fbc-a6c3-fb83f26195fd",
							"name": "图形验证码已过期",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "sms_bind",
										"value": "aadh49tuq7kso0kowksgccog8ggk4oo",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms_bind",
											"type": "text"
										},
										{
											"key": "img_code",
											"value": "ukwzv",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "1yElWHyObeljadBrQxKvKD402WXAxctE",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/sms_codes",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"sms_codes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 07:19:55 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "161",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"\\u56fe\\u5f62\\u9a8c\\u8bc1\\u7801\\u5df2\\u8fc7\\u671f\"}}"
						}
					]
				},
				{
					"name": "modifyPassword_bind",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "password",
									"type": "text",
									"value": "111222"
								},
								{
									"key": "sms_code",
									"type": "text",
									"value": "324391"
								},
								{
									"key": "verified_token",
									"type": "text",
									"value": "u9auyPBaE26iV58WRJMoLuNkLYmJq20b"
								},
								{
									"key": "type",
									"type": "text",
									"value": "sms"
								},
								{
									"key": "mobile",
									"type": "text",
									"value": "18268096715"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users/password",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"password"
							]
						},
						"description": "第三方绑定手机，设置密码"
					},
					"response": [
						{
							"id": "f244f7be-c9f3-4832-924e-fedf22f3a343",
							"name": "短信验证码错误",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "auth-token",
										"value": "",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "1112223",
											"type": "text"
										},
										{
											"key": "sms_code",
											"value": "3707611",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "UFjJ2VixiN5NRnCxF9MUEAFzRGxY6KH7",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/password",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 06:16:03 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "473",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"\\u9a8c\\u8bc1\\u7801\\u9519\\u8bef\"}}"
						},
						{
							"id": "3640ce9e-9ee7-40db-8fdd-2651d93174a8",
							"name": "密码不符合要求-过长",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "auth-token",
										"value": "",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "1234567890123456789012345678901234567890",
											"type": "text"
										},
										{
											"key": "sms_code",
											"value": "049952",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "GsAJZgwTuAd2vpy9ukkci7jxcrmGJaAU",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/password",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 06:37:10 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "143",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"\\u5bc6\\u7801\\u4e0d\\u7b26\\u5408\\u8981\\u6c42\"}}"
						},
						{
							"id": "29e25d47-1793-42b7-a82a-a2c0db5f9e90",
							"name": "验证码已过期",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "auth-token",
										"value": "",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "123456",
											"type": "text"
										},
										{
											"key": "sms_code",
											"value": "370761",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "UFjJ2VixiN5NRnCxF9MUEAFzRGxY6KH7",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/password",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 06:18:00 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "194",
							"body": "{\"error\":{\"code\":\"sms_code_expired\",\"message\":\"\\u9a8c\\u8bc1\\u7801\\u5df2\\u8fc7\\u671f\"}}"
						},
						{
							"id": "8ce3c5e0-c549-4853-aff1-d02d3f77b8f1",
							"name": "密码重置成功",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "auth-token",
										"value": "",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "111222",
											"type": "text"
										},
										{
											"key": "sms_code",
											"value": "370761",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "UFjJ2VixiN5NRnCxF9MUEAFzRGxY6KH7",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/password",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 06:14:40 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "198",
							"body": "{\"userId\":\"315\"}"
						},
						{
							"id": "d9133ca0-0fb4-4571-9d4c-6e352636e240",
							"name": "密码不符合要求",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "auth-token",
										"value": "",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "04",
											"type": "text"
										},
										{
											"key": "sms_code",
											"value": "049952",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "GsAJZgwTuAd2vpy9ukkci7jxcrmGJaAU",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/password",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 06:36:20 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "198",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"\\u5bc6\\u7801\\u4e0d\\u7b26\\u5408\\u8981\\u6c42\"}}"
						},
						{
							"id": "d50eb4d3-07ae-4470-858f-36fc08dbce3f",
							"name": "找不到资源User#",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "auth-token",
										"value": "",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "111222",
											"type": "text"
										},
										{
											"key": "sms_code",
											"value": "324391",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "u9auyPBaE26iV58WRJMoLuNkLYmJq20b",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/password",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"password"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 06:30:32 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "150",
							"body": "{\"code\":{\"attributes\":{},\"request\":{},\"query\":{},\"server\":{},\"files\":{},\"cookies\":{},\"headers\":{}},\"message\":\":\\u627e\\u4e0d\\u5230\\u8d44\\u6e90User#\",\"previous\":[{\"message\":\"1\\/1 Topxia\\\\Common\\\\Exception\\\\ResourceNotFoundException: :\\u627e\\u4e0d\\u5230\\u8d44\\u6e90User#\",\"trace\":[\"1.  in \\/var\\/www\\/trymob.edusoho.cn\\/src\\/Topxia\\/Service\\/User\\/Impl\\/UserServiceImpl.php line 396\",\"2. at Topxia\\\\Service\\\\User\\\\Impl\\\\UserServiceImpl-\\u003EchangePassword(...args...) in \\/var\\/www\\/trymob.edusoho.cn\\/api\\/src\\/Topxia\\/Api\\/Resource\\/User\\/Password.php line 62\",\"3. at Topxia\\\\Api\\\\Resource\\\\User\\\\Password-\\u003Epost(...args...)\",\"4. at call_user_func_array(...args...) in \\/var\\/www\\/trymob.edusoho.cn\\/vendor\\/symfony\\/symfony\\/src\\/Symfony\\/Component\\/HttpKernel\\/HttpKernel.php line 144\",\"5. at Symfony\\\\Component\\\\HttpKernel\\\\HttpKernel-\\u003EhandleRaw(...args...) in \\/var\\/www\\/trymob.edusoho.cn\\/vendor\\/symfony\\/symfony\\/src\\/Symfony\\/Component\\/HttpKernel\\/HttpKernel.php line 64\",\"6. at Symfony\\\\Component\\\\HttpKernel\\\\HttpKernel-\\u003Ehandle(...args...) in \\/var\\/www\\/trymob.edusoho.cn\\/vendor\\/silex\\/silex\\/src\\/Silex\\/Application.php line 496\",\"7. at Silex\\\\Application-\\u003Ehandle(...args...) in \\/var\\/www\\/trymob.edusoho.cn\\/vendor\\/silex\\/silex\\/src\\/Silex\\/Application.php line 477\",\"8. at Silex\\\\Application-\\u003Erun(...args...) in \\/var\\/www\\/trymob.edusoho.cn\\/api\\/index.php line 90\",\"9. at include(...args...) in \\/var\\/www\\/trymob.edusoho.cn\\/web\\/app_dev.php line 25\"]}]}"
						},
						{
							"id": "284914c5-2bb9-4f07-bcb3-82c466000078",
							"name": "smsToken字段为",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "auth-token",
										"value": "",
										"enabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "password",
											"value": "111222",
											"type": "text"
										},
										{
											"key": "sms_code",
											"value": "910516",
											"type": "text"
										},
										{
											"key": "verified_token",
											"value": "",
											"type": "text"
										},
										{
											"key": "type",
											"value": "sms",
											"type": "text"
										},
										{
											"key": "mobile",
											"value": "18268096715",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/users/password",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"users",
										"password"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 08 Dec 2016 06:10:50 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "trymob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "qei76m5u3iuh797li43gho1h66",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "200",
							"body": "{\"error\":{\"code\":\"500\",\"message\":\"smsToken\\u5b57\\u6bb5\\u4e3a\\u7a7a\"}}"
						}
					]
				}
			]
		},
		{
			"name": "02_courseSet",
			"description": "课程",
			"item": [
				{
					"name": "getCourseSetInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getCourseSetInfo success\"] = (jsonData.id === data.courseSetId)&(responseBody.has(\"title\")&responseBody.has(\"summary\")&responseBody.has(\"audiences\")&responseBody.has(\"cover\")&responseBody.has(\"ratingNum\")&responseBody.has(\"studentNum\")&responseBody.has(\"discount\")&responseBody.has(\"discountId\")&responseBody.has(\"teachers\")&responseBody.has(\"maxCoursePrice\")&responseBody.has(\"minCoursePrice\")&responseBody.has(\"maxOriginPrice\")&responseBody.has(\"minOriginPrice\"));",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/course_sets/{{courseSetId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets",
								"{{courseSetId}}"
							]
						},
						"description": "获取课程信息"
					},
					"response": []
				},
				{
					"name": "getCourseSetInfo_error_courseSetId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The courseSet is not existed !\"] = (jsonData.error.code === 10)&(jsonData.error.message === \"课程不存在\");",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/course_sets/errorId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets",
								"errorId"
							]
						},
						"description": "courseSetId错误，获取课程信息失败"
					},
					"response": []
				},
				{
					"name": "getCourseSetCourses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.length;i++){",
									"    var courseBody= JSON.stringify(jsonData[i]);//json转换为string",
									"    tests[\"getCourseSetCourses success\"] = (jsonData[i].courseSet.id === data.courseSetId)&(courseBody.has(\"title\")&courseBody.has(\"learnMode\")&courseBody.has(\"summary\")&courseBody.has(\"isFree\")&courseBody.has(\"audiences\")&courseBody.has(\"services\")&courseBody.has(\"ratingNum\")&courseBody.has(\"studentNum\")&courseBody.has(\"teachers\")&courseBody.has(\"vipLevelId\")&courseBody.has(\"publishedTaskNum\")&courseBody.has(\"price\")&courseBody.has(\"access\")&courseBody.has(\"learningExpiryDate\"));",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets/{{courseSetId}}/courses",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets",
								"{{courseSetId}}",
								"courses"
							]
						},
						"description": "获取课程已发布的教学计划"
					},
					"response": []
				},
				{
					"name": "getCourseSetStudents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.length-1;i++){",
									"    tests[\"get courseSet student sorted by joinTime success !\"] = jsonData[i].createdTime >= jsonData[i+1].createdTime;",
									"    tests[\"get courseSet student success !\"] = (jsonData[i].role === \"student\")&(jsonData[i].courseSetId === data.courseSetId)&(jsonData[i].user !== null);",
									"    ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets/{{courseSetId}}/latest_members?offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets",
								"{{courseSetId}}",
								"latest_members"
							],
							"query": [
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取课程下所有学员列表"
					},
					"response": []
				},
				{
					"name": "getCourseSetReviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    var dataString = JSON.stringify(jsonData.data[i]);//json转换为string",
									"    tests[\"getCourseSetReviews success\"] = (jsonData.data[i].courseSetId === data.courseSetId) & dataString.has(\"rating\")&dataString.has(\"content\")&dataString.has(\"user\")&dataString.has(\"course\")&dataString.has(\"updatedTime\")&dataString.has(\"createdTime\");",
									"    }  ",
									"    ",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"        tests[\"get courseSet reviews order by updatedTime DESC success\"] = jsonData.data[i].updatedTime >= jsonData.data[i+1].createdTime ;",
									"    ",
									"}",
									"",
									"   "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets/{{courseSetId}}/reviews?offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets",
								"{{courseSetId}}",
								"reviews"
							],
							"query": [
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取课程的所有评价"
					},
					"response": [
						{
							"id": "9d763678-d9af-46fd-8654-85e9227c2422",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 31 Mar 2017 09:45:09 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.3"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "es.devtest1",
									"path": "/",
									"secure": false,
									"value": "4ql4gmna7pbqojophrr6tii4et",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "55",
							"body": "{\"data\":[{\"id\":\"4\",\"title\":\"\",\"content\":\"\\u8fd9\\u4e2a\\u4e0d\\u9519\\u54e6\",\"rating\":\"4\",\"private\":\"0\",\"createdTime\":\"2017-03-30T19:44:12+08:00\",\"parentId\":\"0\",\"updatedTime\":null,\"courseSetId\":\"1\",\"user\":{\"id\":\"3\",\"nickname\":\"Jesse\",\"title\":\"\",\"smallAvatar\":\"\",\"mediumAvatar\":\"\",\"largeAvatar\":\"\"},\"course\":{\"id\":\"1\",\"title\":\"\\u9ed8\\u8ba4\\u6559\\u5b66\\u8ba1\\u5212\"}},{\"id\":\"3\",\"title\":\"\",\"content\":\"\\u5c31\\u80fd\\u770b\\u89c1\\u53ef\",\"rating\":\"5\",\"private\":\"0\",\"createdTime\":\"2017-03-30T10:56:08+08:00\",\"parentId\":\"0\",\"updatedTime\":null,\"courseSetId\":\"1\",\"user\":{\"id\":\"2\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"King\",\"smallAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6e255969218.png\",\"mediumAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6de35363786.png\",\"largeAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6d340042729.png\"},\"course\":{\"id\":\"2\",\"title\":\"\\u8ba1\\u5212A\"}},{\"id\":\"2\",\"title\":\"\",\"content\":\"\\u67d4\\u67d4\\u5f31\\u5f31\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\",\"rating\":\"5\",\"private\":\"0\",\"createdTime\":\"2017-03-30T10:53:23+08:00\",\"parentId\":\"0\",\"updatedTime\":null,\"courseSetId\":\"1\",\"user\":{\"id\":\"2\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"King\",\"smallAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6e255969218.png\",\"mediumAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6de35363786.png\",\"largeAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6d340042729.png\"},\"course\":{\"id\":\"1\",\"title\":\"\\u9ed8\\u8ba4\\u6559\\u5b66\\u8ba1\\u5212\"}},{\"id\":\"1\",\"title\":\"\",\"content\":\"hkj,hj,kjkjjhhj\",\"rating\":\"4\",\"private\":\"0\",\"createdTime\":\"2017-03-30T10:52:15+08:00\",\"parentId\":\"0\",\"updatedTime\":null,\"courseSetId\":\"1\",\"user\":{\"id\":\"4\",\"nickname\":\"st001\",\"title\":\"\",\"smallAvatar\":\"\",\"mediumAvatar\":\"\",\"largeAvatar\":\"\"},\"course\":{\"id\":\"1\",\"title\":\"\\u9ed8\\u8ba4\\u6559\\u5b66\\u8ba1\\u5212\"}}],\"paging\":{\"total\":4,\"offset\":\"0\",\"limit\":\"100\"}}"
						}
					]
				},
				{
					"name": "getCourseSets_normal_sortedByStudentNum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"    tests[\"getCourseSets sorted by studentNum DESC !\"] = (jsonData.data[i].studentNum >= jsonData.data[i+1].studentNum);",
									"}",
									"",
									"",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get normal CourseSets success\"] = (jsonData.data[i].type === \"normal\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"maxCoursePrice\")&responseBody.has(\"minCoursePrice\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets?type=normal&categoryId=0&sort=-studentNum",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "normal"
								},
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "-studentNum"
								}
							]
						},
						"description": "获取published课程，按studentNum倒序排列"
					},
					"response": []
				},
				{
					"name": "getCourseSets_normal_sortedByRecom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var count=0;",
									"var flag = true;",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get normal CourseSets success\"] = (jsonData.data[i].type === \"normal\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"maxCoursePrice\")&responseBody.has(\"minCoursePrice\");",
									"",
									"}",
									"//判断当前分类下被推荐的课程总数",
									"for (var i=0;i<jsonData.data.length;i++ ){",
									"    if((jsonData.data[i].type === \"normal\")&(jsonData.data[i].recommended === \"1\")){",
									"        count=count+1;",
									"    }",
									"}",
									"//  tests[\"===\"+count]=true;",
									"//当前分类无推荐课程",
									"if(count === 0){",
									"   tests[\"There is no recommended normal courseSets  !\"] = true;",
									"}",
									"//当前分类只有一个推荐课程",
									"if(count === 1){",
									"if(jsonData.data[0].recommended == \"1\"){",
									"    tests[\"get normal CourseSets sorted by recommendedSeq !\"] = true;",
									"}else{",
									"    tests[\"get normal CourseSets sorted by recommendedSeq !\"] = false;",
									"}",
									"}",
									"// 当前分类有多个推荐课程",
									"if(count > 1){",
									"for (var i=0;i<count-1;i++ ){",
									"      if((jsonData.data[i].recommended==\"1\")&(jsonData.data[i+1].recommended==\"1\"))",
									"        //json获取的是string类型，直接比较的是字符串，所以需要将其转换为int型进行比较",
									"        if(parseInt(jsonData.data[i].recommendedSeq)<= parseInt(jsonData.data[i+1].recommendedSeq)){",
									"        flag = true;",
									"      }",
									"      else{",
									"        flag = false;break; ",
									"        }",
									"    }",
									"",
									"    tests[\"get normal CourseSets sorted by recommendedSeq !\"] = flag;",
									"   ",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets?type=normal&sort=recommendedSeq&offset=10&limit=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "normal"
								},
								{
									"equals": true,
									"key": "categoryId",
									"value": "0",
									"disabled": true
								},
								{
									"equals": true,
									"key": "sort",
									"value": "recommendedSeq"
								},
								{
									"equals": true,
									"key": "offset",
									"value": "10"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "获取published课程，按推荐序号排列"
					},
					"response": []
				},
				{
					"name": "getCourseSets_normal_sortedByCreatedTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"    tests[\"get normal CourseSets sorted by createdTime DESC !\"] = (jsonData.data[i].createdTime >= jsonData.data[i+1].createdTime);",
									"}",
									"",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get normal CourseSets success\"] = (jsonData.data[i].type === \"normal\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"maxCoursePrice\")&responseBody.has(\"minCoursePrice\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets?type=normal&categoryId=0&sort=-createdTime",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "normal"
								},
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "-createdTime"
								}
							]
						},
						"description": "获取published课程，按createdTime倒序排列"
					},
					"response": []
				},
				{
					"name": "getCourseSets_live_sortedByCreatedTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"    tests[\"ge live tCourseSets sorted by createdTime DESC !\"] = (jsonData.data[i].createdTime >= jsonData.data[i+1].createdTime);",
									"}",
									"",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get live CourseSets success\"] = (jsonData.data[i].type === \"live\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"maxCoursePrice\")&responseBody.has(\"minCoursePrice\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets?type=live&categoryId=0&sort=-createdTime",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "live"
								},
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "-createdTime"
								}
							]
						},
						"description": "获取published直播课程，按createdTime倒序排列"
					},
					"response": []
				},
				{
					"name": "getCourseSets_live_sortedByRecom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var count=0;",
									"",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get live CourseSets success\"] = (jsonData.data[i].type === \"live\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"maxCoursePrice\")&responseBody.has(\"minCoursePrice\");",
									"",
									"}",
									"//判断当前分类下被推荐的课程总数",
									"for (var i=0;i<jsonData.data.length;i++ ){",
									"    if((jsonData.data[i].type === \"live\")&(jsonData.data[i].recommended === \"1\")){",
									"        count=count+1;",
									"    }",
									"}",
									"//当前分类无推荐课程",
									"if(count === 0){",
									"   tests[\"There is no recommended live courseSets  !\"] = true;",
									"}",
									"//当前分类只有一个推荐课程",
									"if(count === 1){",
									"if(jsonData.data[0].recommended == \"1\"){",
									"    tests[\"get live CourseSets sorted by recommendedSeq !\"] = true;",
									"}else{",
									"    tests[\"get live CourseSets sorted by recommendedSeq !\"] = false;",
									"}",
									"}",
									"// 当前分类有多个推荐课程",
									"if(count > 1){",
									"for (var i=0;i<count-1;i++ ){",
									"      if((jsonData.data[i].recommended==\"1\")&(jsonData.data[i+1].recommended==\"1\")&(jsonData.data[i].recommendedSeq <= jsonData.data[i+1].recommendedSeq))",
									"        var flag = true;",
									"      else{",
									"        flag = false;",
									"        break; }",
									"    }",
									"",
									"    tests[\"get live CourseSets sorted by recommendedSeq !\"] = flag;",
									"   ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets?type=live&categoryId=0&sort=recommendedSeq&offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "live"
								},
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "recommendedSeq"
								},
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取published直播课程，按推荐序号排列"
					},
					"response": []
				},
				{
					"name": "getCourseSets_live_sortedByStudentNum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"    tests[\"get live CourseSets sorted by studentNum DESC !\"] = (jsonData.data[i].studentNum >= jsonData.data[i+1].studentNum);",
									"}",
									"",
									"",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get live CourseSets success\"] = (jsonData.data[i].type === \"live\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"maxCoursePrice\")&responseBody.has(\"minCoursePrice\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets?type=live&categoryId=0&sort=-studentNum",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "live"
								},
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "-studentNum"
								}
							]
						},
						"description": "获取published直播课程，按studentNum倒序排列"
					},
					"response": []
				},
				{
					"name": "getMyCourseSetCourses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.length === 0){",
									"    tests[\"还未加入该课程任一学习计划！\"] = true;",
									"}else{",
									"    for(var i=0;i<jsonData.length;i++){",
									"     tests[\"get my courses of the courseSet success !\"] = (jsonData[i].courseSetId === data.courseSetId)&(jsonData[i].user.id === data.userId)&responseBody.has(\"lastLearnTime\")&responseBody.has(\"lastViewTime\");",
									"    }",
									"   ",
									"}",
									"// var courseId = jsonData[0].courseId;",
									"// var temp2 = 0;",
									"// var learnTime = jsonData[0].lastLearnTime; ",
									"// var viewTime = jsonData[0].lastViewTime; ",
									"//     for(var i=1;i<jsonData.length;i++){",
									"//         // if(jsonData[i].lastLearnTime >= learnTime){",
									"//         //     learnTime = jsonData[i].lastLearnTime;",
									"//         //     temp1=i;",
									"//         // }",
									"//         if(jsonData[i].lastViewTime >= viewTime){",
									"//             learnTime = jsonData[i].lastViewTime;",
									"//             courseId=jsonData[i].courseId;",
									"//         }",
									"//     }",
									"    ",
									"//     // tests[\"courseId=\"+jsonData[temp1].courseId+\"get last learn time : \"+learnTime] = true;",
									"//     tests[\"courseId=\"+courseId+\"get last view time : \"+viewTime] = true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/course_sets/{{courseSetId}}/course_members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"course_sets",
								"{{courseSetId}}",
								"course_members"
							]
						},
						"description": "获取某一课程我加入的教学计划"
					},
					"response": []
				},
				{
					"name": "getAppChannels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.length;i++){",
									"//普通课程",
									"    if(jsonData[i].type === \"course\"){",
									"        for(var j=0;j<jsonData[i].data.length;j++){",
									"            var dataString = JSON.stringify(jsonData[i].data[j]);",
									"            tests[\"get discovery_normal courseSet info success !\"] = (jsonData[i].data[j].type===\"normal\")&dataString.has(\"title\")&dataString.has(\"studentNum\")&dataString.has(\"maxCoursePrice\")&dataString.has(\"minCoursePrice\");",
									"        }",
									"    }  ",
									"    //直播课程",
									"    if(jsonData[i].type === \"live\"){",
									"        for(var j=0;j<jsonData[i].data.length;j++){",
									"            var dataString = JSON.stringify(jsonData[i].data[j]);",
									"            tests[\"get discovery_live courseSet info success !\"] =  (jsonData[i].data[j].type===\"live\")&dataString.has(\"title\")&dataString.has(\"studentNum\")&dataString.has(\"maxCoursePrice\")&dataString.has(\"minCoursePrice\");",
									"        }",
									"    }  ",
									"    //班级",
									"    if(jsonData[i].type === \"classroom\"){",
									"        for(var j=0;j<jsonData[i].data.length;j++){",
									"            var dataString = JSON.stringify(jsonData[i].data[j]);",
									"            tests[\"get discovery_classroom info success !\"] = dataString.has(\"title\")&dataString.has(\"studentNum\")&dataString.has(\"price\")&dataString.has(\"cover\");",
									"        }",
									"    }",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/app/channels",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"app",
								"channels"
							]
						},
						"description": "获取发现页栏目信息"
					},
					"response": []
				},
				{
					"name": "searchCourseSets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.data.length > 0){",
									"    for(var i = 0;i< jsonData.data.length;i++){",
									"        var courseSetBody= JSON.stringify(jsonData.data[i]);  //json转换为string",
									"        tests[\"searchCourseSets success \"] = (jsonData.data[i].title.indexOf(data.searchKeyword)>-1)&courseSetBody.has(\"id\")&courseSetBody.has(\"title\")&courseSetBody.has(\"cover\")&courseSetBody.has(\"studentNum\")&courseSetBody.has(\"minCoursePrice\");",
									"    }",
									"",
									"}",
									"if(jsonData.data.length === 0){",
									"    tests[\"search results is null !\"] = true;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/course_sets?limit=5&offset=0&title={{searchKeyword}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"course_sets"
							],
							"query": [
								{
									"equals": true,
									"key": "limit",
									"value": "5"
								},
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "title",
									"value": "{{searchKeyword}}"
								}
							]
						},
						"description": "课程搜索"
					},
					"response": []
				}
			]
		},
		{
			"name": "03_course",
			"description": "教学计划相关api",
			"item": [
				{
					"name": "getCourseInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getCourseInfo success\"] = (jsonData.id === data.courseId)&(responseBody.has(\"title\")&responseBody.has(\"summary\")&responseBody.has(\"audiences\")&responseBody.has(\"ratingNum\")&responseBody.has(\"studentNum\")&responseBody.has(\"cover\")&responseBody.has(\"services\")&responseBody.has(\"teachers\")&responseBody.has(\"vipLevelId\")&responseBody.has(\"price\")&responseBody.has(\"isFree\")&responseBody.has(\"enableFinish\"));",
									"//enableFinish,是否允许学员强制完成任务, 1:表示不限制 0:表示限制",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}"
							]
						},
						"description": "获取单个教学计划"
					},
					"response": []
				},
				{
					"name": "getCourseInfo_error_courseId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The course is not existed !\"] = (jsonData.error.code === 10)&(jsonData.error.message === \"教学计划不存在\");",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/errorId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"errorId"
							]
						},
						"description": "获取单个教学计划 失败 ,courseId 错误 "
					},
					"response": []
				},
				{
					"name": "getCourseItems_all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// var jsonData = JSON.parse(responseBody);",
									"// for(var i=0;i<jsonData.length;i++){",
									"//     if((jsonData[i].type === \"chapter\")||(jsonData[i].type === \"unit\")){",
									"        ",
									"//     }",
									"//     if(jsonData[i].type === \"task\"){",
									"//         jsonData[i].task.type",
									"//     }",
									"    ",
									"// }",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"items"
							]
						},
						"description": "获取教学计划的任务列表"
					},
					"response": []
				},
				{
					"name": "getCourseItems_published",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/items?onlyPublished=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"items"
							],
							"query": [
								{
									"equals": true,
									"key": "onlyPublished",
									"value": "1"
								}
							]
						},
						"description": "获取published教学计划的任务列表"
					},
					"response": []
				},
				{
					"name": "getCourseMembers_Students",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.data.length === 0){",
									"    tests[\"There is no students in the course !\"] = true;",
									"}",
									"",
									"    for(var i=0;i<jsonData.data.length-1;i++){",
									"    tests[\"get course student sorted by joinTime success !\"] = jsonData.data[i].createdTime >= jsonData.data[i+1].createdTime;",
									"    ",
									"    }",
									"",
									" for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get course student success !\"] = (jsonData.data[i].role === \"student\")&(jsonData.data[i].courseId === data.courseId)&(jsonData.data[i].user !== null);",
									" }",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/members?role=student&offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"members"
							],
							"query": [
								{
									"equals": true,
									"key": "role",
									"value": "student"
								},
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取教学计划下的学员列表"
					},
					"response": []
				},
				{
					"name": "getCourseMembers_Teachers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.data.length === 0){",
									"    tests[\"There is no teachers in the course !\"] = true;",
									"}",
									"",
									"    for(var i=0;i<jsonData.data.length-1;i++){",
									"    tests[\"get course teachers sorted by joinTime success !\"] = jsonData.data[i].createdTime >= jsonData.data[i+1].createdTime;",
									"    ",
									"    }",
									"",
									" for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get course teachers success !\"] = (jsonData.data[i].role === \"teacher\")&(jsonData.data[i].courseId === data.courseId)&(jsonData.data[i].user !== null);",
									"    ",
									"    }",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/members?role=teacher&offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"members"
							],
							"query": [
								{
									"equals": true,
									"key": "role",
									"value": "teacher"
								},
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取教学计划下的教师列表"
					},
					"response": []
				},
				{
					"name": "isCourseMember",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The user is in the course !\"] = (jsonData.courseId === data.courseId)&(jsonData.user.id === data.userId);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/course_members/{{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"course_members",
								"{{courseId}}"
							]
						},
						"description": "获取某user和学习计划的关系 GET /me/course_members/{courseId}"
					},
					"response": [
						{
							"id": "056b7caa-63cb-4b65-84a1-d7bc076a074f",
							"name": "student",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Tue, 11 Apr 2017 06:11:19 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "10a490"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/10a490"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "138",
							"body": "{\"id\":\"21\",\"courseId\":\"8\",\"deadline\":\"0\",\"levelId\":\"0\",\"learnedNum\":\"1\",\"noteNum\":\"0\",\"noteLastUpdateTime\":\"2017-04-01T11:04:54+08:00\",\"isLearned\":\"0\",\"finishedTime\":\"1970-01-01T08:00:00+08:00\",\"role\":\"student\",\"locked\":\"0\",\"createdTime\":\"2017-04-01T11:04:54+08:00\",\"lastLearnTime\":\"1970-01-01T08:00:00+08:00\",\"lastViewTime\":\"2017-04-01T17:26:24+08:00\",\"courseSetId\":\"3\",\"user\":{\"id\":\"4\",\"nickname\":\"st001\",\"title\":\"\",\"smallAvatar\":\"\",\"mediumAvatar\":\"\",\"largeAvatar\":\"\"}}"
						},
						{
							"id": "a5cd879b-21f5-4d5b-be7b-7843c5a60722",
							"name": "teacher",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Tue, 11 Apr 2017 06:09:37 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "323095"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/323095"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "125",
							"body": "{\"id\":\"12\",\"courseId\":\"8\",\"deadline\":\"0\",\"levelId\":\"0\",\"learnedNum\":\"1\",\"noteNum\":\"0\",\"noteLastUpdateTime\":\"1970-01-01T08:00:00+08:00\",\"isLearned\":\"0\",\"finishedTime\":\"1970-01-01T08:00:00+08:00\",\"role\":\"teacher\",\"locked\":\"0\",\"createdTime\":\"2017-03-31T16:14:25+08:00\",\"lastLearnTime\":\"1970-01-01T08:00:00+08:00\",\"lastViewTime\":\"2017-04-11T09:52:25+08:00\",\"courseSetId\":\"3\",\"user\":{\"id\":\"2\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"King\",\"smallAvatar\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/user\\/2017\\/03-27\\/100636c6e255969218.png\",\"mediumAvatar\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/user\\/2017\\/03-27\\/100636c6de35363786.png\",\"largeAvatar\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/user\\/2017\\/03-27\\/100636c6d340042729.png\"}}"
						}
					]
				},
				{
					"name": "isCourseMember_error_notMember",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"The user is not in the course !\"] = responseBody === \"{}\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/course_members/1111",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"course_members",
								"1111"
							]
						},
						"description": "获取某user和学习计划的关系 GET /me/course_members/{courseId}"
					},
					"response": []
				},
				{
					"name": "getCourseReviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    var dataString = JSON.stringify(jsonData.data[i]);//json转换为string",
									"    tests[\"getCourseReviews success\"] = (jsonData.data[i].courseSetId=== data.courseSetId) & dataString.has(\"rating\")&dataString.has(\"content\")&dataString.has(\"user\")&dataString.has(\"course\");",
									"    }  ",
									"    ",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"        tests[\"get course reviews order by updatedTime success\"] = jsonData.data[i].updatedTime >= jsonData.data[i+1].updatedTime ;",
									"    ",
									"}",
									"",
									"   ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/reviews?offset=0&limit=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"reviews"
							],
							"query": [
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "获取课程的所有评价"
					},
					"response": [
						{
							"id": "28e9095b-2b8a-4f81-86d2-a5505393e4a0",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 31 Mar 2017 09:44:54 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.3"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "es.devtest1",
									"path": "/",
									"secure": false,
									"value": "4ql4gmna7pbqojophrr6tii4et",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "96",
							"body": "{\"data\":[{\"id\":\"4\",\"title\":\"\",\"content\":\"\\u8fd9\\u4e2a\\u4e0d\\u9519\\u54e6\",\"rating\":\"4\",\"private\":\"0\",\"createdTime\":\"2017-03-30T19:44:12+08:00\",\"parentId\":\"0\",\"updatedTime\":null,\"courseSetId\":\"1\",\"user\":{\"id\":\"3\",\"nickname\":\"Jesse\",\"title\":\"\",\"smallAvatar\":\"\",\"mediumAvatar\":\"\",\"largeAvatar\":\"\"},\"course\":{\"id\":\"1\",\"title\":\"\\u9ed8\\u8ba4\\u6559\\u5b66\\u8ba1\\u5212\"}},{\"id\":\"2\",\"title\":\"\",\"content\":\"\\u67d4\\u67d4\\u5f31\\u5f31\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\\u82e5\",\"rating\":\"5\",\"private\":\"0\",\"createdTime\":\"2017-03-30T10:53:23+08:00\",\"parentId\":\"0\",\"updatedTime\":null,\"courseSetId\":\"1\",\"user\":{\"id\":\"2\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"King\",\"smallAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6e255969218.png\",\"mediumAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6de35363786.png\",\"largeAvatar\":\"http:\\/\\/es.devtest1\\/files\\/user\\/2017\\/03-27\\/100636c6d340042729.png\"},\"course\":{\"id\":\"1\",\"title\":\"\\u9ed8\\u8ba4\\u6559\\u5b66\\u8ba1\\u5212\"}},{\"id\":\"1\",\"title\":\"\",\"content\":\"hkj,hj,kjkjjhhj\",\"rating\":\"4\",\"private\":\"0\",\"createdTime\":\"2017-03-30T10:52:15+08:00\",\"parentId\":\"0\",\"updatedTime\":null,\"courseSetId\":\"1\",\"user\":{\"id\":\"4\",\"nickname\":\"st001\",\"title\":\"\",\"smallAvatar\":\"\",\"mediumAvatar\":\"\",\"largeAvatar\":\"\"},\"course\":{\"id\":\"1\",\"title\":\"\\u9ed8\\u8ba4\\u6559\\u5b66\\u8ba1\\u5212\"}}],\"paging\":{\"total\":3,\"offset\":\"0\",\"limit\":\"10\"}}"
						}
					]
				},
				{
					"name": "getCourseTaskResults",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.length === 0){",
									"    tests[\"Has not yet started learning\"] = true ;",
									"}",
									"if(jsonData.length >0){",
									"    for(var i=0;i<jsonData.length;i++){",
									"    tests[\"get course taskResults success !\"] = (jsonData[i].status === \"start\")||(jsonData[i].status === \"finish\")&(jsonData[i].courseId === data.courseId)&(jsonData[i].userId === data.userId)",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/task_results",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"task_results"
							]
						},
						"description": "获取我的教学计划的任务结果"
					},
					"response": []
				},
				{
					"name": "getCourseTrialVideo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get first trial task success !\"] = (jsonData.courseId === data.paidCourseId)&(jsonData.fromCourseSetId === data.courseSetId)&(responseBody.has(\"id\"))&(responseBody.has(\"title\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{paidCourseId}}/trial_tasks/first",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{paidCourseId}}",
								"trial_tasks",
								"first"
							]
						},
						"description": "获取计划下的第一个试看任务GET /courses/{id}/trial_tasks/first"
					},
					"response": [
						{
							"id": "e2b650b6-c21a-4357-9bdc-c707e199b2d0",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Mon, 17 Apr 2017 02:12:25 GMT"
								},
								{
									"description": "",
									"key": "Expires",
									"name": "Expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "Keep-Alive",
									"name": "Keep-Alive",
									"value": "timeout=38"
								},
								{
									"description": "",
									"key": "Pragma",
									"name": "Pragma",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "5210a0"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/5210a0"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "51",
							"body": "{\"trailVideos\":[{\"id\":\"44\",\"courseId\":\"20\",\"seq\":\"1\",\"categoryId\":\"0\",\"activityId\":\"44\",\"title\":\"MP4\",\"isFree\":\"0\",\"isOptional\":\"0\",\"startTime\":\"0\",\"endTime\":\"0\",\"mode\":null,\"status\":\"published\",\"number\":\"2\",\"type\":\"video\",\"mediaSource\":\"self\",\"maxOnlineNum\":\"0\",\"fromCourseSetId\":\"3\",\"length\":\"56\",\"copyId\":\"0\",\"createdUserId\":\"2\",\"createdTime\":\"1492067533\",\"updatedTime\":\"1492067707\"}],\"maxWatchLength\":\"1\"}"
						},
						{
							"id": "09acba22-0697-4e36-b72d-2ba2712b031f",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 13 Apr 2017 01:40:24 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "e96852"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/e96852"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "77",
							"body": "{\"trailVideos\":[{\"id\":\"26\",\"courseId\":\"5\",\"seq\":\"3\",\"categoryId\":\"25\",\"activityId\":\"26\",\"title\":\"\\u89c6\\u9891\",\"isFree\":\"0\",\"isOptional\":\"0\",\"startTime\":\"0\",\"endTime\":\"0\",\"mode\":null,\"status\":\"published\",\"number\":\"2\",\"type\":\"video\",\"mediaSource\":\"self\",\"maxOnlineNum\":\"0\",\"fromCourseSetId\":\"1\",\"length\":\"67\",\"copyId\":\"0\",\"createdUserId\":\"2\",\"createdTime\":\"1491534752\",\"updatedTime\":\"1491536056\"}],\"maxWatchLength\":\"3\"}"
						}
					]
				},
				{
					"name": "getCourseLearningProgress",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get my course learning progress success ！\"] = responseBody.has(\"taskCount\")&responseBody.has(\"taskResultCount\")&responseBody.has(\"progress\")&responseBody.has(\"nextTask\")&(jsonData.member.courseId ===data.courseId)&(jsonData.member.courseSetId === data.courseSetId)&(jsonData.member.deadline !==null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/course_learning_progress/{{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"course_learning_progress",
								"{{courseId}}"
							]
						},
						"description": "获取学习计划学习进度"
					},
					"response": []
				},
				{
					"name": "joinFreeCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"join classroom success !\"] = (jsonData.courseId === data.freeCourseId)&(jsonData.user.id === data.userId);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{freeCourseId}}/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{freeCourseId}}",
								"members"
							]
						},
						"description": "加入教学计划"
					},
					"response": []
				},
				{
					"name": "unlearnCourse_free",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"unlearn free course success !\"] = jsonData.success === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "reason",
									"type": "text",
									"value": "我不想买了"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/course_members/{{freeCourseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"course_members",
								"{{freeCourseId}}"
							]
						},
						"description": "退出学习计划"
					},
					"response": [
						{
							"id": "5c603ce6-9d19-42c2-8ae4-3379456328c9",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 20 Apr 2017 08:03:12 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "64106a"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/64106a"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "434",
							"body": "{\"success\":true}"
						},
						{
							"id": "0d692af0-0467-4c8e-8e53-024f728e6f90",
							"name": "不是学员",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 20 Apr 2017 08:02:14 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "b14143"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/b14143"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "112",
							"body": "{\"error\":{\"message\":\"\\u60a8\\u4e0d\\u662f\\u5b66\\u5458\\u6216\\u5c1a\\u672a\\u8d2d\\u4e70\\uff0c\\u4e0d\\u80fd\\u9000\\u5b66\\u3002\",\"code\":7,\"type\":\"INTERNAL_SERVER_ERROR\",\"previous\":[{\"message\":\"1\\/1 ApiBundle\\\\Api\\\\Exception\\\\ApiException: \\u60a8\\u4e0d\\u662f\\u5b66\\u5458\\u6216\\u5c1a\\u672a\\u8d2d\\u4e70\\uff0c\\u4e0d\\u80fd\\u9000\\u5b66\\u3002\",\"trace\":[\"1.  in \\/var\\/www\\/edusoho\\/src\\/ApiBundle\\/Api\\/Resource\\/Me\\/MeCourseMember.php line 22\",\"2. at ApiBundle\\\\Api\\\\Resource\\\\Me\\\\MeCourseMember-\\u003Eremove(...args...)\",\"3. at call_user_func_array(...args...) in \\/var\\/www\\/edusoho\\/src\\/ApiBundle\\/Api\\/Resource\\/ResourceProxy.php line 18\",\"4. at ApiBundle\\\\Api\\\\Resource\\\\ResourceProxy-\\u003E__call(...args...)\",\"5. at call_user_func_array(...args...) in \\/var\\/www\\/edusoho\\/src\\/ApiBundle\\/Api\\/ResourceKernel.php line 205\",\"6. at ApiBundle\\\\Api\\\\ResourceKernel-\\u003Einvoke(...args...) in \\/var\\/www\\/edusoho\\/src\\/ApiBundle\\/Api\\/ResourceKernel.php line 173\",\"7. at ApiBundle\\\\Api\\\\ResourceKernel-\\u003EhandleApiRequest(...args...) in \\/var\\/www\\/edusoho\\/src\\/ApiBundle\\/Api\\/ResourceKernel.php line 163\",\"8. at ApiBundle\\\\Api\\\\ResourceKernel-\\u003EsingleRequest(...args...) in \\/var\\/www\\/edusoho\\/src\\/ApiBundle\\/Api\\/ResourceKernel.php line 64\",\"9. at ApiBundle\\\\Api\\\\ResourceKernel-\\u003Ehandle(...args...) in \\/var\\/www\\/edusoho\\/src\\/ApiBundle\\/Controller\\/EntryPointController.php line 27\",\"10. at ApiBundle\\\\Controller\\\\EntryPointController-\\u003EstartAction(...args...)\",\"11. at call_user_func_array(...args...) in \\/var\\/www\\/edusoho\\/vendor\\/symfony\\/symfony\\/src\\/Symfony\\/Component\\/HttpKernel\\/HttpKernel.php line 144\",\"12. at Symfony\\\\Component\\\\HttpKernel\\\\HttpKernel-\\u003EhandleRaw(...args...) in \\/var\\/www\\/edusoho\\/vendor\\/symfony\\/symfony\\/src\\/Symfony\\/Component\\/HttpKernel\\/HttpKernel.php line 64\",\"13. at Symfony\\\\Component\\\\HttpKernel\\\\HttpKernel-\\u003Ehandle(...args...) in \\/var\\/www\\/edusoho\\/vendor\\/symfony\\/symfony\\/src\\/Symfony\\/Component\\/HttpKernel\\/DependencyInjection\\/ContainerAwareHttpKernel.php line 69\",\"14. at Symfony\\\\Component\\\\HttpKernel\\\\DependencyInjection\\\\ContainerAwareHttpKernel-\\u003Ehandle(...args...) in \\/var\\/www\\/edusoho\\/vendor\\/symfony\\/symfony\\/src\\/Symfony\\/Component\\/HttpKernel\\/Kernel.php line 185\",\"15. at Symfony\\\\Component\\\\HttpKernel\\\\Kernel-\\u003Ehandle(...args...) in \\/var\\/www\\/edusoho\\/web\\/app_dev.php line 39\"]}]}}"
						}
					]
				},
				{
					"name": "viewCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"View course success !\"] = jsonData.success === 1;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/events/course_view",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"events",
								"course_view"
							]
						},
						"description": "查看教学计划"
					},
					"response": []
				},
				{
					"name": "getLearningCourseWithoutToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.data.length >0){",
									"    for(var i =0; i<jsonData.data.length;i++){",
									"        var courseBody= JSON.stringify(jsonData.data[i]);  //json转换为string",
									"        tests[\"get user learning courses info success !\"] = courseBody.has(\"id\")&courseBody.has(\"courseSetId\")&courseBody.has(\"title\")&courseBody.has(\"largePicture\")&courseBody.has(\"isFree\")&courseBody.has(\"price\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Course/getLearningCourseWithoutToken?userId={{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Course",
								"getLearningCourseWithoutToken"
							],
							"query": [
								{
									"equals": true,
									"key": "userId",
									"value": "{{userId}}"
								}
							]
						},
						"description": "获取用户在学课程-用户个人信息页（正确id）"
					},
					"response": [
						{
							"id": "cddcf55a-a826-439e-ae91-0dbccf2b7f56",
							"name": "200",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request.",
									"key": "Access-Control-Allow-Methods",
									"name": "Access-Control-Allow-Methods",
									"value": "POST, GET"
								},
								{
									"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource.",
									"key": "Access-Control-Allow-Origin",
									"name": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"description": "Indicates how long the results of a preflight request can be cached in seconds.",
									"key": "Access-Control-Max-Age",
									"name": "Access-Control-Max-Age",
									"value": "30"
								},
								{
									"description": "Used when issuing a preflight request to let the server know what HTTP headers will be used when the actual request is made.",
									"key": "Access-Control-Request-Headers",
									"name": "Access-Control-Request-Headers",
									"value": "token"
								},
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 06 Jul 2017 02:29:13 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Custom header",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "524f06"
								},
								{
									"description": "Custom header",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/524f06"
								},
								{
									"description": "Gives the date/time after which the response is considered stale",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain.",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": 116,
							"body": "{\"start\":0,\"limit\":10,\"total\":\"3\",\"data\":[{\"id\":\"234\",\"courseSetId\":\"75\",\"title\":\"\\u4ea7\\u54c1\\u6280\\u80fd\\u63d0\\u9ad8\\u8bfe\\u7a0b-\\u7b2c\\u4e00\\u671f\\u8bfe\\u7a0b\",\"learnMode\":\"freeMode\",\"expiryMode\":\"forever\",\"expiryDays\":\"0\",\"expiryStartDate\":\"0\",\"expiryEndDate\":\"0\",\"summary\":\"\\u003Cp style=\\u0022margin:0px 0px 25px;color:rgb(47,47,47);font-family:\\u0027-apple-system\\u0027, \\u0027SF UI Text\\u0027, Arial, \\u0027PingFang SC\\u0027, \\u0027Hiragino Sans GB\\u0027, \\u0027Microsoft YaHei\\u0027, \\u0027WenQuanYi Micro Hei\\u0027, sans-serif;font-size:16px;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:14px;\\u0022\\u003E\\u4e3a\\u4ec0\\u4e48\\u5e02\\u573a\\u4e0a\\u5f88\\u591a\\u4ea7\\u54c1\\u65e0\\u4eba\\u95ee\\u6d25\\uff0c\\u800c\\u6709\\u4e00\\u4e9b\\u5374\\u5f02\\u5e38\\u706b\\u7206\\uff1f\\u5982\\u4f55\\u8bbe\\u8ba1\\u548c\\u5f00\\u53d1\\u6709\\u4ef7\\u503c\\u7684\\u4ea7\\u54c1\\uff1f\\u786c\\u4ef6\\u4e3a\\u8f6f\\u4ef6\\u670d\\u52a1\\uff0c\\u8f6f\\u4ef6\\u4e3a\\u4f53\\u9a8c\\u670d\\u52a1\\uff0c\\u7528\\u6237\\u4f53\\u9a8c\\u4e3a\\u60c5\\u611f\\u4f53\\u9a8c\\u670d\\u52a1\\uff0c\\u6700\\u7ec8\\u4ea7\\u54c1\\u662f\\u4e3a\\u9700\\u6c42\\u6240\\u670d\\u52a1\\u3002\\u672c\\u4e66\\u4f5c\\u4e3a\\u4ea7\\u54c1\\u7ecf\\u7406\\u7684\\u5723\\u7ecf\\uff0c\\u57fa\\u672c\\u8986\\u76d6\\u4ea7\\u54c1\\u5f00\\u53d1\\u4e2d\\u4ea7\\u54c1\\u7ecf\\u7406\\u7684\\u5404\\u4e2a\\u65b9\\u9762\\u3002Marty Cagan\\u603b\\u7ed320\\u4f59\\u5e74\\u8f6f\\u4ef6\\u4ea7\\u54c1\\u7ba1\\u7406\\u7ecf\\u9a8c\\uff0c\\u76f4\\u6307\\u4ea7\\u54c1\\u7814\\u53d1\\u6d41\\u7a0b\\u5b58\\u5728\\u7684\\u5f0a\\u75c5\\uff0c\\u4e3a\\u4ea7\\u54c1\\u7ecf\\u7406\\u7b54\\u7591\\u89e3\\u60d1\\u3001\\u6307\\u70b9\\u8ff7\\u6d25\\u3002\\u003C\\/span\\u003E\\u003C\\/p\\u003E\\n\\n\\u003Cdiv class=\\u0022image-package\\u0022 style=\\u0022padding-bottom:25px;width:700px;margin-left:-40px;text-align:center;color:rgb(47,47,47);font-family:\\u0027-apple-system\\u0027, \\u0027SF UI Text\\u0027, Arial, \\u0027PingFang SC\\u0027, \\u0027Hiragino Sans GB\\u0027, \\u0027Microsoft YaHei\\u0027, \\u0027WenQuanYi Micro Hei\\u0027, sans-serif;font-size:16px;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:14px;\\u0022\\u003E\\u003Cimg alt=\\u0022\\u0022 src=\\u0022http:\\/\\/upload-images.jianshu.io\\/upload_images\\/19928-93ffb471b64ee7f3.png?imageMogr2\\/auto-orient\\/strip%7CimageView2\\/2\\/w\\/1240\\u0022 style=\\u0022border:0px;vertical-align:middle;height:auto;\\u0022 \\/\\u003E\\u003C\\/span\\u003E\\u003C\\/div\\u003E\\n\\n\\u003Cp style=\\u0022margin:0px 0px 25px;color:rgb(47,47,47);font-family:\\u0027-apple-system\\u0027, \\u0027SF UI Text\\u0027, Arial, \\u0027PingFang SC\\u0027, \\u0027Hiragino Sans GB\\u0027, \\u0027Microsoft YaHei\\u0027, \\u0027WenQuanYi Micro Hei\\u0027, sans-serif;font-size:16px;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:14px;\\u0022\\u003E\\u300a\\u542f\\u793a\\u5f55\\u300b\\u8fd9\\u672c\\u4e66\\u7684\\u4f5c\\u8005\\u4e3aMarty Cagan\\uff0c\\u662f\\u7845\\u8c37\\u4ea7\\u54c1\\u96c6\\u56e2\\u7684\\u521b\\u59cb\\u4eba\\u3002\\u8fc7\\u53bb20\\u591a\\u5e74\\uff0c\\u4ed6\\u66fe\\u4e3a\\u591a\\u52a0\\u4e00\\u6d41\\u8f6f\\u4ef6\\u4f01\\u4e1a\\u5de5\\u4f5c\\uff0c\\u5305\\u62ec\\u60e0\\u666e\\u3001\\u7f51\\u666f\\u3001\\u7f8e\\u56fd\\u5728\\u7ebf\\u3001eBay\\u7b49\\u3002\\u4ed6\\u4eb2\\u5386\\u4e86\\u4e2a\\u4eba\\u7535\\u8111\\u3001\\u4e92\\u8054\\u7f51\\u3001\\u7535\\u5b50\\u5546\\u52a1\\u7684\\u8d77\\u843d\\u6d6e\\u6c89\\uff0c\\u81f4\\u529b\\u4e8e\\u901a\\u8fc7\\u5199\\u4f5c\\u3001\\u6f14\\u8bb2\\u3001\\u57f9\\u8bad\\u5e2e\\u4e3b\\u5ba2\\u6237\\u6253\\u9020\\u5bcc\\u6709\\u521b\\u610f\\u7684\\u4ea7\\u54c1\\u3002\\u521b\\u529e\\u7845\\u8c37\\u4ea7\\u54c1\\u96c6\\u56e2\\u4e4b\\u524d\\uff0c\\u4ed6\\u662feBay\\u7684\\u9ad8\\u7ea7\\u526f\\u603b\\u88c1\\uff0c\\u5206\\u7ba1\\u4ea7\\u54c1\\u8bbe\\u8ba1\\u548c\\u4ea7\\u54c1\\u7ba1\\u7406\\uff0c\\u8d1f\\u8d23\\u89c4\\u5212\\u5168\\u7403\\u7535\\u5b50\\u5546\\u52a1\\u7f51\\u7ad9\\u7684\\u4ea7\\u54c1\\u548c\\u670d\\u52a1\\u3002\\u003C\\/span\\u003E\\u003C\\/p\\u003E\\n\",\"goals\":[\"\\u4e09\\u5929\\u5305\\u4f1a\"],\"audiences\":[\"\\u65e0\\u4e1a\\u6e38\\u6c11\"],\"isDefault\":\"1\",\"maxStudentNum\":\"0\",\"status\":\"published\",\"isFree\":\"1\",\"price\":\"0.00\",\"vipLevelId\":\"0\",\"buyable\":\"1\",\"tryLookable\":\"0\",\"tryLookLength\":\"0\",\"watchLimit\":\"0\",\"services\":[],\"taskNum\":\"7\",\"studentNum\":\"8\",\"parentId\":\"0\",\"ratingNum\":\"1\",\"rating\":\"5\",\"noteNum\":\"0\",\"threadNum\":\"0\",\"type\":\"normal\",\"approval\":\"0\",\"income\":\"0.00\",\"originPrice\":\"0.00\",\"coinPrice\":\"0.00\",\"originCoinPrice\":\"0.00\",\"showStudentNumType\":\"opened\",\"serializeMode\":\"none\",\"giveCredit\":\"0\",\"about\":\"\\u003Cp style=\\u0022margin:0px 0px 25px;color:rgb(47,47,47);font-family:\\u0027-apple-system\\u0027, \\u0027SF UI Text\\u0027, Arial, \\u0027PingFang SC\\u0027, \\u0027Hiragino Sans GB\\u0027, \\u0027Microsoft YaHei\\u0027, \\u0027WenQuanYi Micro Hei\\u0027, sans-serif;font-size:16px;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:14px;\\u0022\\u003E\\u4e3a\\u4ec0\\u4e48\\u5e02\\u573a\\u4e0a\\u5f88\\u591a\\u4ea7\\u54c1\\u65e0\\u4eba\\u95ee\\u6d25\\uff0c\\u800c\\u6709\\u4e00\\u4e9b\\u5374\\u5f02\\u5e38\\u706b\\u7206\\uff1f\\u5982\\u4f55\\u8bbe\\u8ba1\\u548c\\u5f00\\u53d1\\u6709\\u4ef7\\u503c\\u7684\\u4ea7\\u54c1\\uff1f\\u786c\\u4ef6\\u4e3a\\u8f6f\\u4ef6\\u670d\\u52a1\\uff0c\\u8f6f\\u4ef6\\u4e3a\\u4f53\\u9a8c\\u670d\\u52a1\\uff0c\\u7528\\u6237\\u4f53\\u9a8c\\u4e3a\\u60c5\\u611f\\u4f53\\u9a8c\\u670d\\u52a1\\uff0c\\u6700\\u7ec8\\u4ea7\\u54c1\\u662f\\u4e3a\\u9700\\u6c42\\u6240\\u670d\\u52a1\\u3002\\u672c\\u4e66\\u4f5c\\u4e3a\\u4ea7\\u54c1\\u7ecf\\u7406\\u7684\\u5723\\u7ecf\\uff0c\\u57fa\\u672c\\u8986\\u76d6\\u4ea7\\u54c1\\u5f00\\u53d1\\u4e2d\\u4ea7\\u54c1\\u7ecf\\u7406\\u7684\\u5404\\u4e2a\\u65b9\\u9762\\u3002Marty Cagan\\u603b\\u7ed320\\u4f59\\u5e74\\u8f6f\\u4ef6\\u4ea7\\u54c1\\u7ba1\\u7406\\u7ecf\\u9a8c\\uff0c\\u76f4\\u6307\\u4ea7\\u54c1\\u7814\\u53d1\\u6d41\\u7a0b\\u5b58\\u5728\\u7684\\u5f0a\\u75c5\\uff0c\\u4e3a\\u4ea7\\u54c1\\u7ecf\\u7406\\u7b54\\u7591\\u89e3\\u60d1\\u3001\\u6307\\u70b9\\u8ff7\\u6d25\\u3002\\u003C\\/span\\u003E\\u003C\\/p\\u003E\\n\\n\\u003Cdiv class=\\u0022image-package\\u0022 style=\\u0022padding-bottom:25px;width:700px;margin-left:-40px;text-align:center;color:rgb(47,47,47);font-family:\\u0027-apple-system\\u0027, \\u0027SF UI Text\\u0027, Arial, \\u0027PingFang SC\\u0027, \\u0027Hiragino Sans GB\\u0027, \\u0027Microsoft YaHei\\u0027, \\u0027WenQuanYi Micro Hei\\u0027, sans-serif;font-size:16px;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:14px;\\u0022\\u003E\\u003Cimg alt=\\u0022\\u0022 src=\\u0022http:\\/\\/upload-images.jianshu.io\\/upload_images\\/19928-93ffb471b64ee7f3.png?imageMogr2\\/auto-orient\\/strip%7CimageView2\\/2\\/w\\/1240\\u0022 style=\\u0022border:0px;vertical-align:middle;height:auto;\\u0022 \\/\\u003E\\u003C\\/span\\u003E\\u003C\\/div\\u003E\\n\\n\\u003Cp style=\\u0022margin:0px 0px 25px;color:rgb(47,47,47);font-family:\\u0027-apple-system\\u0027, \\u0027SF UI Text\\u0027, Arial, \\u0027PingFang SC\\u0027, \\u0027Hiragino Sans GB\\u0027, \\u0027Microsoft YaHei\\u0027, \\u0027WenQuanYi Micro Hei\\u0027, sans-serif;font-size:16px;\\u0022\\u003E\\u003Cspan style=\\u0022font-size:14px;\\u0022\\u003E\\u300a\\u542f\\u793a\\u5f55\\u300b\\u8fd9\\u672c\\u4e66\\u7684\\u4f5c\\u8005\\u4e3aMarty Cagan\\uff0c\\u662f\\u7845\\u8c37\\u4ea7\\u54c1\\u96c6\\u56e2\\u7684\\u521b\\u59cb\\u4eba\\u3002\\u8fc7\\u53bb20\\u591a\\u5e74\\uff0c\\u4ed6\\u66fe\\u4e3a\\u591a\\u52a0\\u4e00\\u6d41\\u8f6f\\u4ef6\\u4f01\\u4e1a\\u5de5\\u4f5c\\uff0c\\u5305\\u62ec\\u60e0\\u666e\\u3001\\u7f51\\u666f\\u3001\\u7f8e\\u56fd\\u5728\\u7ebf\\u3001eBay\\u7b49\\u3002\\u4ed6\\u4eb2\\u5386\\u4e86\\u4e2a\\u4eba\\u7535\\u8111\\u3001\\u4e92\\u8054\\u7f51\\u3001\\u7535\\u5b50\\u5546\\u52a1\\u7684\\u8d77\\u843d\\u6d6e\\u6c89\\uff0c\\u81f4\\u529b\\u4e8e\\u901a\\u8fc7\\u5199\\u4f5c\\u3001\\u6f14\\u8bb2\\u3001\\u57f9\\u8bad\\u5e2e\\u4e3b\\u5ba2\\u6237\\u6253\\u9020\\u5bcc\\u6709\\u521b\\u610f\\u7684\\u4ea7\\u54c1\\u3002\\u521b\\u529e\\u7845\\u8c37\\u4ea7\\u54c1\\u96c6\\u56e2\\u4e4b\\u524d\\uff0c\\u4ed6\\u662feBay\\u7684\\u9ad8\\u7ea7\\u526f\\u603b\\u88c1\\uff0c\\u5206\\u7ba1\\u4ea7\\u54c1\\u8bbe\\u8ba1\\u548c\\u4ea7\\u54c1\\u7ba1\\u7406\\uff0c\\u8d1f\\u8d23\\u89c4\\u5212\\u5168\\u7403\\u7535\\u5b50\\u5546\\u52a1\\u7f51\\u7ad9\\u7684\\u4ea7\\u54c1\\u548c\\u670d\\u52a1\\u3002\\u003C\\/span\\u003E\\u003C\\/p\\u003E\\n\",\"locationId\":\"0\",\"address\":\"\",\"deadlineNotify\":\"none\",\"daysOfNotifyBeforeDeadline\":\"0\",\"useInClassroom\":\"single\",\"singleBuy\":\"1\",\"freeStartTime\":\"0\",\"freeEndTime\":\"0\",\"locked\":\"0\",\"cover\":null,\"buyExpiryTime\":\"0\",\"enableFinish\":\"1\",\"maxRate\":\"100\",\"materialNum\":\"0\",\"publishedTaskNum\":\"7\",\"createdTime\":\"2017-06-16T10:57:28+08:00\",\"updatedTime\":\"1499079971\",\"creator\":\"22\",\"recommended\":\"0\",\"recommendedSeq\":\"0\",\"recommendedTime\":\"0\",\"categoryId\":\"4\",\"showServices\":\"1\",\"hitNum\":\"2\",\"courseType\":\"default\",\"rewardPoint\":\"0\",\"taskRewardPoint\":\"0\",\"memberIsLearned\":0,\"memberLearnedNum\":\"0\",\"expiryDay\":\"0\",\"lessonNum\":\"7\",\"userId\":\"22\",\"tryLookTime\":\"0\",\"tags\":[\"\\u6559\\u5b66\"],\"orgCode\":\"1.\",\"orgId\":\"1\",\"discount\":\"10.00\",\"subtitle\":\"\\u4e09\\u5e74\\u4e0d\\u5b66\\u4e60\\uff0c\\u56de\\u5bb6\\u5c31\\u79cd\\u5730\\u3002\",\"discountId\":\"0\",\"smallPicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/default\\/2017\\/06-16\\/1102422dfa37001998.jpg\",\"middlePicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/default\\/2017\\/06-16\\/1102422df1cb686400.jpg\",\"largePicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/default\\/2017\\/06-16\\/1102422de7c6776215.jpg\",\"teachers\":[{\"id\":\"22\",\"nickname\":\"pm520\",\"title\":\"\\u4e09\\u597d\\u8001\\u5e08\",\"following\":\"1\",\"follower\":\"0\",\"avatar\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/default\\/2017\\/06-16\\/105628c1d4ef268067.png\"}],\"priceType\":\"RMB\",\"coinName\":\"\\u79fb\\u52a8\\u5e01\",\"teacherIds\":[]},{\"id\":\"245\",\"courseSetId\":\"77\",\"title\":\"\\u65b0\\u89c6\\u9891\\u8bfe\\u7a0b-\\u597d\\u591a\\u89c6\\u9891\",\"learnMode\":\"freeMode\",\"expiryMode\":\"forever\",\"expiryDays\":\"0\",\"expiryStartDate\":\"0\",\"expiryEndDate\":\"0\",\"summary\":\"\",\"goals\":[],\"audiences\":[],\"isDefault\":\"0\",\"maxStudentNum\":\"0\",\"status\":\"published\",\"isFree\":\"1\",\"price\":\"0.00\",\"vipLevelId\":\"0\",\"buyable\":\"1\",\"tryLookable\":\"1\",\"tryLookLength\":\"1\",\"watchLimit\":\"0\",\"services\":[],\"taskNum\":\"13\",\"studentNum\":\"13\",\"parentId\":\"0\",\"ratingNum\":\"0\",\"rating\":\"0\",\"noteNum\":\"0\",\"threadNum\":\"3\",\"type\":\"normal\",\"approval\":\"0\",\"income\":\"0.00\",\"originPrice\":\"0.00\",\"coinPrice\":\"0.00\",\"originCoinPrice\":\"0.00\",\"showStudentNumType\":\"opened\",\"serializeMode\":\"none\",\"giveCredit\":\"0\",\"about\":\"\",\"locationId\":\"0\",\"address\":\"\",\"deadlineNotify\":\"none\",\"daysOfNotifyBeforeDeadline\":\"0\",\"useInClassroom\":\"single\",\"singleBuy\":\"1\",\"freeStartTime\":\"0\",\"freeEndTime\":\"0\",\"locked\":\"0\",\"cover\":null,\"buyExpiryTime\":\"0\",\"enableFinish\":\"1\",\"maxRate\":\"100\",\"materialNum\":\"0\",\"publishedTaskNum\":\"13\",\"createdTime\":\"2017-06-26T16:40:36+08:00\",\"updatedTime\":\"1499079911\",\"creator\":\"2\",\"recommended\":\"0\",\"recommendedSeq\":\"0\",\"recommendedTime\":\"0\",\"categoryId\":\"3\",\"showServices\":\"1\",\"hitNum\":\"5\",\"courseType\":\"normal\",\"rewardPoint\":\"0\",\"taskRewardPoint\":\"0\",\"memberIsLearned\":0,\"memberLearnedNum\":\"0\",\"lastLessonTitle\":\"\\u5723\\u8bde\\u6811_\\u6807\\u6e05\",\"expiryDay\":\"0\",\"lessonNum\":\"13\",\"userId\":\"2\",\"tryLookTime\":\"1\",\"tags\":[],\"orgCode\":\"1.\",\"orgId\":\"1\",\"discount\":\"10.00\",\"subtitle\":null,\"discountId\":\"0\",\"smallPicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/default\\/2017\\/06-22\\/162409972faa440297.jpg\",\"middlePicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/default\\/2017\\/06-22\\/1624099726b4543108.jpg\",\"largePicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/default\\/2017\\/06-22\\/162409971912223337.jpg\",\"teachers\":[{\"id\":\"32\",\"nickname\":\"Eshelp\",\"title\":\"\\u4e86\\u5c31\",\"following\":\"1\",\"follower\":\"3\",\"avatar\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/default\\/2017\\/06-14\\/144325d9c5e6816133.png\"}],\"priceType\":\"RMB\",\"coinName\":\"\\u79fb\\u52a8\\u5e01\",\"teacherIds\":[]},{\"id\":\"8\",\"courseSetId\":\"3\",\"title\":\"course2.0\\u65b0\\u8bfe\\u7a0b0331\",\"learnMode\":\"freeMode\",\"expiryMode\":\"forever\",\"expiryDays\":\"0\",\"expiryStartDate\":null,\"expiryEndDate\":null,\"summary\":\"\\u003Cp\\u003E\\u6211\\u662f\\u8ba1\\u5212\\u7b80\\u4ecb\\u003C\\/p\\u003E\\n\",\"goals\":[],\"audiences\":[],\"isDefault\":\"1\",\"maxStudentNum\":\"0\",\"status\":\"published\",\"isFree\":\"1\",\"price\":\"0.00\",\"vipLevelId\":\"0\",\"buyable\":\"1\",\"tryLookable\":\"1\",\"tryLookLength\":\"3\",\"watchLimit\":\"0\",\"services\":[\"homeworkReview\",\"testpaperReview\",\"teacherAnswer\",\"liveAnswer\"],\"taskNum\":\"9\",\"studentNum\":\"14\",\"parentId\":\"0\",\"ratingNum\":\"2\",\"rating\":\"4.5\",\"noteNum\":\"0\",\"threadNum\":\"2\",\"type\":\"normal\",\"approval\":\"0\",\"income\":\"277.24\",\"originPrice\":\"99.01\",\"coinPrice\":\"0.00\",\"originCoinPrice\":\"0.00\",\"showStudentNumType\":\"opened\",\"serializeMode\":\"none\",\"giveCredit\":\"0\",\"about\":\"\\u003Cp\\u003E\\u6211\\u662f\\u8ba1\\u5212\\u7b80\\u4ecb\\u003C\\/p\\u003E\\n\",\"locationId\":\"0\",\"address\":\"\",\"deadlineNotify\":\"none\",\"daysOfNotifyBeforeDeadline\":\"0\",\"useInClassroom\":\"single\",\"singleBuy\":\"1\",\"freeStartTime\":\"0\",\"freeEndTime\":\"0\",\"locked\":\"0\",\"cover\":null,\"buyExpiryTime\":\"0\",\"enableFinish\":\"0\",\"maxRate\":\"100\",\"materialNum\":\"0\",\"publishedTaskNum\":\"7\",\"createdTime\":\"2017-03-31T16:14:25+08:00\",\"updatedTime\":\"1499306275\",\"creator\":\"2\",\"recommended\":\"1\",\"recommendedSeq\":\"2\",\"recommendedTime\":\"1492517476\",\"categoryId\":\"3\",\"showServices\":\"1\",\"hitNum\":\"75\",\"courseType\":\"default\",\"rewardPoint\":\"0\",\"taskRewardPoint\":\"0\",\"memberIsLearned\":0,\"memberLearnedNum\":\"1\",\"lastLessonTitle\":\"\\u89c6\\u9891\",\"expiryDay\":\"0\",\"lessonNum\":\"9\",\"userId\":\"2\",\"tryLookTime\":\"3\",\"tags\":[\"\\u9ed8\\u8ba4\\u6807\\u7b7e\"],\"orgCode\":\"1.\",\"orgId\":\"1\",\"discount\":\"10.00\",\"subtitle\":\"\\u65f6\\u4ee3\\u5927\\u53a6\\u591a\\u6240\\uff0c\\u526f\\u6807\\u9898\",\"discountId\":\"0\",\"smallPicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/system\\/2017\\/06-16\\/1713117204fc765680.jpg\",\"middlePicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/system\\/2017\\/06-16\\/1713117204fc765680.jpg\",\"largePicture\":\"http:\\/\\/devtest.edusoho.cn\\/files\\/system\\/2017\\/06-16\\/1713117204fc765680.jpg\",\"teachers\":[{\"id\":\"21\",\"nickname\":\"js001\",\"title\":\"\",\"following\":\"0\",\"follower\":\"3\",\"avatar\":\"http:\\/\\/devtest.edusoho.cn\\/assets\\/img\\/default\\/avatar.png\"}],\"priceType\":\"RMB\",\"coinName\":\"\\u79fb\\u52a8\\u5e01\",\"teacherIds\":[]}]}"
						}
					]
				},
				{
					"name": "getLearningCourseWithoutToken_error_userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getLearningCourse failed ,userId is not existed !\"] = jsonData.data.length === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Course/getLearningCourseWithoutToken?userId=d",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Course",
								"getLearningCourseWithoutToken"
							],
							"query": [
								{
									"equals": true,
									"key": "userId",
									"value": "d"
								}
							]
						},
						"description": "获取用户在学课程-用户主页（错误用户id）"
					},
					"response": []
				},
				{
					"name": "getUserTeachCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if(jsonData.data.length >0){",
									"    for(var i =0; i<jsonData.data.length;i++){",
									"        var courseBody= JSON.stringify(jsonData.data[i]);  //json转换为string",
									"        tests[\"get user learning courses info success !\"] = courseBody.has(\"id\")&courseBody.has(\"courseSetId\")&courseBody.has(\"title\")&courseBody.has(\"largePicture\")&courseBody.has(\"isFree\")&courseBody.has(\"price\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Course/getUserTeachCourse?userId={{teacherId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Course",
								"getUserTeachCourse"
							],
							"query": [
								{
									"equals": true,
									"key": "userId",
									"value": "{{teacherId}}"
								}
							]
						},
						"description": "获取用户在教课程"
					},
					"response": []
				},
				{
					"name": "getUserTeachCourse_error_userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getUserTeachCourse failed ,userId is not existed !\"] = jsonData.data.length === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Course/getUserTeachCourse?userId=d",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Course",
								"getUserTeachCourse"
							],
							"query": [
								{
									"equals": true,
									"key": "userId",
									"value": "d"
								}
							]
						},
						"description": "获取用户在教课程（错误id）"
					},
					"response": []
				},
				{
					"name": "getCourseNotices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.length > 0){",
									"    for(var i=0;i<jsonData.length;i++){",
									"        var dataBody= JSON.stringify(jsonData[i]);  //json转换为string",
									"        tests[\"getClassRoomAnnouncements success\"] = (jsonData[i].targetType === \"course\")&dataBody.has(\"content\")&dataBody.has(\"startTime\")&dataBody.has(\"endTime\");",
									"}",
									"}",
									"if(jsonData.length === 0){",
									"    tests[\"There is no classRoomAnnouncements\"] = true;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Course/getCourseNotices?courseId={{courseId}}&limit=10&start=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Course",
								"getCourseNotices"
							],
							"query": [
								{
									"equals": true,
									"key": "courseId",
									"value": "{{courseId}}"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10"
								},
								{
									"equals": true,
									"key": "start",
									"value": "0 "
								}
							]
						},
						"description": "获取课程公告"
					},
					"response": []
				}
			]
		},
		{
			"name": "04_classroom",
			"description": "",
			"item": [
				{
					"name": "getClassroomInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getClassroomInfo success\"] = (jsonData.id === data.classroomId)&(responseBody.has(\"title\")&responseBody.has(\"about\")&responseBody.has(\"studentNum\")&responseBody.has(\"cover\")&responseBody.has(\"vipLevelId\")&responseBody.has(\"service\")&responseBody.has(\"rating\")&responseBody.has(\"buyable\")&responseBody.has(\"expiryMode\")&responseBody.has(\"expiryValue\")&responseBody.has(\"headTeacher\")&responseBody.has(\"price\")&responseBody.has(\"price2\")&responseBody.has(\"access\"));",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms/{{classroomId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"{{classroomId}}"
							]
						},
						"description": "获取班级信息"
					},
					"response": []
				},
				{
					"name": "getClassroomInfo_withoutToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getClassroomInfo success\"] = (jsonData.id === data.classroomId)&(responseBody.has(\"title\")&responseBody.has(\"about\")&responseBody.has(\"studentNum\")&responseBody.has(\"cover\")&responseBody.has(\"vipLevelId\")&responseBody.has(\"service\")&responseBody.has(\"rating\")&responseBody.has(\"buyable\")&responseBody.has(\"expiryMode\")&responseBody.has(\"expiryValue\")&responseBody.has(\"headTeacher\")&responseBody.has(\"price\")&responseBody.has(\"price2\")&responseBody.has(\"access\"));",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms/{{classroomId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"{{classroomId}}"
							]
						},
						"description": "获取班级信息"
					},
					"response": []
				},
				{
					"name": "getClassroomInfo_error_courseId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getClassroomInfo_error_courseId\"] = (jsonData.error.code === 10)&(jsonData.error.message === \"班级不存在\");",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms/errorId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"errorId"
							]
						},
						"description": "classroomId错误，获取班级信息失败"
					},
					"response": []
				},
				{
					"name": "getClassrooms_sortedByCreatedTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"    tests[\"get classrooms sorted by createdTime DESC !\"] = (jsonData.data[i].createdTime >= jsonData.data[i+1].createdTime);",
									"}",
									"",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get classroom info success\"] = (jsonData.data[i].status === \"published\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"price\")&responseBody.has(\"price2\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms?categoryId=0&sort=-createdTime&offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms"
							],
							"query": [
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "-createdTime"
								},
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取班级列表，按createdTime倒序排列"
					},
					"response": []
				},
				{
					"name": "getClassrooms_sortedByRecom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var count=0;",
									"var flag = true;",
									"//判断当前分类下被推荐的课程总数",
									"for (var i=0;i<jsonData.data.length;i++ ){",
									"    if(jsonData.data[i].recommended === \"1\"){",
									"        count=count+1;",
									"    }",
									"}",
									"//  tests[\"===\"+count]=true;",
									"//当前分类无推荐课程",
									"if(count === 0){",
									"   tests[\"There is no recommended classroom !\"] = true;",
									"}",
									"//当前分类只有一个推荐课程",
									"if(count === 1){",
									"if(jsonData.data[0].recommended == \"1\"){",
									"    tests[\"get classrooms sorted by recommendedSeq !\"] = true;",
									"}else{",
									"    tests[\"get classrooms sorted by recommendedSeq !\"] = false;",
									"}",
									"}",
									"// 当前分类有多个推荐课程",
									"if(count > 1){",
									"for (var i=0;i<count-1;i++ ){",
									"      if((jsonData.data[i].recommended==\"1\")&(jsonData.data[i+1].recommended==\"1\"))",
									"        //json获取的是string类型，直接比较的是字符串，所以需要将其转换为int型进行比较",
									"        if(parseInt(jsonData.data[i].recommendedSeq)<= parseInt(jsonData.data[i+1].recommendedSeq)){",
									"        flag = true;",
									"      }",
									"      else{",
									"        flag = false;break; ",
									"        }",
									"    }",
									"",
									"    tests[\"get classrooms sorted by recommendedSeq !\"] = flag;",
									"   ",
									"}",
									"",
									"",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get classroom info success\"] = (jsonData.data[i].status === \"published\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"price\")&responseBody.has(\"price2\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms?categoryId=0&sort=recommendedSeq&offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms"
							],
							"query": [
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "recommendedSeq"
								},
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取班级列表，按推荐序号排列"
					},
					"response": []
				},
				{
					"name": "getClassrooms_sortedByStudentNum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"    tests[\"get classrooms sorted by studentNum DESC !\"] = (jsonData.data[i].studentNum >= jsonData.data[i+1].studentNum);",
									"}",
									"",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"get classroom info success\"] = (jsonData.data[i].status === \"published\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"studentNum\")&responseBody.has(\"price\")&responseBody.has(\"price2\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms?categoryId=0&sort=-studentNum&offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms"
							],
							"query": [
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "-studentNum"
								},
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取班级列表，按studentNum倒序排列"
					},
					"response": []
				},
				{
					"name": "getClassroomCourses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getClassroomCourse Info success\"] = responseBody.has(\"title\")&responseBody.has(\"isFree\")&responseBody.has(\"studentNum\")&responseBody.has(\"status\")&responseBody.has(\"services\")&responseBody.has(\"originPrice\")&responseBody.has(\"price\")&responseBody.has(\"publishedTaskNum\")&responseBody.has(\"vipLevelId\");",
									"",
									"for(var i=0;i<jsonData.length-1;i++){",
									"    tests[\"get classroom courses sorted by createdTime ASC !\"] = (jsonData[i].createdTime <= jsonData[i+1].createdTime);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms/{{classroomId}}/courses",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"{{classroomId}}",
								"courses"
							]
						},
						"description": "获取班级课程GET api/classrooms/{classroomId}/courses"
					},
					"response": []
				},
				{
					"name": "isClassroomMember",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The user is the classroom member !\"] = (jsonData.classroomId === data.classroomId)&(jsonData.userId === data.userId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/classroom_members/{{classroomId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"classroom_members",
								"{{classroomId}}"
							]
						},
						"description": "判断当前用户是否是班级成员GET /me/classroom_members/{classroomId}"
					},
					"response": []
				},
				{
					"name": "isClassroomMember_error_notMember",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"The user is not classroom member !\"] = responseBody === \"{}\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/classroom_members/error",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"classroom_members",
								"error"
							]
						},
						"description": "判断当前用户是否是班级成员GET /me/classroom_members/{classroomId}"
					},
					"response": []
				},
				{
					"name": "joinFreeClassroom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"join classroom success !\"] = jsonData.classroomId === data.freeClassroomId;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/classrooms/{{freeClassroomId}}/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"{{freeClassroomId}}",
								"members"
							]
						},
						"description": "加入免费班级"
					},
					"response": []
				},
				{
					"name": "E001-joinFreeClassroom_error_repeat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var message = \"用户(#\"+data.userId+\")已经是学员\";",
									"tests[\"joinFreeClassroom_error_repeat\"] = (jsonData.error.code === 0)&(jsonData.error.message === message );*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/classrooms/{{freeClassroomId}}/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"{{freeClassroomId}}",
								"members"
							]
						},
						"description": "重复加入免费班级"
					},
					"response": []
				},
				{
					"name": "unlearnClassroom_free",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"unlearn classroom success !\"] = jsonData === true;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "classRoomId",
									"type": "text",
									"value": "{{freeClassroomId}}"
								},
								{
									"description": "",
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/ClassRoom/unlearn",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"ClassRoom",
								"unlearn"
							]
						},
						"description": "退出免费 班级"
					},
					"response": []
				},
				{
					"name": "E002-unlearnClassroom_error_notMember",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// var jsonData = JSON.parse(responseBody);",
									"// tests[\"The user is not in the classroom !\"] = (jsonData.error.name === \"error\")&(jsonData.error.message === \"您不是班级的学员。\" );"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "classRoomId",
									"type": "text",
									"value": "{{freeClassroomId}}"
								},
								{
									"description": "",
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/ClassRoom/unlearn",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"ClassRoom",
								"unlearn"
							]
						},
						"description": "非学员退出班级失败"
					},
					"response": []
				},
				{
					"name": "getClassRoomAnnouncements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.length > 0){",
									"    for(var i=0;i<jsonData.length;i++){",
									"        var dataBody= JSON.stringify(jsonData[i]);  //json转换为string",
									"        tests[\"getClassRoomAnnouncements success\"] = (jsonData[i].targetType === \"classroom\")&dataBody.has(\"content\")&dataBody.has(\"startTime\")&dataBody.has(\"endTime\");",
									"}",
									"}",
									"if(jsonData.length === 0){",
									"    tests[\"There is no classRoomAnnouncements\"] = true;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "test@edusoho.com"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "10001000"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/ClassRoom/getAnnouncements?classRoomId={{classRoomId}}&start=0&limit=10",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"ClassRoom",
								"getAnnouncements"
							],
							"query": [
								{
									"equals": true,
									"key": "classRoomId",
									"value": "{{classRoomId}}"
								},
								{
									"equals": true,
									"key": "start",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "获取班级公告"
					},
					"response": []
				},
				{
					"name": "getClassRoomReviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.data.length === 0){",
									"    tests[\"There is no ClassroomReviews in the classroom !\"] = true;",
									"}",
									"if(jsonData.data.length>0){",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    var dataString = JSON.stringify(jsonData.data[i]);//json转换为string",
									"    tests[\"getClassroomReviews success\"] = (jsonData.data[i].classroomId=== data.classroomId)&dataString.has(\"rating\")&dataString.has(\"content\")&dataString.has(\"user\");",
									"    }  ",
									"    ",
									"for(var i=0;i<jsonData.data.length-1;i++){",
									"        tests[\"get classroom reviews order by createdTime success\"] = jsonData.data[i].createdTime >= jsonData.data[i+1].createdTime ;",
									"    ",
									"}",
									"}",
									"",
									"   ",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "de4lu85ljw0s440wssc8cccs4cws48g"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "{{classroomId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/ClassRoom/getReviews",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"ClassRoom",
								"getReviews"
							]
						},
						"description": "获取班级评论列表"
					},
					"response": []
				},
				{
					"name": "getClassRoomTeachers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.length === 0){",
									"    tests[\"There is no ClassroomTeachers  !\"] = true;",
									"}",
									"if(jsonData.length>0){",
									"for(var i=0;i<jsonData.length;i++){",
									"    var dataString = JSON.stringify(jsonData[i]);//json转换为string",
									"    tests[\"getClassroomTeachers success\"] = dataString.has(\"id\")&dataString.has(\"nickname\")&dataString.has(\"largeAvatar\")&dataString.has(\"title\");",
									"    }  ",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "de4lu85ljw0s440wssc8cccs4cws48g"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "{{classroomId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/ClassRoom/getTeachers",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"ClassRoom",
								"getTeachers"
							]
						},
						"description": "获取班级教师"
					},
					"response": []
				},
				{
					"name": "getClassRoomMembers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.resources.length === 0){",
									"    tests[\"There is no Members in the classroom !\"] = true;",
									"}",
									"",
									"if(jsonData.resources.length>0){",
									"   for(var i=0;i<jsonData.resources.length;i++){",
									"    var dataString = JSON.stringify(jsonData.resources[i].user);//json转换为string",
									"    tests[\"getClassroomMembers success\"] = (jsonData.resources[i].classroomId ===data.classroomId)&(dataString.has(\"id\"))&dataString.has(\"nickname\")&dataString.has(\"avatar\")&dataString.has(\"title\");",
									"    }  ",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "{{classRoomId}}"
								},
								{
									"key": "start",
									"type": "text",
									"value": "0"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms/{{classroomId}}/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"{{classroomId}}",
								"members"
							]
						},
						"description": "获取班级成员"
					},
					"response": []
				},
				{
					"name": "getClassRoomMembers_withoutToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.resources.length === 0){",
									"    tests[\"There is no Members in the classroom !\"] = true;",
									"}",
									"",
									"if(jsonData.resources.length>0){",
									"   for(var i=0;i<jsonData.resources.length;i++){",
									"    var dataString = JSON.stringify(jsonData.resources[i].user);//json转换为string",
									"    tests[\"getClassroomMembers success\"] = (jsonData.resources[i].classroomId ===data.classroomId)&(dataString.has(\"id\"))&dataString.has(\"nickname\")&dataString.has(\"avatar\")&dataString.has(\"title\");",
									"    }  ",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "{{classRoomId}}"
								},
								{
									"key": "start",
									"type": "text",
									"value": "0"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms/{{classroomId}}/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"{{classroomId}}",
								"members"
							]
						},
						"description": "获取班级成员,不带token（未登录状态）"
					},
					"response": []
				},
				{
					"name": "getClassRoomMembers_error_classRoomId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.resources.length === 0){",
									"    tests[\"The classRoomId is not existed !\"] = true;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "{{classRoomId}}"
								},
								{
									"key": "start",
									"type": "text",
									"value": "0"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/classrooms/d/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"d",
								"members"
							]
						},
						"description": "获取班级成员失败，classRoomId不存在"
					},
					"response": []
				},
				{
					"name": "searchClassRoom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.data.length > 0){",
									"    for(var i = 0;i< jsonData.data.length;i++){",
									"        var classroomBody= JSON.stringify(jsonData.data[i]);  //json转换为string",
									"        tests[\"searchClassrooms success \"] = (jsonData.data[i].title.indexOf(data.searchKeyword)>-1)&classroomBody.has(\"id\")&classroomBody.has(\"title\")&classroomBody.has(\"price\")&classroomBody.has(\"largePicture\")&classroomBody.has(\"status\");",
									"    }",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "test@edusoho.com"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "10001000"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/ClassRoom/search?title={{searchKeyword}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"ClassRoom",
								"search"
							],
							"query": [
								{
									"equals": true,
									"key": "title",
									"value": "{{searchKeyword}}"
								}
							]
						},
						"description": "搜索班级"
					},
					"response": []
				}
			]
		},
		{
			"name": "05_me",
			"description": "用户相关api",
			"item": [
				{
					"name": "favoriteCourseSet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"favorite courseSet success !\"] = jsonData.success === true;",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "courseSetId",
									"type": "text",
									"value": "{{courseSetId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/favorite_course_sets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"favorite_course_sets"
							]
						},
						"description": "收藏课程"
					},
					"response": []
				},
				{
					"name": "isFavoritedCourseSet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get the courseSet favorited status success\"] = jsonData.isFavorite === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/favorite_course_sets/{{courseSetId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"favorite_course_sets",
								"{{courseSetId}}"
							]
						},
						"description": "api/users/{userId}/favorite_course_sets/{courseSetId}判断用户是否收藏课程"
					},
					"response": []
				},
				{
					"name": "getMyFavoritedCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"// var jsonData = JSON.parse(responseBody);",
									"// tests[\"get my favorited course success\"] = jsonData.isFavorite === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/favorite_course_sets?offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"favorite_course_sets"
							],
							"query": [
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取我的收藏课程"
					},
					"response": []
				},
				{
					"name": "unFavoriteCourseSet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"unfavorite courseSet success !\"] = jsonData.success === true;",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/favorite_course_sets/{{courseSetId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"favorite_course_sets",
								"{{courseSetId}}"
							]
						},
						"description": "取消收藏课程"
					},
					"response": []
				},
				{
					"name": "getMyCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    tests[\"getMyCourses info  success\"] = responseBody.has(\"title\")&responseBody.has(\"publishedTaskNum\")&responseBody.has(\"learnedNum\")&responseBody.has(\"courseSet\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/courses?offset=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"courses"
							],
							"query": [
								{
									"equals": true,
									"key": "offset",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": "获取的我的教学计划  "
					},
					"response": []
				},
				{
					"name": "getMyLiveCourseSet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.length;i++){",
									"    tests[\"getMyliveCourses info  success\"] = (jsonData[i].type === \"live\")&responseBody.has(\"title\")&responseBody.has(\"cover\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/live_course_sets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"live_course_sets"
							]
						},
						"description": "获取的我的 直播  课   "
					},
					"response": []
				},
				{
					"name": "getMyClassroom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"getMyClassroom info  success\"] = responseBody.has(\"title\")&responseBody.has(\"cover\")&responseBody.has(\"id\")&responseBody.has(\"about\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/me/classrooms",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"classrooms"
							]
						},
						"description": "获取的我的 班级  "
					},
					"response": []
				}
			]
		},
		{
			"name": "06_lesson&task",
			"description": "课时相关的api\n",
			"item": [
				{
					"name": "getLessonInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.id === data.lessonId)&(jsonData.courseId === data.courseId)){",
									"    tests[\"getLessonInfo success\"] =true;",
									"}else{",
									"    tests[\"getLessonInfo success\"] =false",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/lessons/{{lessonId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"lessons",
								"{{lessonId}}"
							]
						},
						"description": "获取课时详情信息"
					},
					"response": []
				},
				{
					"name": "getLessonInfo_error_ Unauthorize",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The member has not joined the course lesson\"] = jsonData.error.code ===  \"member.not_found\";",
									"// {",
									"//     \"error\": {",
									"//         \"code\": \"member.not_found\",",
									"//         \"message\": \"学员未找到\"",
									"//     }",
									"// }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/lessons/{{notJoinLessonId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"lessons",
								"{{notJoinLessonId}}"
							]
						},
						"description": "获取未加入的课程课时详情信息"
					},
					"response": []
				},
				{
					"name": "getLessonInfo_error_lessonId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"lessonId is not exist\"] = jsonData.error.code === \"not_courseId\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/lessons/d",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"lessons",
								"d"
							]
						},
						"description": "获取课时详情信息--课时ID错误"
					},
					"response": []
				},
				{
					"name": "getCourseDownLessons ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"// var jsonData = JSON.parse(responseBody);",
									"// var Obj1=jsonData.lessons;",
									"// // for (var c in Obj1) {",
									"// //                 // console.log(c + \":\", Obj1[c]);",
									"// //                 tests[\"id is ---\"+Obj1[c].id] = true;",
									"// //             }",
									"// if(jsonData.lessons.length!==0){    //判断lessons数组是否为空",
									"// if((Obj1[0].id == '316')&(Obj1[1].id == '317')&(Obj1[2].id == '318')&(Obj1[3].id == '330')&(jsonData.course.id === '87')){",
									"//     tests[\"getCourseDownLessons  success\"] =true;",
									"//     }else{",
									"//     tests[\"getCourseDownLessons  success\"] =false;",
									"//     }",
									"// }else{",
									"//     tests[\"getCourseDownLessons  success\"] =false;",
									"",
									"// }"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/mapi_v2/Lesson/getCourseDownLessons?courseId={{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Lesson",
								"getCourseDownLessons"
							],
							"query": [
								{
									"equals": true,
									"key": "courseId",
									"value": "{{courseId}}"
								}
							]
						},
						"description": "获取课程下所有下载课时信息"
					},
					"response": []
				},
				{
					"name": "getLesson",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.id === data.videoLessonId)&(jsonData.courseId === data.courseId)&(jsonData.type === \"video\")){",
									"    tests[\"getLesson success\"] =true;",
									"}else{",
									"    tests[\"getLesson success\"] =false",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "courseId",
									"type": "text",
									"value": "{{courseId}}"
								},
								{
									"key": "lessonId",
									"type": "text",
									"value": "{{videoLessonId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Lesson/getLesson",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Lesson",
								"getLesson"
							]
						},
						"description": "获取课时信息-缓存课时\napp操作：点击缓存课时"
					},
					"response": []
				},
				{
					"name": "getLesson_error_LessonId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// var jsonData = JSON.parse(responseBody);",
									"// tests[\"lessonInfo is not exist\"] = jsonData.error.name === \"not_courseId\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "courseId",
									"type": "text",
									"value": "3"
								},
								{
									"key": "lessonId",
									"type": "text",
									"value": "1200"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Lesson/getLesson",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Lesson",
								"getLesson"
							]
						},
						"description": "获取课时信息-缓存课时--课时信息不存在\napp操作：点击缓存课时"
					},
					"response": []
				},
				{
					"name": "getLiveTicket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.no){",
									"    tests[\"Get live ticket success\"] = true;",
									"    postman.setEnvironmentVariable(\"live_ticket\", jsonData.no);",
									"}",
									"else{",
									"     tests[\"Get live ticket success\"] = false;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "device",
									"type": "text",
									"value": "iphone"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/lessons/{{liveLessonId}}/live_tickets",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"lessons",
								"{{liveLessonId}}",
								"live_tickets"
							]
						},
						"description": "获取直播课live_ticket"
					},
					"response": [
						{
							"id": "37304596-c580-4b8d-93bf-1d0abad392b4",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "device",
											"value": "ios",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/lessons/112/live_tickets",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"lessons",
										"112",
										"live_tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 10 Feb 2017 05:40:01 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "665",
							"body": "{\"no\":\"589d52321d672856221833\",\"roomId\":\"46694\",\"user\":{\"id\":\"2\",\"nickname\":\"st001\",\"role\":\"student\",\"user\":\"2\"},\"device\":\"ios\",\"protocol\":\"http\"}"
						},
						{
							"id": "2d54b546-b425-4278-ad58-23b98354200c",
							"name": "非直播课程",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "device",
											"value": "ios",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/lessons/12/live_tickets",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"lessons",
										"12",
										"live_tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 10 Feb 2017 05:40:25 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "510",
							"body": "{\"error\":{\"code\":\"5001\",\"message\":\"\\u975e\\u76f4\\u64ad\\u8bfe\\u7a0b\"}}"
						}
					]
				},
				{
					"name": "getLiveInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Get live ticket success\"] =jsonData.no !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "device",
									"type": "text",
									"value": "iphone"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/lessons/{{liveLessonId}}/live_tickets/{{live_ticket}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"lessons",
								"{{liveLessonId}}",
								"live_tickets",
								"{{live_ticket}}"
							]
						},
						"description": "获取直播课INfo"
					},
					"response": [
						{
							"id": "28924a89-3a47-4181-9f69-de043041bb0c",
							"name": "非直播课程",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "device",
											"value": "ios",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/lessons/12/live_tickets",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"lessons",
										"12",
										"live_tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 10 Feb 2017 05:40:25 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "510",
							"body": "{\"error\":{\"code\":\"5001\",\"message\":\"\\u975e\\u76f4\\u64ad\\u8bfe\\u7a0b\"}}"
						},
						{
							"id": "cc3c0836-59e1-4efe-8184-160419d0ac27",
							"name": "200",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "device",
											"value": "ios",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/lessons/112/live_tickets",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"lessons",
										"112",
										"live_tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 10 Feb 2017 05:40:01 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "665",
							"body": "{\"no\":\"589d52321d672856221833\",\"roomId\":\"46694\",\"user\":{\"id\":\"2\",\"nickname\":\"st001\",\"role\":\"student\",\"user\":\"2\"},\"device\":\"ios\",\"protocol\":\"http\"}"
						}
					]
				},
				{
					"name": "getLiveReplay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get liveReplay success !\"] = (jsonData.url !== null)&(jsonData.sdk !== null)&(jsonData.device !== null);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "device",
									"type": "text",
									"value": "ios"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/lessons/{{liveLessonId}}/replay?device=iphone",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"lessons",
								"{{liveLessonId}}",
								"replay"
							],
							"query": [
								{
									"equals": true,
									"key": "device",
									"value": "iphone"
								}
							]
						},
						"description": "获取直播 回放 "
					},
					"response": []
				},
				{
					"name": "uploadWatchTime",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.lessonId === data.videoLessonId)&(jsonData.watchTime !== null)){",
									"    tests[\"uploadWatchTime success\"] =true;",
									"}else{",
									"    tests[\"uploadWatchTime success\"] =false",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "lessonId",
									"type": "text",
									"value": "{{videoLessonId}}"
								},
								{
									"key": "watchTime",
									"type": "text",
									"value": "60"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/lesson/watch_time",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"lesson",
								"watch_time"
							]
						},
						"description": "上报视频观看时间"
					},
					"response": []
				},
				{
					"name": "learnCourseTask_doing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"doing task success !\"] = ((jsonData.result.status === \"finish\")||(jsonData.result.status === \"start\"))&(jsonData.result.courseId === data.courseId)&(jsonData.result.courseTaskId === data.doingTaskId)&(jsonData.result.userId === data.userId)&(jsonData.event === \"doing\")&(responseBody.has(\"nextTask\"))&(responseBody.has(\"completionRate\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "lastTime ",
									"type": "text",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/tasks/{{doingTaskId}}/events/doing",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"tasks",
								"{{doingTaskId}}",
								"events",
								"doing"
							]
						},
						"description": "PATCH /courses/{courseId}/tasks/{taskId}/events/{envet:doing,finish}\n参数：\n字段\t是否必填\t描述\nlastTime timestamp\t是\t最近一次记录任务的时间戳"
					},
					"response": []
				},
				{
					"name": "learnCourseTask_finish",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"finish task success !\"] = (jsonData.result.status === \"finish\")&(jsonData.result.courseId === data.courseId)&(jsonData.result.courseTaskId === data.finishTaskId)&(jsonData.result.userId === data.userId)&(jsonData.event === \"finish\")&(responseBody.has(\"nextTask\"))&(responseBody.has(\"completionRate\"));",
									"",
									"// tests[\"Reward-Point-Notify  is present\"] = postman.getResponseHeader(\"Reward-Point-Notify\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/tasks/{{finishTaskId}}/events/finish",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"tasks",
								"{{finishTaskId}}",
								"events",
								"finish"
							]
						},
						"description": "PATCH /courses/{courseId}/tasks/{taskId}/events/{envet:doing,finish}\n参数：\n字段\t是否必填\t描述\nlastTime timestamp\t是\t最近一次记录任务的时间戳"
					},
					"response": [
						{
							"id": "d0848b7c-d4e3-494b-bdfd-a761b336d668",
							"name": "doing",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 28 Jun 2017 10:25:40 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "816d60"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://testmob.edusoho.cn/_profiler/816d60"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.5.9-1ubuntu4.21"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "testmob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "n3g61rpgvtjgh0npu0h4op0hf1",
									"key": "PHPSESSID"
								}
							],
							"responseTime": 282,
							"body": "{\"result\":{\"id\":\"27\",\"status\":\"start\",\"activityId\":\"17\",\"courseId\":\"3\",\"courseTaskId\":\"17\",\"userId\":\"15\",\"finishedTime\":\"0\",\"createdTime\":\"2017-06-28T18:25:17+08:00\",\"updatedTime\":\"2017-06-28T18:25:17+08:00\"},\"event\":\"doing\",\"nextTask\":null,\"lastTime\":1498645517,\"completionRate\":null}"
						},
						{
							"id": "7ab58a84-3723-4fb9-a05b-ce5dd0bc9d59",
							"name": "finish",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 28 Jun 2017 10:29:14 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "6686c9"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://testmob.edusoho.cn/_profiler/6686c9"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.5.9-1ubuntu4.21"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "testmob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "n3g61rpgvtjgh0npu0h4op0hf1",
									"key": "PHPSESSID"
								}
							],
							"responseTime": 300,
							"body": "{\"result\":{\"id\":\"27\",\"status\":\"finish\",\"activityId\":\"17\",\"courseId\":\"3\",\"courseTaskId\":\"17\",\"userId\":\"15\",\"finishedTime\":\"1498645732\",\"createdTime\":\"2017-06-28T18:25:17+08:00\",\"updatedTime\":\"2017-06-28T18:28:52+08:00\"},\"event\":\"finish\",\"nextTask\":{\"id\":\"1\",\"seq\":\"4\",\"title\":\"\\u56fe\\u6587\\u8bfe\\u65f6\",\"isFree\":\"1\",\"startTime\":\"0\",\"endTime\":\"0\",\"mode\":\"lesson\",\"status\":\"published\",\"number\":\"1\",\"type\":\"text\",\"length\":\"0\"},\"completionRate\":17}"
						}
					]
				},
				{
					"name": "getTaskInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get task info success !\"] = (jsonData.id === data.doingTaskId)&(responseBody.has(\"seq\"))&responseBody.has(\"title\")&responseBody.has(\"isFree\")&responseBody.has(\"status\")&responseBody.has(\"type\")&responseBody.has(\"type\")&responseBody.has(\"mediaSource\")&responseBody.has(\"length\")&responseBody.has(\"mediaId\")&responseBody.has(\"finishType\")&responseBody.has(\"result\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/tasks/{{doingTaskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"tasks",
								"{{doingTaskId}}"
							]
						},
						"description": "获取课时任务信息"
					},
					"response": []
				}
			]
		},
		{
			"name": "07_order",
			"description": "订单",
			"item": [
				{
					"name": "confirmOrderInfo_course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get course order infomation success !\"] = (jsonData.targetId === data.paidCourseId)&(jsonData.targetType === \"course\")&responseBody.has(\"totalPrice\")&responseBody.has(\"account\")&responseBody.has(\"coinName\")&responseBody.has(\"priceType\")&responseBody.has(\"availableCoupons\")&responseBody.has(\"title\")&responseBody.has(\"fullCoinPayable\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "{{paidCourseId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/order_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_info"
							]
						},
						"description": "确认课程订单信息"
					},
					"response": []
				},
				{
					"name": "confirmOrderInfo_classroom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get classroom order infomation success !\"] = (jsonData.targetId === data.paidClassroomId)&(jsonData.targetType === \"classroom\")&responseBody.has(\"totalPrice\")&responseBody.has(\"account\")&responseBody.has(\"coinName\")&responseBody.has(\"priceType\")&responseBody.has(\"availableCoupons\")&responseBody.has(\"title\")&responseBody.has(\"fullCoinPayable\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "{{paidClassroomId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/order_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_info"
							]
						},
						"description": "确认班级订单信息"
					},
					"response": []
				},
				{
					"name": "confirmOrderInfo_vip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get vip order infomation success !\"] = (jsonData.targetId === environment.vipLevelId)&(jsonData.targetType === \"vip\")&responseBody.has(\"totalPrice\")&responseBody.has(\"account\")&responseBody.has(\"coinName\")&responseBody.has(\"priceType\")&responseBody.has(\"availableCoupons\")&responseBody.has(\"title\")&responseBody.has(\"fullCoinPayable\")&responseBody.has(\"unitType\")&responseBody.has(\"duration\")&responseBody.has(\"buyType\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetType",
									"type": "text",
									"value": "vip"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "{{vipLevelId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/order_info",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_info"
							]
						},
						"description": "确认VIP订单信息"
					},
					"response": [
						{
							"id": "fe96be8d-d580-4898-a515-f9f1aba1d5dd",
							"name": "vip",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 13 Apr 2017 08:11:09 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "d1e9ad"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/d1e9ad"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "175",
							"body": "{\"targetId\":\"1\",\"targetType\":\"vip\",\"totalPrice\":\"300\",\"account\":{\"id\":\"10\",\"userId\":\"19\",\"cash\":\"9800.00\"},\"hasPayPassword\":1,\"verifiedMobile\":\"\",\"coinName\":\"\\u865a\\u62df\\u5e01\",\"cashRate\":\"1\",\"priceType\":\"RMB\",\"coinPayAmount\":\"300\",\"maxCoin\":\"300\",\"availableCoupons\":[{\"id\":\"142\",\"code\":\"ccv59996556\",\"type\":\"minus\",\"status\":\"receive\",\"rate\":\"10.00\",\"userId\":\"19\",\"deadline\":\"2017-04-30T00:00:00+08:00\",\"targetType\":\"all\",\"targetId\":\"0\"}],\"unitType\":\"month\",\"duration\":3,\"buyType\":\"new\",\"fullCoinPayable\":1,\"title\":\"\\u4e00\\u7ea7\"}"
						}
					]
				},
				{
					"name": "createOrder_coinPay_errorPass",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"Payment password error\"] = jsonData.error.code === 2002;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "targetType",
									"type": "text",
									"value": "course"
								},
								{
									"description": "",
									"key": "targetId",
									"type": "text",
									"value": "{{paidCourseId}}"
								},
								{
									"description": "",
									"key": "couponCode",
									"type": "text",
									"value": "",
									"disabled": true
								},
								{
									"description": "",
									"key": "coinPayAmount",
									"type": "text",
									"value": "{{courseCoinPrice}}"
								},
								{
									"description": "",
									"key": "payPassword",
									"type": "text",
									"value": "hiswBkbHdujHJGAK"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "创建订单失败，支付密码错误"
					},
					"response": [
						{
							"id": "88652724-310e-4274-9fa4-06dc24a57aee",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 31 Mar 2017 03:15:32 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.3"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "es.devtest1",
									"path": "/",
									"secure": false,
									"value": "4ql4gmna7pbqojophrr6tii4et",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "320",
							"body": "{\"id\":\"3\",\"sn\":\"C2017033111153261355\",\"status\":\"created\",\"title\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300a\\u6709\\u4ef7\\u683c\\u7684\\u8bfe\\u7a0b\\u300b- \\u8ba1\\u52122\",\"targetType\":\"course\",\"targetId\":\"4\",\"amount\":\"24.00\",\"totalPrice\":\"24.00\",\"isGift\":\"0\",\"giftTo\":\"\",\"discountId\":\"0\",\"discount\":\"10.00\",\"token\":null,\"refundId\":\"0\",\"userId\":\"4\",\"coupon\":\"\",\"couponDiscount\":\"0.00\",\"payment\":\"none\",\"coinAmount\":\"0.00\",\"coinRate\":\"1.00\",\"priceType\":\"RMB\",\"bank\":\"\",\"paidTime\":\"0\",\"cashSn\":null,\"note\":\"\",\"data\":[],\"createdTime\":\"1490930132\",\"updatedTime\":\"1490930132\"}"
						},
						{
							"id": "cd1d39ef-8c07-459c-a098-f87dfa94b939",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 13 Apr 2017 07:38:07 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "54426d"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/54426d"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "155",
							"body": "{\"id\":\"153\",\"sn\":\"C2017041315383856192\",\"status\":\"created\",\"title\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300acourse2.0\\u65b0\\u8bfe\\u7a0b0331\\u300b- \\u89e3\\u9501\\u5f0f\\u5b66\\u4e600401\",\"targetType\":\"course\",\"targetId\":\"13\",\"amount\":\"0.00\",\"totalPrice\":\"100.00\",\"isGift\":\"0\",\"giftTo\":\"\",\"discountId\":\"0\",\"discount\":\"10.00\",\"token\":\"C2017041315383856192PMGc5\",\"refundId\":\"0\",\"userId\":\"19\",\"coupon\":\"\",\"couponDiscount\":\"0.00\",\"payment\":\"none\",\"coinAmount\":\"100.00\",\"coinRate\":\"1.00\",\"priceType\":\"RMB\",\"bank\":\"\",\"paidTime\":\"0\",\"cashSn\":null,\"note\":\"\",\"data\":[],\"createdTime\":\"1492069118\",\"updatedTime\":\"0\"}"
						}
					]
				},
				{
					"name": "createOrder_coinPay_course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"create order success !\"] = (responseBody.has(\"id\"))&(responseBody.has(\"sn\"));",
									"postman.setEnvironmentVariable(\"orderId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "{{paidCourseId}}"
								},
								{
									"key": "couponCode",
									"type": "text",
									"value": "",
									"disabled": true
								},
								{
									"key": "coinPayAmount",
									"type": "text",
									"value": "{{courseCoinPrice}}"
								},
								{
									"key": "payPassword",
									"type": "text",
									"value": "{{payPWD}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "创建订单，选择虚拟币支付"
					},
					"response": [
						{
							"id": "2b8bb70b-bd51-4675-927a-8b1740c20445",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 31 Mar 2017 03:15:32 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.3"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "es.devtest1",
									"path": "/",
									"secure": false,
									"value": "4ql4gmna7pbqojophrr6tii4et",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "320",
							"body": "{\"id\":\"3\",\"sn\":\"C2017033111153261355\",\"status\":\"created\",\"title\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300a\\u6709\\u4ef7\\u683c\\u7684\\u8bfe\\u7a0b\\u300b- \\u8ba1\\u52122\",\"targetType\":\"course\",\"targetId\":\"4\",\"amount\":\"24.00\",\"totalPrice\":\"24.00\",\"isGift\":\"0\",\"giftTo\":\"\",\"discountId\":\"0\",\"discount\":\"10.00\",\"token\":null,\"refundId\":\"0\",\"userId\":\"4\",\"coupon\":\"\",\"couponDiscount\":\"0.00\",\"payment\":\"none\",\"coinAmount\":\"0.00\",\"coinRate\":\"1.00\",\"priceType\":\"RMB\",\"bank\":\"\",\"paidTime\":\"0\",\"cashSn\":null,\"note\":\"\",\"data\":[],\"createdTime\":\"1490930132\",\"updatedTime\":\"1490930132\"}"
						},
						{
							"id": "b5666261-9d96-4aef-9d37-7691c98094c2",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 13 Apr 2017 07:38:07 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "54426d"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/54426d"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "155",
							"body": "{\"id\":\"153\",\"sn\":\"C2017041315383856192\",\"status\":\"created\",\"title\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300acourse2.0\\u65b0\\u8bfe\\u7a0b0331\\u300b- \\u89e3\\u9501\\u5f0f\\u5b66\\u4e600401\",\"targetType\":\"course\",\"targetId\":\"13\",\"amount\":\"0.00\",\"totalPrice\":\"100.00\",\"isGift\":\"0\",\"giftTo\":\"\",\"discountId\":\"0\",\"discount\":\"10.00\",\"token\":\"C2017041315383856192PMGc5\",\"refundId\":\"0\",\"userId\":\"19\",\"coupon\":\"\",\"couponDiscount\":\"0.00\",\"payment\":\"none\",\"coinAmount\":\"100.00\",\"coinRate\":\"1.00\",\"priceType\":\"RMB\",\"bank\":\"\",\"paidTime\":\"0\",\"cashSn\":null,\"note\":\"\",\"data\":[],\"createdTime\":\"1492069118\",\"updatedTime\":\"0\"}"
						}
					]
				},
				{
					"name": "unlearnCourse",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"unlearn vip course success !\"] = jsonData.success === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "reason",
									"type": "text",
									"value": "我不想买了"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/course_members/{{paidCourseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"course_members",
								"{{paidCourseId}}"
							]
						},
						"description": "退出学习计划"
					},
					"response": []
				},
				{
					"name": "createOrder_coinPay_vip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"create order success !\"] = (responseBody.has(\"id\"))&(responseBody.has(\"sn\"));",
									"postman.setEnvironmentVariable(\"orderId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetType",
									"type": "text",
									"value": "vip"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "2"
								},
								{
									"key": "couponCode",
									"type": "text",
									"value": "",
									"disabled": true
								},
								{
									"key": "coinPayAmount",
									"type": "text",
									"value": "0.05"
								},
								{
									"key": "payPassword",
									"type": "text",
									"value": "JyDy+1ipl/QYOK3u"
								},
								{
									"description": "购买VIP,按月购买、按年购买",
									"key": "unit",
									"type": "text",
									"value": "month"
								},
								{
									"description": "购买VIP时长N月/年",
									"key": "num",
									"type": "text",
									"value": "1"
								},
								{
									"description": "VIP购买类型 new:购买,renew:续费,upgrade:升级",
									"key": "buyType",
									"type": "text",
									"value": "renew"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "创建订单，选择虚拟币支付"
					},
					"response": [
						{
							"id": "709905dc-6a79-4c4d-be1c-74b7d2b233c6",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 31 Mar 2017 03:15:32 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.3"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "es.devtest1",
									"path": "/",
									"secure": false,
									"value": "4ql4gmna7pbqojophrr6tii4et",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "320",
							"body": "{\"id\":\"3\",\"sn\":\"C2017033111153261355\",\"status\":\"created\",\"title\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300a\\u6709\\u4ef7\\u683c\\u7684\\u8bfe\\u7a0b\\u300b- \\u8ba1\\u52122\",\"targetType\":\"course\",\"targetId\":\"4\",\"amount\":\"24.00\",\"totalPrice\":\"24.00\",\"isGift\":\"0\",\"giftTo\":\"\",\"discountId\":\"0\",\"discount\":\"10.00\",\"token\":null,\"refundId\":\"0\",\"userId\":\"4\",\"coupon\":\"\",\"couponDiscount\":\"0.00\",\"payment\":\"none\",\"coinAmount\":\"0.00\",\"coinRate\":\"1.00\",\"priceType\":\"RMB\",\"bank\":\"\",\"paidTime\":\"0\",\"cashSn\":null,\"note\":\"\",\"data\":[],\"createdTime\":\"1490930132\",\"updatedTime\":\"1490930132\"}"
						},
						{
							"id": "a48a6b30-947d-4722-b4d3-7d77a4e1e556",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 13 Apr 2017 07:38:07 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "54426d"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/54426d"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "155",
							"body": "{\"id\":\"153\",\"sn\":\"C2017041315383856192\",\"status\":\"created\",\"title\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300acourse2.0\\u65b0\\u8bfe\\u7a0b0331\\u300b- \\u89e3\\u9501\\u5f0f\\u5b66\\u4e600401\",\"targetType\":\"course\",\"targetId\":\"13\",\"amount\":\"0.00\",\"totalPrice\":\"100.00\",\"isGift\":\"0\",\"giftTo\":\"\",\"discountId\":\"0\",\"discount\":\"10.00\",\"token\":\"C2017041315383856192PMGc5\",\"refundId\":\"0\",\"userId\":\"19\",\"coupon\":\"\",\"couponDiscount\":\"0.00\",\"payment\":\"none\",\"coinAmount\":\"100.00\",\"coinRate\":\"1.00\",\"priceType\":\"RMB\",\"bank\":\"\",\"paidTime\":\"0\",\"cashSn\":null,\"note\":\"\",\"data\":[],\"createdTime\":\"1492069118\",\"updatedTime\":\"0\"}"
						}
					]
				},
				{
					"name": "payCenter_coinPay_course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"coin paid success ！\"] = jsonData.status === \"paid\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "orderId",
									"type": "text",
									"value": "{{orderId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "payment",
									"type": "text",
									"value": "coin"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/pay_center",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"pay_center"
							]
						},
						"description": "虚拟币支付"
					},
					"response": []
				},
				{
					"name": "payCenter_coinPay_vip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Your test name\"] = jsonData.status === \"paid\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "orderId",
									"type": "text",
									"value": "{{orderId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "vip"
								},
								{
									"key": "payment",
									"type": "text",
									"value": "coin"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/pay_center",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"pay_center"
							]
						},
						"description": "虚拟币支付"
					},
					"response": []
				},
				{
					"name": "createOrder_aliPay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"create order success !\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    pm.expect(pm.response.text()).to.include(\"sn\");",
									"});",
									"",
									"if(pm.expect(pm.response.text()).to.include(\"sn\")){",
									"    pm.environment.set(\"orderId\", jsonData.id);",
									"    ",
									"}",
									"",
									""
								],
								"id": "b87cdd8c-b469-4d0f-b6ca-af719b508222",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "targetType",
									"type": "text",
									"value": "course"
								},
								{
									"description": "",
									"key": "targetId",
									"type": "text",
									"value": "{{paidCourseId}}"
								},
								{
									"description": "",
									"key": "appPay",
									"type": "text",
									"value": "Y"
								},
								{
									"description": "",
									"key": "payment",
									"type": "text",
									"value": "alipay"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "创建订单，选择支付宝支付"
					},
					"response": [
						{
							"id": "605d6c4c-6f13-4cd1-9500-c5ee41c20836",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 31 Mar 2017 03:15:32 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.3"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "es.devtest1",
									"path": "/",
									"secure": false,
									"value": "4ql4gmna7pbqojophrr6tii4et",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "320",
							"body": "{\"id\":\"3\",\"sn\":\"C2017033111153261355\",\"status\":\"created\",\"title\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300a\\u6709\\u4ef7\\u683c\\u7684\\u8bfe\\u7a0b\\u300b- \\u8ba1\\u52122\",\"targetType\":\"course\",\"targetId\":\"4\",\"amount\":\"24.00\",\"totalPrice\":\"24.00\",\"isGift\":\"0\",\"giftTo\":\"\",\"discountId\":\"0\",\"discount\":\"10.00\",\"token\":null,\"refundId\":\"0\",\"userId\":\"4\",\"coupon\":\"\",\"couponDiscount\":\"0.00\",\"payment\":\"none\",\"coinAmount\":\"0.00\",\"coinRate\":\"1.00\",\"priceType\":\"RMB\",\"bank\":\"\",\"paidTime\":\"0\",\"cashSn\":null,\"note\":\"\",\"data\":[],\"createdTime\":\"1490930132\",\"updatedTime\":\"1490930132\"}"
						},
						{
							"id": "9f376d2d-a5a4-45e6-a8ce-8306eb3db9bc",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 13 Apr 2017 07:38:07 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "54426d"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/54426d"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "155",
							"body": "{\"id\":\"153\",\"sn\":\"C2017041315383856192\",\"status\":\"created\",\"title\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300acourse2.0\\u65b0\\u8bfe\\u7a0b0331\\u300b- \\u89e3\\u9501\\u5f0f\\u5b66\\u4e600401\",\"targetType\":\"course\",\"targetId\":\"13\",\"amount\":\"0.00\",\"totalPrice\":\"100.00\",\"isGift\":\"0\",\"giftTo\":\"\",\"discountId\":\"0\",\"discount\":\"10.00\",\"token\":\"C2017041315383856192PMGc5\",\"refundId\":\"0\",\"userId\":\"19\",\"coupon\":\"\",\"couponDiscount\":\"0.00\",\"payment\":\"none\",\"coinAmount\":\"100.00\",\"coinRate\":\"1.00\",\"priceType\":\"RMB\",\"bank\":\"\",\"paidTime\":\"0\",\"cashSn\":null,\"note\":\"\",\"data\":[],\"createdTime\":\"1492069118\",\"updatedTime\":\"0\"}"
						}
					]
				},
				{
					"name": "payCenter_aliPay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"enter alipay success !\", function () {",
									"    pm.expect(jsonData.status).to.eql(\"paying\");",
									"    pm.expect(jsonData.trade_sn).to.eql(environment.orderId);",
									"    pm.expect(jsonData.paymentHtml).to.not.eql(\"\");",
									"});",
									""
								],
								"id": "28134dde-b31d-4e58-a7ee-ee7180026d21",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "orderId",
									"type": "text",
									"value": "{{orderId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "payment",
									"type": "text",
									"value": "alipay"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/pay_center",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"pay_center"
							]
						},
						"description": "支付宝支付"
					},
					"response": [
						{
							"id": "57e5d9a8-6801-4673-a57f-12ede636b6a1",
							"name": "alipay",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Tue, 27 Jun 2017 03:45:53 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "4b0a12"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/4b0a12"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": 75,
							"body": "{\"id\":\"2054\",\"sn\":\"C2017062711431190917\",\"status\":\"created\",\"paymentForm\":{\"action\":\"https:\\/\\/mapi.alipay.com\\/gateway.do?_input_charset=utf-8\",\"method\":\"post\",\"params\":{\"service\":\"alipay.wap.create.direct.pay.by.user\",\"partner\":\"2088801030402123\",\"payment_type\":1,\"_input_charset\":\"utf-8\",\"sign_type\":\"MD5\",\"out_trade_no\":\"C2017062711431190917\",\"subject\":\"\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300a\\u8fd9\\u662f\\u4e00\\u95e8\\u666e\\u901a\\u8bfe\\u7a0b\\u300b- \\u795e\\u795e\\u9053\\u9053\\u6240\",\"seller_id\":\"2088801030402123\",\"total_fee\":\"0.01\",\"notify_url\":\"http:\\/\\/devtest.edusoho.cn\\/pay\\/center\\/pay\\/alipay\\/notify\",\"return_url\":\"http:\\/\\/devtest.edusoho.cn\\/pay\\/center\\/pay\\/alipay\\/return_for_app\",\"show_url\":\"http:\\/\\/devtest.edusoho.cn\\/pay\\/center\\/success\\/show?id=2054\",\"sign\":\"7677911cb89a7f6dd16e7a01332710a8\"}},\"paymentHtml\":\"\\u003C!DOCTYPE html\\u003E\\n\\u003Chtml\\u003E\\n\\u003Chead\\u003E\\n  \\u003Cmeta charset=\\u0022utf-8\\u0022\\u003E\\n  \\u003Ctitle\\u003E\\u6b63\\u5728\\u8df3\\u8f6c\\u5230\\u652f\\u4ed8\\u7f51\\u5173...\\u003C\\/title\\u003E\\n\\u003Cbody\\u003E\\n\\n  \\u003Cform action=\\u0022https:\\/\\/mapi.alipay.com\\/gateway.do?_input_charset=utf-8\\u0022  method=\\u0022post\\u0022 name=\\u0022form\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022service\\u0022 value=\\u0022alipay.wap.create.direct.pay.by.user\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022partner\\u0022 value=\\u00222088801030402123\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022payment_type\\u0022 value=\\u00221\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022_input_charset\\u0022 value=\\u0022utf-8\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022sign_type\\u0022 value=\\u0022MD5\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022out_trade_no\\u0022 value=\\u0022C2017062711431190917\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022subject\\u0022 value=\\u0022\\u8d2d\\u4e70\\u8bfe\\u7a0b\\u300a\\u8fd9\\u662f\\u4e00\\u95e8\\u666e\\u901a\\u8bfe\\u7a0b\\u300b- \\u795e\\u795e\\u9053\\u9053\\u6240\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022seller_id\\u0022 value=\\u00222088801030402123\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022total_fee\\u0022 value=\\u00220.01\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022notify_url\\u0022 value=\\u0022http:\\/\\/devtest.edusoho.cn\\/pay\\/center\\/pay\\/alipay\\/notify\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022return_url\\u0022 value=\\u0022http:\\/\\/devtest.edusoho.cn\\/pay\\/center\\/pay\\/alipay\\/return_for_app\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022show_url\\u0022 value=\\u0022http:\\/\\/devtest.edusoho.cn\\/pay\\/center\\/success\\/show?id=2054\\u0022\\u003E\\n          \\u003Cinput type=\\u0022hidden\\u0022 name=\\u0022sign\\u0022 value=\\u00227677911cb89a7f6dd16e7a01332710a8\\u0022\\u003E\\n      \\u003C\\/form\\u003E\\n\\n  \\u003Cscript\\u003E\\n    document.all.form.submit();\\n  \\u003C\\/script\\u003E\\n\\n\\u003C\\/body\\u003E\\n\\u003C\\/html\\u003E\"}"
						}
					]
				},
				{
					"name": "createOrder_wechat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"create order success !\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    pm.expect(pm.response.text()).to.include(\"sn\");",
									"});",
									"",
									"if(pm.expect(pm.response.text()).to.include(\"sn\")){",
									"    pm.environment.set(\"orderId\", jsonData.id);",
									"    ",
									"}",
									"",
									"",
									"",
									""
								],
								"id": "9a921cf4-87e1-46d9-831c-7c389cf5a760",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "targetType",
									"type": "text",
									"value": "course"
								},
								{
									"description": "",
									"key": "targetId",
									"type": "text",
									"value": "{{paidCourseId}}"
								},
								{
									"description": "",
									"key": "appPay",
									"type": "text",
									"value": "Y"
								},
								{
									"description": "",
									"key": "payment",
									"type": "text",
									"value": "wechat"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "创建订单，选择支付宝支付"
					},
					"response": [
						{
							"id": "1234b740-fe66-4667-9481-8e9896a8a8dd",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "no-cache"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 31 Mar 2017 03:15:32 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.3"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "es.devtest1",
									"path": "/",
									"secure": false,
									"value": "4ql4gmna7pbqojophrr6tii4et",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "320",
							"body": "{\r\n\t\"id\": \"2018011514052411269\",\r\n\t\"sn\": \"2018011514052411269\"\r\n}"
						}
					]
				},
				{
					"name": "payCenter_wechat",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"var paymentUrl = environment.url+\"/pay/center/wxpay_mweb_app_trade?tradeSn=\"+jsonData.trade_sn;",
									"",
									"pm.test(\"enter wechat success !\", function () {",
									"    pm.expect(jsonData.status).to.eql(\"paying\");",
									"    pm.expect(jsonData.trade_sn).to.eql(environment.orderId);",
									"    pm.expect(jsonData.paymentUrl).to.eql(paymentUrl);",
									"});",
									""
								],
								"id": "50f069d1-98d0-4675-8b0e-eef5e27d8d1c",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "orderId",
									"type": "text",
									"value": "{{orderId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "payment",
									"type": "text",
									"value": "wechat"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/pay_center",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"pay_center"
							]
						},
						"description": "支付宝支付"
					},
					"response": [
						{
							"id": "f4392884-6a2e-45c3-a766-08b210eb8656",
							"name": "wechat",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Tue, 27 Jun 2017 03:45:53 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "4b0a12"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/4b0a12"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": 75,
							"body": "{\n  \"id\": \"49663\",\n  \"trade_sn\": \"2018011514052411269\",\n  \"status\": \"paying\",\n  \"paymentForm\": [],\n  \"paymentHtml\": \"\",\n  \"paymentUrl\": \"http://demo.edusoho.com/pay/center/wxpay_mweb_app_trade?tradeSn=2018011514052411269\",\n  \"sn\": \"2018011514052411269\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "08_catagory",
			"description": "分类",
			"item": [
				{
					"name": "getCourseCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var flag1 = true ; ",
									"var flag2 = true ;",
									"for(var i = 0 ; i < jsonData.length ; i++ ){",
									"    if(jsonData[i].id !== null){",
									"        flag1 = true ;",
									"        // tests[\"一级分类：\"+jsonData[i].name] = true;",
									"    }else{",
									"        flag1 = false ;break;",
									"    }",
									"   if(jsonData[i].children.length !== 0) {",
									"       for(var j = 0 ; j < jsonData[i].children.length ; j++){",
									"          if(jsonData[i].children[j].parentId === jsonData[i].id){",
									"            //   tests[\"一级分类：\"+jsonData[i].name+\"，有子分类：\"+jsonData[i].children[j].name] = true;",
									"            flag2 = true ;",
									"          }else{",
									"              flag2 = false ;break;",
									"          }",
									"      }",
									"   }",
									"}",
									"tests[\"getCategorieTree  success !\"] = (flag1&flag2) === 1;",
									"// tests[\"parentNum = \"+parentNum+\"childNum=\"+childNum] = true ;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/categories/course",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"categories",
								"course"
							]
						},
						"description": "获取课程/班级分类 GET /api/categories/{groupCode:course,classroom}"
					},
					"response": [
						{
							"id": "a64409f6-6c87-4c12-8c0f-9e38471083ab",
							"name": "course",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 22 Jun 2017 11:15:55 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Custom header",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "83d9ac"
								},
								{
									"description": "Custom header",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/83d9ac"
								},
								{
									"description": "Gives the date/time after which the response is considered stale",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain.",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": 136,
							"body": "[{\"id\":\"3\",\"code\":\"Java\",\"name\":\"Java\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"0\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":1,\"children\":[{\"id\":\"9\",\"code\":\"JavaScript\",\"name\":\"JavaScript\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"3\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":2,\"children\":[{\"id\":\"12\",\"code\":\"JavaChild\",\"name\":\"JavaChild\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"9\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":3,\"children\":[]}]}]},{\"id\":\"4\",\"code\":\"PHP\",\"name\":\"PHP\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"0\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":1,\"children\":[]},{\"id\":\"5\",\"code\":\"Android\",\"name\":\"Android\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"0\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":1,\"children\":[]}]"
						}
					]
				},
				{
					"name": "getClassroomCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var flag1 = true ; ",
									"var flag2 = true ;",
									"for(var i = 0 ; i < jsonData.length ; i++ ){",
									"    if(jsonData[i].id !== null){",
									"        flag1 = true ;",
									"        // tests[\"一级分类：\"+jsonData[i].name] = true;",
									"    }else{",
									"        flag1 = false ;break;",
									"    }",
									"   if(jsonData[i].children.length !== 0) {",
									"       for(var j = 0 ; j < jsonData[i].children.length ; j++){",
									"          if(jsonData[i].children[j].parentId === jsonData[i].id){",
									"            //   tests[\"一级分类：\"+jsonData[i].name+\"，有子分类：\"+jsonData[i].children[j].name] = true;",
									"            flag2 = true ;",
									"          }else{",
									"              flag2 = false ;break;",
									"          }",
									"      }",
									"   }",
									"}",
									"tests[\"getCategorieTree  success !\"] = (flag1&flag2) === 1;",
									"// tests[\"parentNum = \"+parentNum+\"childNum=\"+childNum] = true ;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/categories/classroom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"categories",
								"classroom"
							]
						},
						"description": "获取课程/班级分类 GET /api/categories/{groupCode:course,classroom}"
					},
					"response": [
						{
							"id": "96df65df-68e4-4f8e-b498-a8d5a738d2dc",
							"name": "course",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "Tells all caching mechanisms from server to client whether they may cache this object. It is measured in seconds",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "Options that are desired for the connection",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "The mime type of this content",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "The date and time that the message was sent",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 22 Jun 2017 11:15:55 GMT"
								},
								{
									"description": "A name for the server",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity.",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "Custom header",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "83d9ac"
								},
								{
									"description": "Custom header",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/83d9ac"
								},
								{
									"description": "Gives the date/time after which the response is considered stale",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "Implementation-specific headers that may have various effects anywhere along the request-response chain.",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": 136,
							"body": "[{\"id\":\"3\",\"code\":\"Java\",\"name\":\"Java\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"0\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":1,\"children\":[{\"id\":\"9\",\"code\":\"JavaScript\",\"name\":\"JavaScript\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"3\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":2,\"children\":[{\"id\":\"12\",\"code\":\"JavaChild\",\"name\":\"JavaChild\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"9\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":3,\"children\":[]}]}]},{\"id\":\"4\",\"code\":\"PHP\",\"name\":\"PHP\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"0\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":1,\"children\":[]},{\"id\":\"5\",\"code\":\"Android\",\"name\":\"Android\",\"icon\":\"\",\"path\":\"\",\"weight\":\"0\",\"groupId\":\"1\",\"parentId\":\"0\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"description\":\"\",\"depth\":1,\"children\":[]}]"
						}
					]
				}
			]
		},
		{
			"name": "09_thread",
			"description": "课程/班级问答和话题",
			"item": [
				{
					"name": "getClassroomThread_question",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"get classroom quetion info success !\"] = (jsonData.id === data.classroomQusetionId)&(jsonData.type === \"question\")&(jsonData.targetId === data.classroomId)&responseBody.has(\"title\")&responseBody.has(\"content\")&responseBody.has(\"createdTime\");",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/classroom/thread/{{classroomQusetionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classroom",
								"thread",
								"{{classroomQusetionId}}"
							]
						},
						"description": " 获取班级下某个问答信息"
					},
					"response": []
				},
				{
					"name": "getClassroomThread_discussion",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"get classroom discussion info success !\"] = (jsonData.id === data.classroomDiscussionId)&(jsonData.type === \"discussion\")&(jsonData.targetId === data.classroomId)&responseBody.has(\"title\")&responseBody.has(\"content\")&responseBody.has(\"createdTime\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/classroom/thread/{{classroomDiscussionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classroom",
								"thread",
								"{{classroomDiscussionId}}"
							]
						},
						"description": " 获取班级下某个话题信息"
					},
					"response": []
				},
				{
					"name": "getClassroomThread_error_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"API Token does not exist ！\"] = jsonData.message === \"API Token不存在！\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/api/classroom/thread/{{classroomQusetionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classroom",
								"thread",
								"{{classroomQusetionId}}"
							]
						},
						"description": "api token不正确"
					},
					"response": []
				},
				{
					"name": "getClassroomThread_error_threadId_notExisted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"questionId is not exist\"] = jsonData.error.code === \"not_found\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/classroom/thread/d",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classroom",
								"thread",
								"d"
							]
						},
						"description": "获取班级下某个问答/话题失败，threadId不存在"
					},
					"response": []
				},
				{
					"name": "getClassroomThreads",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var flag1 = true ;",
									"var flag2 = true ;",
									"var flag3 = true ;",
									"//当前课程下的所有问答/话题数",
									"if(jsonData.total <= 100){",
									"tests[\"The classroomThreads's total number is \"+jsonData.resources.length] = jsonData.total == jsonData.resources.length;",
									"}else",
									"{",
									"    tests[\"The classroomThreads's total number is \"+jsonData.total ]= true;",
									"}",
									"if(jsonData.resources.length === 0){",
									" tests[\"There is no classroomThreads !\"] = true ;   ",
									"}",
									"var count = 0;",
									"if(jsonData.resources.length>0){",
									"for(var i = 0;i<jsonData.resources.length;i++){",
									"     if(jsonData.resources[i].isStick === \"1\"){",
									"        count ++;",
									"    }",
									"    if(jsonData.resources[i].targetType === \"classroom\")",
									"    {",
									"        var isClassRoom = true;",
									"    }else{",
									"        isClassRoom = false;break;",
									"    }",
									"}",
									"tests[\"The type of threads is classRoom !\"] = isClassRoom === true;",
									"}  ",
									"//获取的问答或话题,先按置顶，再按最后一条消息时间倒序排序",
									"if(jsonData.resources.length>1){",
									"",
									"if(count === 1){",
									"    if(jsonData.resources[0].isStick == 1){",
									"    flag1 = true ;",
									"}else{",
									"    flag1 = false ;",
									"}",
									"}",
									"",
									"if(count > 1){",
									"    for(var j = 0; j<count-1;j++){",
									"        if(jsonData.resources[j].lastPostTime>=jsonData.resources[j+1].lastPostTime){",
									"            var flag2 = true ;",
									"        }else{",
									"            flag2 = false;break;",
									"        }",
									"    }",
									"}",
									"",
									"for(var i = count;i<jsonData.resources.length-count-1;i++){",
									"    if((jsonData.resources[i].lastPostTime)>=(jsonData.resources[i+1].lastPostTime)){",
									"        var flag3 = true;",
									"    }else{",
									"        flag3 = false;break;",
									"    }",
									"}",
									"",
									"if(flag1&flag2&flag3){",
									"    tests[\"The classRoomThreads is sorted by posted success !\"] =  true;",
									"}else{",
									"    tests[\"The classRoomThreads is sorted by posted success !\"] =  false;",
									"}",
									"}",
									" ",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/classrooms/{{classroomId}}/threads?limit=100&simplify=0&sort=posted",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"{{classroomId}}",
								"threads"
							],
							"query": [
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								},
								{
									"equals": true,
									"key": "simplify",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "posted "
								}
							]
						},
						"description": " 获取一个班级下所有问答/话题"
					},
					"response": [
						{
							"id": "cb321ace-4091-4402-b271-006aacba4ae0",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"enabled": true
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/api/classrooms/1/threads?classRoomId=1&limit=100&simplify=0&sort=posted",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"classrooms",
										"1",
										"threads"
									],
									"query": [
										{
											"key": "classRoomId",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "simplify",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "posted"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 04 Jan 2017 11:31:44 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [],
							"responseTime": "754",
							"body": "{\"resources\":[{\"id\":\"7\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"question170103\",\"content\":\"\\u003Cp\\u003Equestion\\u003C\\/p\\u003E\\r\\n\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"0\",\"lastPostUserId\":\"15\",\"lastPostTime\":\"2017-01-03T07:17:15+00:00\",\"location\":null,\"userId\":\"1\",\"type\":\"question\",\"postNum\":\"1\",\"hitNum\":\"2\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2017-01-03T07:14:08+00:00\",\"updateTime\":\"1483427835\",\"user\":{\"id\":\"1\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"zz\",\"roles\":[\"ROLE_USER\",\"ROLE_SUPER_ADMIN\",\"ROLE_TEACHER\"],\"avatar\":\"http:\\/\\/try3.edusoho.cn\\/files\\/user\\/2016\\/12-07\\/1647026ba4fa145554.jpg\"},\"updatedTime\":\"2017-01-03T07:17:15+00:00\"},{\"id\":\"1\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u8fd9\\u662f\\u4e00\\u4e2a\\u73ed\\u7ea7\\u95ee\\u7b54\",\"content\":\"\\u003Cp\\u003E\\u73ed\\u7ea7\\u548c\\u8bfe\\u7a0b\\u6709\\u4ec0\\u4e48\\u533a\\u522b?\\u003C\\/p\\u003E\\n\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"1\",\"lastPostUserId\":\"1\",\"lastPostTime\":\"2017-01-03T07:13:00+00:00\",\"location\":null,\"userId\":\"1\",\"type\":\"question\",\"postNum\":\"4\",\"hitNum\":\"16\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-22T09:13:46+00:00\",\"updateTime\":\"1483427581\",\"user\":{\"id\":\"1\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"zz\",\"roles\":[\"ROLE_USER\",\"ROLE_SUPER_ADMIN\",\"ROLE_TEACHER\"],\"avatar\":\"http:\\/\\/try3.edusoho.cn\\/files\\/user\\/2016\\/12-07\\/1647026ba4fa145554.jpg\"},\"updatedTime\":\"2017-01-03T07:13:01+00:00\"},{\"id\":\"6\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u54c8\\u54c8\\u54c8\\u6211\\u6d4b\\u8bd5\",\"content\":\"\\u003Cp\\u003E\\u54e6\\u54e6\\u003C\\/p\\u003E\\r\\n\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"1\",\"lastPostUserId\":\"2\",\"lastPostTime\":\"2017-01-03T06:36:55+00:00\",\"location\":null,\"userId\":\"1\",\"type\":\"discussion\",\"postNum\":\"2\",\"hitNum\":\"4\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2017-01-03T06:28:41+00:00\",\"updateTime\":\"1483427439\",\"user\":{\"id\":\"1\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"zz\",\"roles\":[\"ROLE_USER\",\"ROLE_SUPER_ADMIN\",\"ROLE_TEACHER\"],\"avatar\":\"http:\\/\\/try3.edusoho.cn\\/files\\/user\\/2016\\/12-07\\/1647026ba4fa145554.jpg\"},\"updatedTime\":\"2017-01-03T07:10:39+00:00\"},{\"id\":\"5\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u6807\\u98982016-12-26 11:45:38\",\"content\":\"\\u5185\\u5bb92016-12-26 11:45:38\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"0\",\"lastPostUserId\":\"15\",\"lastPostTime\":\"2016-12-26T03:45:25+00:00\",\"location\":null,\"userId\":\"15\",\"type\":\"question\",\"postNum\":\"0\",\"hitNum\":\"2\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-26T03:45:25+00:00\",\"updateTime\":\"1483424018\",\"user\":{\"id\":\"15\",\"nickname\":\"st001\",\"title\":\"\",\"roles\":[\"ROLE_USER\"],\"avatar\":\"\"},\"updatedTime\":\"2017-01-03T06:13:38+00:00\"},{\"id\":\"4\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u6807\\u98982016-12-26 11:37:06\",\"content\":\"\\u5185\\u5bb92016-12-26 11:37:06\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"0\",\"lastPostUserId\":\"15\",\"lastPostTime\":\"2016-12-26T03:36:53+00:00\",\"location\":null,\"userId\":\"15\",\"type\":\"question\",\"postNum\":\"0\",\"hitNum\":\"0\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-26T03:36:53+00:00\",\"updateTime\":\"1482723413\",\"user\":{\"id\":\"15\",\"nickname\":\"st001\",\"title\":\"\",\"roles\":[\"ROLE_USER\"],\"avatar\":\"\"},\"updatedTime\":\"2016-12-26T03:36:53+00:00\"},{\"id\":\"2\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u8fd9\\u662f\\u4e00\\u4e2a\\u73ed\\u7ea7\\u8bdd\\u9898\",\"content\":\"\\u003Cp\\u003E\\u5927\\u5bb6\\u6765\\u8c08\\u8c08app\\u6d4b\\u8bd5\\u548cweb\\u6d4b\\u8bd5\\u7684\\u533a\\u522b\\u5427\\u003C\\/p\\u003E\\r\\n\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"1\",\"lastPostUserId\":\"1\",\"lastPostTime\":\"2016-12-26T03:16:46+00:00\",\"location\":null,\"userId\":\"1\",\"type\":\"discussion\",\"postNum\":\"1\",\"hitNum\":\"6\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-22T09:14:29+00:00\",\"updateTime\":\"1482722206\",\"user\":{\"id\":\"1\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"zz\",\"roles\":[\"ROLE_USER\",\"ROLE_SUPER_ADMIN\",\"ROLE_TEACHER\"],\"avatar\":\"http:\\/\\/try3.edusoho.cn\\/files\\/user\\/2016\\/12-07\\/1647026ba4fa145554.jpg\"},\"updatedTime\":\"2016-12-26T03:16:46+00:00\"},{\"id\":\"3\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u6807\\u98982016-12-26 10:57:26\",\"content\":\"\\u5185\\u5bb92016-12-26 10:57:26\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"0\",\"lastPostUserId\":\"15\",\"lastPostTime\":\"2016-12-26T02:57:14+00:00\",\"location\":null,\"userId\":\"15\",\"type\":\"question\",\"postNum\":\"0\",\"hitNum\":\"3\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-26T02:57:14+00:00\",\"updateTime\":\"1483424364\",\"user\":{\"id\":\"15\",\"nickname\":\"st001\",\"title\":\"\",\"roles\":[\"ROLE_USER\"],\"avatar\":\"\"},\"updatedTime\":\"2017-01-03T06:19:24+00:00\"}],\"total\":\"7\"}"
						},
						{
							"id": "c713492d-b42f-4fdc-9920-614d06db3da3",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "X-Auth-Token",
										"value": "{{token}}",
										"enabled": true
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/api/classrooms/1/threads?classRoomId=1&limit=100&simplify=0&sort=posted",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"classrooms",
										"1",
										"threads"
									],
									"query": [
										{
											"key": "classRoomId",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "simplify",
											"value": "0"
										},
										{
											"key": "sort",
											"value": "posted"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Wed, 04 Jan 2017 11:31:44 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [],
							"responseTime": "754",
							"body": "{\"resources\":[{\"id\":\"7\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"question170103\",\"content\":\"\\u003Cp\\u003Equestion\\u003C\\/p\\u003E\\r\\n\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"0\",\"lastPostUserId\":\"15\",\"lastPostTime\":\"2017-01-03T07:17:15+00:00\",\"location\":null,\"userId\":\"1\",\"type\":\"question\",\"postNum\":\"1\",\"hitNum\":\"2\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2017-01-03T07:14:08+00:00\",\"updateTime\":\"1483427835\",\"user\":{\"id\":\"1\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"zz\",\"roles\":[\"ROLE_USER\",\"ROLE_SUPER_ADMIN\",\"ROLE_TEACHER\"],\"avatar\":\"http:\\/\\/try3.edusoho.cn\\/files\\/user\\/2016\\/12-07\\/1647026ba4fa145554.jpg\"},\"updatedTime\":\"2017-01-03T07:17:15+00:00\"},{\"id\":\"1\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u8fd9\\u662f\\u4e00\\u4e2a\\u73ed\\u7ea7\\u95ee\\u7b54\",\"content\":\"\\u003Cp\\u003E\\u73ed\\u7ea7\\u548c\\u8bfe\\u7a0b\\u6709\\u4ec0\\u4e48\\u533a\\u522b?\\u003C\\/p\\u003E\\n\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"1\",\"lastPostUserId\":\"1\",\"lastPostTime\":\"2017-01-03T07:13:00+00:00\",\"location\":null,\"userId\":\"1\",\"type\":\"question\",\"postNum\":\"4\",\"hitNum\":\"16\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-22T09:13:46+00:00\",\"updateTime\":\"1483427581\",\"user\":{\"id\":\"1\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"zz\",\"roles\":[\"ROLE_USER\",\"ROLE_SUPER_ADMIN\",\"ROLE_TEACHER\"],\"avatar\":\"http:\\/\\/try3.edusoho.cn\\/files\\/user\\/2016\\/12-07\\/1647026ba4fa145554.jpg\"},\"updatedTime\":\"2017-01-03T07:13:01+00:00\"},{\"id\":\"6\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u54c8\\u54c8\\u54c8\\u6211\\u6d4b\\u8bd5\",\"content\":\"\\u003Cp\\u003E\\u54e6\\u54e6\\u003C\\/p\\u003E\\r\\n\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"1\",\"lastPostUserId\":\"2\",\"lastPostTime\":\"2017-01-03T06:36:55+00:00\",\"location\":null,\"userId\":\"1\",\"type\":\"discussion\",\"postNum\":\"2\",\"hitNum\":\"4\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2017-01-03T06:28:41+00:00\",\"updateTime\":\"1483427439\",\"user\":{\"id\":\"1\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"zz\",\"roles\":[\"ROLE_USER\",\"ROLE_SUPER_ADMIN\",\"ROLE_TEACHER\"],\"avatar\":\"http:\\/\\/try3.edusoho.cn\\/files\\/user\\/2016\\/12-07\\/1647026ba4fa145554.jpg\"},\"updatedTime\":\"2017-01-03T07:10:39+00:00\"},{\"id\":\"5\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u6807\\u98982016-12-26 11:45:38\",\"content\":\"\\u5185\\u5bb92016-12-26 11:45:38\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"0\",\"lastPostUserId\":\"15\",\"lastPostTime\":\"2016-12-26T03:45:25+00:00\",\"location\":null,\"userId\":\"15\",\"type\":\"question\",\"postNum\":\"0\",\"hitNum\":\"2\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-26T03:45:25+00:00\",\"updateTime\":\"1483424018\",\"user\":{\"id\":\"15\",\"nickname\":\"st001\",\"title\":\"\",\"roles\":[\"ROLE_USER\"],\"avatar\":\"\"},\"updatedTime\":\"2017-01-03T06:13:38+00:00\"},{\"id\":\"4\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u6807\\u98982016-12-26 11:37:06\",\"content\":\"\\u5185\\u5bb92016-12-26 11:37:06\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"0\",\"lastPostUserId\":\"15\",\"lastPostTime\":\"2016-12-26T03:36:53+00:00\",\"location\":null,\"userId\":\"15\",\"type\":\"question\",\"postNum\":\"0\",\"hitNum\":\"0\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-26T03:36:53+00:00\",\"updateTime\":\"1482723413\",\"user\":{\"id\":\"15\",\"nickname\":\"st001\",\"title\":\"\",\"roles\":[\"ROLE_USER\"],\"avatar\":\"\"},\"updatedTime\":\"2016-12-26T03:36:53+00:00\"},{\"id\":\"2\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u8fd9\\u662f\\u4e00\\u4e2a\\u73ed\\u7ea7\\u8bdd\\u9898\",\"content\":\"\\u003Cp\\u003E\\u5927\\u5bb6\\u6765\\u8c08\\u8c08app\\u6d4b\\u8bd5\\u548cweb\\u6d4b\\u8bd5\\u7684\\u533a\\u522b\\u5427\\u003C\\/p\\u003E\\r\\n\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"1\",\"lastPostUserId\":\"1\",\"lastPostTime\":\"2016-12-26T03:16:46+00:00\",\"location\":null,\"userId\":\"1\",\"type\":\"discussion\",\"postNum\":\"1\",\"hitNum\":\"6\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-22T09:14:29+00:00\",\"updateTime\":\"1482722206\",\"user\":{\"id\":\"1\",\"nickname\":\"\\u6d4b\\u8bd5\\u7ba1\\u7406\\u5458\",\"title\":\"zz\",\"roles\":[\"ROLE_USER\",\"ROLE_SUPER_ADMIN\",\"ROLE_TEACHER\"],\"avatar\":\"http:\\/\\/try3.edusoho.cn\\/files\\/user\\/2016\\/12-07\\/1647026ba4fa145554.jpg\"},\"updatedTime\":\"2016-12-26T03:16:46+00:00\"},{\"id\":\"3\",\"targetType\":\"classroom\",\"targetId\":\"1\",\"relationId\":\"0\",\"categoryId\":\"0\",\"title\":\"\\u6807\\u98982016-12-26 10:57:26\",\"content\":\"\\u5185\\u5bb92016-12-26 10:57:26\",\"ats\":[],\"nice\":\"0\",\"sticky\":\"0\",\"solved\":\"0\",\"lastPostUserId\":\"15\",\"lastPostTime\":\"2016-12-26T02:57:14+00:00\",\"location\":null,\"userId\":\"15\",\"type\":\"question\",\"postNum\":\"0\",\"hitNum\":\"3\",\"memberNum\":\"0\",\"maxUsers\":\"0\",\"actvityPicture\":null,\"status\":\"open\",\"startTime\":\"0\",\"endTime\":\"0\",\"createdTime\":\"2016-12-26T02:57:14+00:00\",\"updateTime\":\"1483424364\",\"user\":{\"id\":\"15\",\"nickname\":\"st001\",\"title\":\"\",\"roles\":[\"ROLE_USER\"],\"avatar\":\"\"},\"updatedTime\":\"2017-01-03T06:19:24+00:00\"}],\"total\":\"7\"}"
						}
					]
				},
				{
					"name": "getClassroomThreads_error_classRoomId_notExisted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									" tests[\"classRoomId is error !\"] = jsonData.resources.length === 0 ;   ",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/classrooms/d/threads?classRoomId=d&limit=100&simplify=0&sort=posted",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"classrooms",
								"d",
								"threads"
							],
							"query": [
								{
									"equals": true,
									"key": "classRoomId",
									"value": "d"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								},
								{
									"equals": true,
									"key": "simplify",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "posted "
								}
							]
						},
						"description": "获取班级下某个问答/话题失败，classRoomId不存在"
					},
					"response": []
				},
				{
					"name": "getCourseThreadInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"QuestionId is \"+data.courseQusetionId] = jsonData.id === data.courseQusetionId;",
									"// tests[\"QuestionTitle is \"+jsonData.title] = jsonData.title === \"我是学生1\";",
									"// tests[\"QuestionContent is \"+jsonData.content] = jsonData.content === \"<p>你是谁</p>\";",
									"",
									"tests[\"type is \"+jsonData.type] = jsonData.type === \"question\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/threads/{{courseQusetionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"threads",
								"{{courseQusetionId}}"
							]
						},
						"description": " 获取课程下某个问答（话题）信息"
					},
					"response": []
				},
				{
					"name": "getCourseThread_error_threadId_notExisted",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/threads/e",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"threads",
								"e"
							]
						},
						"description": " 获取课程下某个问答（话题）信息,threadId错误"
					},
					"response": []
				},
				{
					"name": "getCourseThread_error_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"API Token does not exist ！\"] = jsonData.message === \"API Token不存在！\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/threads/{{courseQusetionId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"threads",
								"{{courseQusetionId}}"
							]
						},
						"description": " 获取课程下某个问答（话题）信息,token不存在"
					},
					"response": []
				},
				{
					"name": "getCourseThreads",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var flag1 = true ;",
									"var flag2 = true ;",
									"var flag3 = true ;",
									"//当前课程下的所有问答/话题数",
									"if(jsonData.total <= 100){",
									"tests[\"The courseThreads's total number is \"+jsonData.resources.length] = jsonData.total == jsonData.resources.length;",
									"}else",
									"{",
									"    tests[\"The courseThreads's total number is \"+jsonData.total ]= true;",
									"}",
									"if(jsonData.resources.length === 0){",
									" tests[\"There is no courseThreads !\"] = true ;   ",
									"}",
									"var count = 0;",
									"if(jsonData.resources.length>0){",
									"for(var i = 0;i<jsonData.resources.length;i++){",
									"     if(jsonData.resources[i].isStick === \"1\"){",
									"        count ++;",
									"    }",
									"    if(jsonData.resources[i].courseId === data.courseId)",
									"    {",
									"        var isCourse = true;",
									"    }else{",
									"        isCourse = false;break;",
									"    }",
									"}",
									"tests[\"The type of threads is course !\"] = isCourse === true;",
									"}  ",
									"//获取的问答或话题按最后一条消息时间倒序排序",
									"if(jsonData.resources.length>1){",
									"",
									"if(count === 1){",
									"    if(jsonData.resources[0].isStick == 1){",
									"    flag1 = true ;",
									"}else{",
									"    flag1 = false ;",
									"}",
									"}",
									"",
									"if(count > 1){",
									"    for(var j = 0; j<count-1;j++){",
									"        if(jsonData.resources[j].latestPostTime>=jsonData.resources[j+1].latestPostTime){",
									"            var flag2 = true ;",
									"        }else{",
									"            flag2 = false;break;",
									"        }",
									"    }",
									"}",
									"",
									"for(var i = count;i<jsonData.resources.length-1;i++){",
									"    if((jsonData.resources[i].latestPostTime)>=(jsonData.resources[i+1].latestPostTime)){",
									"        var flag3 = true;",
									"    }else{",
									"        flag3 = false;break;",
									"    }",
									"}",
									"// tests[\"length=\"+jsonData.resources.length]=false;",
									"// tests[\"count=\"+count]=false;",
									"// tests[\"flag1=\"+flag1]=false;",
									"// tests[\"flag2=\"+flag2]=false;",
									"// tests[\"flag3=\"+flag3]=false;",
									"if(flag1&flag2&flag3){",
									"    tests[\"The CourseThreads is sorted by posted success !\"] =  true;",
									"}else{",
									"    tests[\"The CourseThreads is sorted by posted success !\"] =  false;",
									"}",
									"}",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/threads?simplify=0&sort=posted&start=0&limit=100",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"threads"
							],
							"query": [
								{
									"equals": true,
									"key": "simplify",
									"value": "0"
								},
								{
									"equals": true,
									"key": "sort",
									"value": "posted"
								},
								{
									"equals": true,
									"key": "start",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								}
							]
						},
						"description": " 获取课程下所有问答/话题"
					},
					"response": []
				},
				{
					"name": "getThreadPosts_classroom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"//班级下某个问答/话题的回复数",
									"// tests[\"The classroomThreadPosts's total number is \"+jsonData.resources.length] = jsonData.total == jsonData.resources.length;",
									"",
									"if(jsonData.resources.length === 0){",
									" tests[\"There is no Threadposts !\"] = true ;   ",
									"}",
									"for(var i = 0;i<jsonData.resources.length;i++){",
									"    if(jsonData.resources[i].threadId === data.classroomQusetionId)",
									"    {",
									"        var f = true;",
									"    }else{",
									"        f = false;break;",
									"    }",
									"}",
									"tests[\"The threadId is \"+data.classroomQusetionId] = f === true;",
									"   ",
									"//获取的问答或话题回复按回复时间正序排序",
									"if(jsonData.resources.length>1){  ",
									"for(var i = 0;i<jsonData.resources.length-1;i++){",
									"    if((jsonData.resources[i].createdTime)<(jsonData.resources[i+1].createdTime)){",
									"        var flag = true;",
									"        // tests[\"第\"+i+\"个课程创建时间为--\"+jsonData.resources[i].createdTime] =false;",
									"        //  tests[\"第\"+(i+1)+\"个课程创建时间为--\"+jsonData.resources[i+1].createdTime] =false;",
									"    }else{",
									"        flag = false;break;",
									"    }",
									"}",
									"tests[\"The ClassroomThreadposts is sorted by latest success !\"] = flag === true;",
									"} ",
									"//   var jsonData = JSON.parse(responseBody);",
									"// if(responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"content\")){",
									"//     if((jsonData.id !==null)&(jsonData.title !==null)&(jsonData.content !==null)){",
									"//     tests[\"getClassroomQuestion_reply success\"] = true;",
									"//     }",
									"//     }else",
									"//     {",
									"//          tests[\"getClassroomQuestion_reply success\"] = false;",
									"//     }",
									"",
									"//     tests[\"questionReply totalNumber 不等于0\"] = jsonData.total !== 0;",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/thread/{{classroomQusetionId}}/posts?type=classroom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"thread",
								"{{classroomQusetionId}}",
								"posts"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "classroom"
								}
							]
						},
						"description": "获取班级下某个问答/话题下的所有回复"
					},
					"response": []
				},
				{
					"name": "getThreadPosts_course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"//班级下某个问答/话题的回复数",
									"// tests[\"The classroomThreadPosts's total number is \"+jsonData.resources.length] = jsonData.total == jsonData.resources.length;",
									"",
									"if(jsonData.resources.length === 0){",
									" tests[\"There is no Threadposts !\"] = true ;   ",
									"}",
									"for(var i = 0;i<jsonData.resources.length;i++){",
									"    if(jsonData.resources[i].threadId === data.courseQusetionId)",
									"    {",
									"        var f = true;",
									"    }else{",
									"        f = false;break;",
									"    }",
									"}",
									"tests[\"The threadId is \"+data.courseQusetionId] = f === true;",
									"if(jsonData.resources.length>1){   ",
									"//获取的问答或话题回复按回复时间正序排序",
									"for(var i = 0;i<jsonData.resources.length-1;i++){",
									"    if((jsonData.resources[i].createdTime)>(jsonData.resources[i+1].createdTime)){",
									"        var flag = true;",
									"        // tests[\"第\"+i+\"个课程创建时间为--\"+jsonData.resources[i].createdTime] =false;",
									"        //  tests[\"第\"+(i+1)+\"个课程创建时间为--\"+jsonData.resources[i+1].createdTime] =false;",
									"    }else{",
									"        flag = false;break;",
									"    }",
									"}",
									"tests[\"The ClassroomThreadposts is sorted by latest success !\"] = flag === true;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/thread/{{courseQusetionId}}/posts?type=course",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"thread",
								"{{courseQusetionId}}",
								"posts"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "course "
								}
							]
						},
						"description": "获取课程下某个问答/话题下的所有回复"
					},
					"response": []
				},
				{
					"name": "getThreadPosts_error_threadId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The threadId is not existed \"] = jsonData.resources.length === 0;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/thread/x/posts?type=classroom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"thread",
								"x",
								"posts"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "classroom"
								}
							]
						},
						"description": "获取某个问答（提问）下的所有回复:问答ID不存在"
					},
					"response": []
				},
				{
					"name": "getThreadPosts_error_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"API Token does not exist ！\"] = jsonData.message === \"API Token不存在！\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/api/thread/{{classRoomQusetionId}}/posts?type=classroom",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"thread",
								"{{classRoomQusetionId}}",
								"posts"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "classroom"
								}
							]
						},
						"description": "获取某个问答（提问）下的所有回复,token不存在"
					},
					"response": []
				},
				{
					"name": "i_getMyThreads",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"// var threadNum ;",
									"// for(var i = 0;i<jsonData.length;i++){",
									"//     if(jsonData.courseId[i] === \"87\")",
									"//     threadNum ++;",
									"// }",
									"// //获取我发起的所有问答/话题数量",
									"// tests[\"My threads is total number is \"+jsonData.length] = jsonData.length == threadNum ;",
									"// if(jsonData.length === 0){",
									"//  tests[\"I have no threads !\"] = true ;   ",
									"// }",
									"",
									"// if(jsonData.length>1){   ",
									"// //获取的问答或话题回复按回复时间倒序排序",
									"// for(var i = 0;i<jsonData.length-1;i++){",
									"//     if((jsonData[i].updatedTime)>(jsonData[i+1].updatedTime)){",
									"//         var flag = true;",
									"//         // tests[\"第\"+i+\"个课程创建时间为--\"+jsonData.resources[i].createdTime] =false;",
									"//         //  tests[\"第\"+(i+1)+\"个课程创建时间为--\"+jsonData.resources[i+1].createdTime] =false;",
									"//     }else{",
									"//         flag = false;break;",
									"//     }",
									"// }",
									"// tests[\"My threads is sorted by latest success !\"] = flag === true;",
									"// }",
									"// if(responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"content\")){",
									"//     if((jsonData.id !==null)&(jsonData.title !==null)&(jsonData.content !==null)){",
									"//     tests[\"i_getMyThreads success\"] = true;",
									"//     }",
									"//     }else",
									"//     {",
									"//          tests[\"i_getMyThreads success\"] = false;",
									"//     }",
									"    ",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/chaos_threads/getThreads?start=0&limit=10000",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads",
								"getThreads"
							],
							"query": [
								{
									"equals": true,
									"key": "start",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10000"
								}
							]
						},
						"description": "获取登录用户所有的问答（话题）"
					},
					"response": []
				},
				{
					"name": "i_getMyThreads _error_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"API Token does not exist ！\"] = jsonData.message === \"API Token不存在！\";",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/api/chaos_threads/getThreads?start=0&limit=10000",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads",
								"getThreads"
							],
							"query": [
								{
									"equals": true,
									"key": "start",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10000"
								}
							]
						},
						"description": "获取登录用户所有的问答（话题）-token不存在"
					},
					"response": []
				},
				{
					"name": "i_getMyThreadPosts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"content\")){",
									"  var jsonData = JSON.parse(responseBody);",
									"    if((jsonData.id !==null)&(jsonData.title !==null)&(jsonData.content !==null)){",
									"    tests[\"i_getMyThreadPosts success\"] = true;",
									"    }",
									"    }else",
									"    {",
									"         tests[\"i_getMyThreadPosts success\"] = false;",
									"    }",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/chaos_threads_posts/getThreadPosts?start=0&limit=10000",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads_posts",
								"getThreadPosts"
							],
							"query": [
								{
									"equals": true,
									"key": "start",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10000"
								}
							]
						},
						"description": "4.获取登录用户回复的所有问答/话题"
					},
					"response": []
				},
				{
					"name": "i_getMyThreadPosts _error_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"API Token does not exist ！\"] = jsonData.message === \"API Token不存在！\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/api/chaos_threads_posts/getThreadPosts?start=0&limit=10000",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads_posts",
								"getThreadPosts"
							],
							"query": [
								{
									"equals": true,
									"key": "start",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10000"
								}
							]
						},
						"description": "4.获取登录用户回复的所有问答/话题--token不存在"
					},
					"response": []
				},
				{
					"name": "getAllThreads",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var classroomThreadCount = 0;",
									"var courseThreadCount = 0;",
									"var groupThreadCount = 0;",
									"",
									"for(var i = 0;i<jsonData.resources.length;i++){",
									"    switch(jsonData.resources[i].targetType){",
									"         case \"classroom\":classroomThreadCount ++;break;  ",
									"         case \"course\":courseThreadCount ++;break;  ",
									"         case \"group\":groupThreadCount ++;break;  ",
									"",
									"    }",
									"}",
									"tests[\"get all threads success !\"] = (classroomThreadCount+courseThreadCount+groupThreadCount) === jsonData.resources.length;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": ""
								},
								{
									"key": "content",
									"type": "text",
									"value": ""
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "type",
									"type": "text",
									"value": "question"
								},
								{
									"key": "courseId",
									"type": "text",
									"value": "e"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads?start=0&limit=5",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads"
							],
							"query": [
								{
									"equals": true,
									"key": "start",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "获取所有问答,包括课程问答，班级问答，小组问答"
					},
					"response": []
				},
				{
					"name": "createThread_Group",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getNowFormatDate() {",
									"       var datetime = new Date();  ",
									"        // datetime.setTime(value.time);  ",
									"        var CurrentTime = \"\";",
									"        var year = datetime.getFullYear();  ",
									"        var month = datetime.getMonth() + 1 < 10 ? \"0\" + (datetime.getMonth() + 1) : datetime.getMonth() + 1;  ",
									"        var date = datetime.getDate() < 10 ? \"0\" + datetime.getDate() : datetime.getDate();  ",
									"        var hour = datetime.getHours()< 10 ? \"0\" + datetime.getHours() : datetime.getHours();  ",
									"        var minute = datetime.getMinutes()< 10 ? \"0\" + datetime.getMinutes() : datetime.getMinutes();  ",
									"        var second = datetime.getSeconds()< 10 ? \"0\" + datetime.getSeconds() : datetime.getSeconds();  ",
									"         CurrentTime = year + \"-\" + month + \"-\" + date+\" \"+hour+\":\"+minute+\":\"+second; ",
									"        return CurrentTime ;",
									"}",
									"",
									"    ",
									"       var random = getNowFormatDate();",
									"      postman.setEnvironmentVariable(\"randomTitle\", (\"group thread标题：\"+random+\"-\"+ Math.floor(Math.random() * 1000)));",
									"      postman.setEnvironmentVariable(\"randomContent\", (\"group thread内容：\"+random+\"-\"+ Math.floor(Math.random() * 1000)));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.targetId === data.groupId)&(jsonData.title === environment. randomTitle)&(jsonData.content === environment. randomContent))",
									"{",
									"    tests[\"newThread_group success\"] = true;",
									"}else{",
									"        tests[\"newThread_group success\"] = false;",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": "{{randomTitle}}"
								},
								{
									"key": "content",
									"type": "text",
									"value": "{{randomContent}}"
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "group"
								},
								{
									"key": "groupId",
									"type": "text",
									"value": "{{groupId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "manageQuestionThread",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var flag = true;",
									"if(jsonData.threads.length>0){",
									"    for(var i = 0;i<jsonData.threads.length;i++){",
									"    if(jsonData.threads[i].courseId === data.courseId){",
									"        flag = true;",
									"    }else{",
									"        flag = false;break;",
									"    }",
									"}",
									"    tests[\"get manage question success !\"] = flag;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{teacherToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": ""
								},
								{
									"key": "content",
									"type": "text",
									"value": ""
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "type",
									"type": "text",
									"value": "question"
								},
								{
									"key": "courseId",
									"type": "text",
									"value": "e"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/thread/manager/question?courseId={{courseId}}&start=20",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"thread",
								"manager",
								"question"
							],
							"query": [
								{
									"equals": true,
									"key": "courseId",
									"value": "{{courseId}}"
								},
								{
									"equals": true,
									"key": "start",
									"value": "20"
								}
							]
						},
						"description": "教师管理当前课程下的问答"
					},
					"response": []
				},
				{
					"name": "createThread_Course",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getNowFormatDate() {",
									"       var datetime = new Date();  ",
									"        // datetime.setTime(value.time);  ",
									"        var CurrentTime = \"\";",
									"        var year = datetime.getFullYear();  ",
									"        var month = datetime.getMonth() + 1 < 10 ? \"0\" + (datetime.getMonth() + 1) : datetime.getMonth() + 1;  ",
									"        var date = datetime.getDate() < 10 ? \"0\" + datetime.getDate() : datetime.getDate();  ",
									"        var hour = datetime.getHours()< 10 ? \"0\" + datetime.getHours() : datetime.getHours();  ",
									"        var minute = datetime.getMinutes()< 10 ? \"0\" + datetime.getMinutes() : datetime.getMinutes();  ",
									"        var second = datetime.getSeconds()< 10 ? \"0\" + datetime.getSeconds() : datetime.getSeconds();  ",
									"         CurrentTime = year + \"-\" + month + \"-\" + date+\" \"+hour+\":\"+minute+\":\"+second; ",
									"        return CurrentTime ;",
									"}",
									"",
									"    ",
									"       var random = getNowFormatDate();",
									"      postman.setEnvironmentVariable(\"randomTitle\", (\"课程thread标题：\"+random+\"-\"+ Math.floor(Math.random() * 1000)));",
									"      postman.setEnvironmentVariable(\"randomContent\", (\"课程thread内容：\"+random+\"-\"+ Math.floor(Math.random() * 1000)));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.courseId === data.courseId)&(jsonData.type === \"question\")&(jsonData.title === environment. randomTitle)&(jsonData.content === environment. randomContent))",
									"{",
									"    tests[\"newThread_course success\"] = true;",
									"}else{",
									"        tests[\"newThread_course success\"] = false;",
									"}",
									"// tests[\"Reward-Point-Notify  is present\"] = postman.getResponseHeader(\"Reward-Point-Notify\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": "{{randomTitle}}"
								},
								{
									"key": "content",
									"type": "text",
									"value": "{{randomContent}}"
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "type",
									"type": "text",
									"value": "question"
								},
								{
									"key": "courseId",
									"type": "text",
									"value": "{{courseId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads"
							]
						},
						"description": "发布课程问答"
					},
					"response": []
				},
				{
					"name": "createThread_course_error_courseId_notExisted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"createThread_error_courseId\"] = jsonData.message === \"没有发布话题权限\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": "1"
								},
								{
									"key": "content",
									"type": "text",
									"value": "2"
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "type",
									"type": "text",
									"value": "question"
								},
								{
									"key": "courseId",
									"type": "text",
									"value": "e"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads"
							]
						},
						"description": "发布课程问答失败,courseId不存在"
					},
					"response": []
				},
				{
					"name": "createThread_course_error_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"API Token does not exist ！\"] = jsonData.message === \"API Token不存在！\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": ""
								},
								{
									"key": "content",
									"type": "text",
									"value": ""
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "type",
									"type": "text",
									"value": "question"
								},
								{
									"key": "courseId",
									"type": "text",
									"value": "e"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads"
							]
						},
						"description": "发布课程问答失败,token不存在"
					},
					"response": []
				},
				{
					"name": "createThread_Classroom",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getNowFormatDate() {",
									"       var datetime = new Date();  ",
									"        // datetime.setTime(value.time);  ",
									"        var CurrentTime = \"\";",
									"        var year = datetime.getFullYear();  ",
									"        var month = datetime.getMonth() + 1 < 10 ? \"0\" + (datetime.getMonth() + 1) : datetime.getMonth() + 1;  ",
									"        var date = datetime.getDate() < 10 ? \"0\" + datetime.getDate() : datetime.getDate();  ",
									"        var hour = datetime.getHours()< 10 ? \"0\" + datetime.getHours() : datetime.getHours();  ",
									"        var minute = datetime.getMinutes()< 10 ? \"0\" + datetime.getMinutes() : datetime.getMinutes();  ",
									"        var second = datetime.getSeconds()< 10 ? \"0\" + datetime.getSeconds() : datetime.getSeconds();  ",
									"         CurrentTime = year + \"-\" + month + \"-\" + date+\" \"+hour+\":\"+minute+\":\"+second; ",
									"        return CurrentTime ;",
									"}",
									"",
									"    ",
									"       var random = getNowFormatDate();",
									"      postman.setEnvironmentVariable(\"randomTitle\", (\"classroom discussion标题：\"+random+\"-\"+ Math.floor(Math.random() * 1000)));",
									"      postman.setEnvironmentVariable(\"randomContent\", (\"classroom discussion内容：\"+random+\"-\"+ Math.floor(Math.random() * 1000)));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.targetType === \"classroom\")&(jsonData.targetId === data.classroomId)&(jsonData.type === \"discussion\")&(jsonData.title === environment.randomTitle)&(jsonData.content === environment.randomContent))",
									"{",
									"    tests[\"newThread_classroom success\"] = true;",
									"}else{",
									"        tests[\"newThread_classroom success\"] = false;",
									"}",
									"",
									"// tests[\"Reward-Point-Notify  is present\"] = postman.getResponseHeader(\"Reward-Point-Notify\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": "{{randomTitle}}"
								},
								{
									"key": "content",
									"type": "text",
									"value": "{{randomContent}}"
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "common"
								},
								{
									"key": "type",
									"type": "text",
									"value": "discussion"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "{{classroomId}}"
								},
								{
									"key": " targetType",
									"type": "text",
									"value": "classroom"
								},
								{
									"key": "",
									"type": "text",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads"
							]
						},
						"description": "发布班级问答或话题"
					},
					"response": []
				},
				{
					"name": "createThread_classroom_error_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"API Token does not exist ！\"] = jsonData.message === \"API Token不存在！\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": "标题"
								},
								{
									"key": "content",
									"type": "text",
									"value": "内容"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "9"
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "common"
								},
								{
									"key": "type",
									"type": "text",
									"value": "question"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads"
							]
						},
						"description": "发布班级问答失败，token不存在"
					},
					"response": []
				},
				{
					"name": "createThread_classroom_error_classroomId_notExisted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"createThread_classroom_error_classroomId\"] = jsonData.message ===  \"Permision `thread.create`, resource `classroom[error]`, access denied.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"type": "text",
									"value": "标题"
								},
								{
									"key": "content",
									"type": "text",
									"value": "内容"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "error"
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "common"
								},
								{
									"key": "type",
									"type": "text",
									"value": "question"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads"
							]
						},
						"description": "发布班级问答失败，classroomId错误"
					},
					"response": []
				},
				{
					"name": "replyThreadPost_Classroom",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getNowFormatDate() {",
									"       var datetime = new Date();  ",
									"        // datetime.setTime(value.time);  ",
									"        var CurrentTime = \"\";",
									"        var year = datetime.getFullYear();  ",
									"        var month = datetime.getMonth() + 1 < 10 ? \"0\" + (datetime.getMonth() + 1) : datetime.getMonth() + 1;  ",
									"        var date = datetime.getDate() < 10 ? \"0\" + datetime.getDate() : datetime.getDate();  ",
									"        var hour = datetime.getHours()< 10 ? \"0\" + datetime.getHours() : datetime.getHours();  ",
									"        var minute = datetime.getMinutes()< 10 ? \"0\" + datetime.getMinutes() : datetime.getMinutes();  ",
									"        var second = datetime.getSeconds()< 10 ? \"0\" + datetime.getSeconds() : datetime.getSeconds();  ",
									"         CurrentTime = year + \"-\" + month + \"-\" + date+\" \"+hour+\":\"+minute+\":\"+second; ",
									"        return CurrentTime ;",
									"}",
									"",
									"    ",
									"       var random = getNowFormatDate();",
									"      postman.setEnvironmentVariable(\"randomContent\", (\"classroom回复内容：\"+random+\"-\"+ Math.floor(Math.random() * 1000)));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.targetId === data.classroomId)&(jsonData.targetType ===\"classroom\")&(jsonData.threadId === data.classroomQusetionId)&(jsonData.content === environment.randomContent))",
									"{",
									"    tests[\"replyThreadPost_classroom success\"] = true;",
									"}else{",
									"        tests[\"replyThreadPost_classroom success\"] = false;",
									"}",
									"",
									"// tests[\"Reward-Point-Notify  is present\"] = postman.getResponseHeader(\"Reward-Point-Notify\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "threadId",
									"type": "text",
									"value": "{{classroomQusetionId}}"
								},
								{
									"key": "content",
									"type": "text",
									"value": "{{randomContent}}"
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "common"
								},
								{
									"key": "parentId",
									"type": "text",
									"value": "0"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads_posts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads_posts"
							]
						},
						"description": "班级问答/话题回复"
					},
					"response": []
				},
				{
					"name": "replyThreadPost_Course",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"function getNowFormatDate() {",
									"       var datetime = new Date();  ",
									"        // datetime.setTime(value.time);  ",
									"        var CurrentTime = \"\";",
									"        var year = datetime.getFullYear();  ",
									"        var month = datetime.getMonth() + 1 < 10 ? \"0\" + (datetime.getMonth() + 1) : datetime.getMonth() + 1;  ",
									"        var date = datetime.getDate() < 10 ? \"0\" + datetime.getDate() : datetime.getDate();  ",
									"        var hour = datetime.getHours()< 10 ? \"0\" + datetime.getHours() : datetime.getHours();  ",
									"        var minute = datetime.getMinutes()< 10 ? \"0\" + datetime.getMinutes() : datetime.getMinutes();  ",
									"        var second = datetime.getSeconds()< 10 ? \"0\" + datetime.getSeconds() : datetime.getSeconds();  ",
									"         CurrentTime = year + \"-\" + month + \"-\" + date+\" \"+hour+\":\"+minute+\":\"+second; ",
									"        return CurrentTime ;",
									"}",
									"",
									"    ",
									"       var random = getNowFormatDate();",
									"      postman.setEnvironmentVariable(\"randomContent\", (\"回复内容：\"+random+\"-\"+ Math.floor(Math.random() * 1000)));",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.courseId === data.courseId)&(jsonData.threadId === data.courseQusetionId)&(jsonData.content === environment.randomContent))",
									"{",
									"    tests[\"replyThreadPost_course success\"] = true;",
									"}else{",
									"        tests[\"replyThreadPost_course success\"] = false;",
									"}",
									"",
									"// tests[\"Reward-Point-Notify  is present\"] = postman.getResponseHeader(\"Reward-Point-Notify\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "threadId",
									"type": "text",
									"value": "{{courseQusetionId}}"
								},
								{
									"key": "content",
									"type": "text",
									"value": "{{randomContent}}"
								},
								{
									"key": "threadType",
									"type": "text",
									"value": "course"
								},
								{
									"key": "courseId",
									"type": "text",
									"value": "{{courseId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads_posts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads_posts"
							]
						},
						"description": "课程问答/话题回复"
					},
					"response": []
				},
				{
					"name": "replyThreadPost_error_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 500\"] = responseCode.code === 500;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"API Token does not exist ！\"] = jsonData.message === \"API Token不存在！\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "threadId",
									"type": "text",
									"value": "{{courseQusetionId}}"
								},
								{
									"description": "",
									"key": "content",
									"type": "text",
									"value": "{{randomContent}}"
								},
								{
									"description": "",
									"key": "threadType",
									"type": "text",
									"value": "course"
								},
								{
									"description": "",
									"key": "courseId",
									"type": "text",
									"value": "{{courseId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/chaos_threads_posts",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"chaos_threads_posts"
							]
						},
						"description": "问答/话题回复，token不存在"
					},
					"response": []
				},
				{
					"name": "getCourseThreads_withoutParam",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93a4b7cc-5f70-479f-bee2-f5186ee44c2a",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var flag1 = true ;",
									"var flag2 = true ;",
									"var flag3 = true ;",
									"//当前课程下的所有问答/话题数",
									"if(jsonData.total <= 10){",
									"tests[\"The courseThreads's total number is \"+jsonData.resources.length] = jsonData.total == jsonData.resources.length;",
									"}else",
									"{",
									"    tests[\"The courseThreads's total number is \"+jsonData.total ]= true;",
									"}",
									"if(jsonData.resources.length === 0){",
									" tests[\"There is no courseThreads !\"] = true ;   ",
									"}",
									"var count = 0;",
									"if(jsonData.resources.length>0){",
									"for(var i = 0;i<jsonData.resources.length;i++){",
									"     if(jsonData.resources[i].isStick === \"1\"){",
									"        count ++;",
									"    }",
									"    if(jsonData.resources[i].courseId === data.courseId)",
									"    {",
									"        var isCourse = true;",
									"    }else{",
									"        isCourse = false;break;",
									"    }",
									"}",
									"tests[\"The type of threads is course !\"] = isCourse === true;",
									"}  ",
									"//获取的问答或话题按最后一条消息时间倒序排序",
									"if(jsonData.resources.length>1){",
									"",
									"if(count === 1){",
									"    if(jsonData.resources[0].isStick == 1){",
									"    flag1 = true ;",
									"}else{",
									"    flag1 = false ;",
									"}",
									"}",
									"",
									"if(count > 1){",
									"    for(var j = 0; j<count-1;j++){",
									"        if(jsonData.resources[j].latestPostTime>=jsonData.resources[j+1].latestPostTime){",
									"            var flag2 = true ;",
									"        }else{",
									"            flag2 = false;break;",
									"        }",
									"    }",
									"}",
									"",
									"for(var i = count;i<jsonData.resources.length-count-1;i++){",
									"    if((jsonData.resources[i].latestPostTime)>=(jsonData.resources[i+1].latestPostTime)){",
									"        var flag3 = true;",
									"    }else{",
									"        flag3 = false;break;",
									"    }",
									"}",
									"// tests[\"length=\"+jsonData.resources.length]=false;",
									"// tests[\"count=\"+count]=false;",
									"// tests[\"flag1=\"+flag1]=false;",
									"// tests[\"flag2=\"+flag2]=false;",
									"// tests[\"flag3=\"+flag3]=false;",
									"if(flag1&flag2&flag3){",
									"    tests[\"The CourseThreads is sorted by posted success !\"] =  true;",
									"}else{",
									"    tests[\"The CourseThreads is sorted by posted success !\"] =  false;",
									"}",
									"}",
									" "
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/courses/{{courseId}}/threads",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"courses",
								"{{courseId}}",
								"threads"
							]
						},
						"description": " 获取课程下所有问答/话题,不带参数"
					},
					"response": []
				}
			]
		},
		{
			"name": "10_testpaper",
			"description": "课时相关的api\n",
			"item": [
				{
					"name": "getTestpaperInfo ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getTestPaperInfo success\"] = (jsonData.testpaper.id === data.testpaperId)&responseBody.has(\"name\")&responseBody.has(\"description\")&responseBody.has(\"score\")&responseBody.has(\"score\")&responseBody.has(\"itemCount\")&responseBody.has(\"items\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "testId",
									"type": "text",
									"value": "{{testpaperId}}\n"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Lesson/getTestpaperInfo",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Lesson",
								"getTestpaperInfo"
							]
						},
						"description": "获取考试试卷信息\n"
					},
					"response": []
				},
				{
					"name": "getTestpaperInfo_error_testId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"testPaper is not exist\"] = jsonData.error.name === \"error\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "testId",
									"type": "text",
									"value": "e"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Lesson/getTestpaperInfo",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Lesson",
								"getTestpaperInfo"
							]
						},
						"description": "获取考试试卷信息--试卷testID不存在\n"
					},
					"response": []
				},
				{
					"name": "doTestpaper ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var itemsBody = JSON.stringify(jsonData.items);",
									"var testpaperBody = JSON.stringify(jsonData.testpaper);",
									"",
									"tests[\"getTestpaperInfo success !\"] = (jsonData.testpaper.id === data.testpaperId)&itemsBody.has(\"seq\")&itemsBody.has(\"questionId\")&itemsBody.has(\"questionType\")&itemsBody.has(\"score\")&itemsBody.has(\"answer\")&itemsBody.has(\"analysis\")&itemsBody.has(\"metas\")&testpaperBody.has(\"name\")&testpaperBody.has(\"metas\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "testId",
									"type": "text",
									"value": "{{testpaperId}}"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "{{doTestLessonId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "lesson"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Testpaper/doTestpaper",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Testpaper",
								"doTestpaper"
							]
						},
						"description": "进入考试\n"
					},
					"response": []
				},
				{
					"name": "doTestpaper_error_testId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"testPaper is not exist\"] = (jsonData.error.name === \"error\")&(jsonData.error.message === \"试卷不存在！或已删除!\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetType",
									"type": "text",
									"value": "lesson"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "{{doTestLessonId}}"
								},
								{
									"key": "testId",
									"type": "text",
									"value": "d"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Testpaper/doTestpaper",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Testpaper",
								"doTestpaper"
							]
						},
						"description": "进入考试--试卷testId错误\n"
					},
					"response": []
				},
				{
					"name": "reDoTestpaper ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var itemsBody = JSON.stringify(jsonData.items);",
									"var testpaperBody = JSON.stringify(jsonData.testpaper);",
									"",
									"tests[\"getTestpaperInfo success !\"] = (jsonData.testpaper.id === data.testpaperId)&itemsBody.has(\"seq\")&itemsBody.has(\"questionId\")&itemsBody.has(\"questionType\")&itemsBody.has(\"score\")&itemsBody.has(\"answer\")&itemsBody.has(\"analysis\")&itemsBody.has(\"metas\")&testpaperBody.has(\"name\")&testpaperBody.has(\"metas\");",
									"if(jsonData.testpaperResult.id){",
									"    postman.setEnvironmentVariable(\"testResultId\", jsonData.testpaperResult.id);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "testId",
									"type": "text",
									"value": "{{testpaperId}}"
								},
								{
									"description": "",
									"key": "targetId",
									"type": "text",
									"value": "{{redoTestLessonId}}"
								},
								{
									"description": "",
									"key": "targetType",
									"type": "text",
									"value": "lesson"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Testpaper/reDoTestpaper",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Testpaper",
								"reDoTestpaper"
							]
						},
						"description": "重考\n"
					},
					"response": []
				},
				{
					"name": "reDoTestpaper_error_testId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"testPaper is not exist\"] = (jsonData.error.name === \"error\")&(jsonData.error.message === \"试卷不存在！或已删除!\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "targetType",
									"type": "text",
									"value": "lesson"
								},
								{
									"description": "",
									"key": "targetId",
									"type": "text",
									"value": "{{redoTestLessonId}}"
								},
								{
									"description": "",
									"key": "testId",
									"type": "text",
									"value": "d"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Testpaper/reDoTestpaper",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Testpaper",
								"reDoTestpaper"
							]
						},
						"description": "重考--试卷testId错误\n"
					},
					"response": []
				},
				{
					"name": "finishTestpaper",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"finish testpaper success !\"] = responseBody === \"true\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"description": "",
									"key": "usedTime",
									"type": "text",
									"value": "0"
								},
								{
									"description": "",
									"key": "id",
									"type": "text",
									"value": "{{testResultId}}"
								},
								{
									"description": "",
									"key": "data[1][0]",
									"type": "text",
									"value": "0"
								},
								{
									"description": "",
									"key": "data[2][0]",
									"type": "text",
									"value": "1"
								},
								{
									"description": "",
									"key": "data[3][0]",
									"type": "text",
									"value": "0"
								},
								{
									"description": "",
									"key": "data[3][1]",
									"type": "text",
									"value": "1"
								},
								{
									"description": "",
									"key": "data[4][0]",
									"type": "text",
									"value": "0"
								},
								{
									"description": "",
									"key": "data[4][1]",
									"type": "text",
									"value": "1"
								},
								{
									"description": "",
									"key": "data[4][2]",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Testpaper/finishTestpaper",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Testpaper",
								"finishTestpaper"
							]
						},
						"description": "做试卷\n"
					},
					"response": []
				},
				{
					"name": "getTestpaperResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var paperResultBody= JSON.stringify(jsonData.paperResult);  //json转换为string",
									"var accuracyBody = JSON.stringify(jsonData.accuracy);",
									"var itemsBody = JSON.stringify(jsonData.items);",
									"tests[\"gettestPaperinfo_paperResult success !\"] = (jsonData.paperResult.id === environment.testResultId)&paperResultBody.has(\"paperName\")&paperResultBody.has(\"score\")&paperResultBody.has(\"teacherSay\");",
									"tests[\"gettestPaperinfo_accuracy success !\"] = accuracyBody.has(\"score\")&accuracyBody.has(\"totalScore\")&accuracyBody.has(\"all\")&accuracyBody.has(\"right\");",
									"tests[\"gettestPaperinfo_items success !\"] =itemsBody.has(\"id\")&itemsBody.has(\"score\")&itemsBody.has(\"answer\")&itemsBody.has(\"analysis\")&itemsBody.has(\"teacherSay\")&itemsBody.has(\"testResult\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetType",
									"type": "text",
									"value": "lesson"
								},
								{
									"key": "testId",
									"type": "text",
									"value": "38"
								},
								{
									"key": "targetId",
									"type": "text",
									"value": "330"
								},
								{
									"key": "id",
									"type": "text",
									"value": "0"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/Testpaper/getTestpaperResult?id={{testResultId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"Testpaper",
								"getTestpaperResult"
							],
							"query": [
								{
									"equals": true,
									"key": "id",
									"value": "{{testResultId}}"
								}
							]
						},
						"description": "获取考试结果\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "11_homework&exercise",
			"description": "",
			"item": [
				{
					"name": "getHomework",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"var itemsBody = JSON.stringify(jsonData.items);",
									"tests[\"get homework info success !\"] = (jsonData.id === data.homeworkId)&responseBody.has(\"description\")&responseBody.has(\"lessonTitle\")&responseBody.has(\"courseTitle\")&itemsBody.has(\"type\")&itemsBody.has(\"stem\")&itemsBody.has(\"answer\")&itemsBody.has(\"analysis\")&itemsBody.has(\"metas\")&itemsBody.has(\"result\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/homework/{{homeworkId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"homework",
								"{{homeworkId}}"
							]
						},
						"description": "获取 作业 信息"
					},
					"response": []
				},
				{
					"name": "submitHomeworkResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.id){",
									"    postman.setEnvironmentVariable(\"homeworkResultId\", jsonData.id);",
									"    tests[\"submit exercise result success\"] = true;",
									"}else{",
									"    tests[\"submit exercise result success\"] = false;",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data[1][0]",
									"type": "text",
									"value": "0"
								},
								{
									"key": " data[2][0]",
									"type": "text",
									"value": "1"
								},
								{
									"description": "",
									"key": "data[3][0]",
									"type": "text",
									"value": "2"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/homework_results/{{homeworkId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"homework_results",
								"{{homeworkId}}"
							]
						},
						"description": "提交作业"
					},
					"response": [
						{
							"id": "dac0cd3e-7c1b-43ba-a804-6239fad71608",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 10 Feb 2017 08:11:38 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "529",
							"body": "\nNotice: Undefined offset: 7 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n\nNotice: Undefined offset: 8 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n\nNotice: Undefined offset: 9 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n{\"items\":{\"7\":{\"id\":\"131\",\"exerciseId\":\"2\",\"seq\":\"1\",\"questionId\":\"7\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"7\",\"type\":\"single_choice\",\"stem\":\"\\u003Cp\\u003E\\u6211\\u5bb6\\u7684\\u5927\\u95e8\\u53e3\\u5e73\\u653e\\u7740\\u4e00\\u6247\\u5e9f\\u5f03\\u7684\\u77f3\\u78e8\\uff0c\\u590f\\u65e5\\u9ec4\\u660f\\uff0c\\u66fe\\u7956\\u6bcd\\u5e38\\u5e38\\u5750\\u5728\\u4e0a\\u9762\\u3002\\u6211\\u4ece\\u8fdc\\u8fdc\\u7684\\u8857\\u89d2\\u4e00\\u9732\\u9762\\uff0c\\u5979\\u5c31\\u53ef\\u7740\\u55d3\\u95e8\\u558a\\u6211\\u201c\\u6c49\\u5b50\\uff0c\\u6c49\\u5b50\\uff0c\\u5feb\\u8fc7\\u6765!\\u201d\\u6211\\u4eec\\u5bb6\\u4e61\\u5973\\u4eba\\u628a\\u4e08\\u592b\\u624d\\u53eb\\u201c\\u6c49\\u5b50\\u201d\\uff0c\\u66fe\\u7956\\u6bcd\\u201c\\u6c49\\u5b50\\u6c49\\u5b50\\u201d\\u5730\\u53eb\\u6211\\uff0c\\u5f15\\u5f97\\u8fc7\\u8def\\u7684\\u4eba\\u72c2\\u7b11\\u4e0d\\u6b62\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[\"3\"],\"analysis\":\"\\u003Cp\\u003E\\u5c3a\\u5bf8\\u003C\\/p\\u003E\\r\\n\",\"metas\":{\"choices\":[\"\\u003Cp\\u003E\\u66fe\\u7956\\u6bcd\\u0026ldquo;\\u6c49\\u5b50\\u6c49\\u5b50\\u0026rdquo;\\u5730\\u53eb\\u6211\\uff0c\\u5f15\\u5f97\\u8fc7\\u8def\\u7684\\u4eba\\u72c2\\u7b11\\u4e0d\\u6b62\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u6211\\u5bb6\\u7684\\u5927\\u95e8\\u53e3\\u5e73\\u653e\\u7740\\u4e00\\u6247\\u5e9f\\u5f03\\u7684\\u77f3\\u78e8\\uff0c\\u590f\\u65e5\\u9ec4\\u660f\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u66fe\\u7956\\u6bcd\\u5e38\\u5e38\\u5750\\u5728\\u4e0a\\u9762\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u8fd9\\u4e2a\\u7ec6\\u8282\\u6211\\u4e00\\u76f4\\u6ca1\\u6709\\u5fd8\\u8bb0\\u3002\\u6211\\u8dd1\\u5230\\u5979\\u8eab\\u8fb9\\uff0c\\u5979\\u7275\\u7740\\u6211\\u7684\\u624b\\u8d70\\u8fdb\\u5927\\u95e8\\u3002\\u4e00\\u8fdb\\u5927\\u95e8\\uff0c\\u6709\\u4e00\\u95ee\\u5806\\u653e\\u9ea6\\u79f8\\u7684\\u6ca1\\u95e8\\u6ca1\\u7a97\\u7684\\u623f\\u5b50\\u3002\\u9ea6\\u79f8\\u7ecf\\u8fc7\\u788c\\u78a1\\u538b\\u8fc7\\u4ee5\\u540e\\u5f88\\u67d4\\u8f6f\\uff0c\\u6211\\u4eec\\u53eb\\u0026ldquo;\\u9ea6\\u6ed1\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\"]},\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984038\",\"createdTime\":\"1484984038\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null},\"8\":{\"id\":\"132\",\"exerciseId\":\"2\",\"seq\":\"2\",\"questionId\":\"8\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"8\",\"type\":\"choice\",\"stem\":\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u5176\\u59bb\\u6768\\u6c0f\\u65e5\\uff1a\\u201c\\u541b\\uff0c\\u53bf\\u4ee4\\u4e5f\\u3002\\u5bc7\\u81f3\\u5f53\\u5b88\\uff1b\\u003Cu\\u003E\\u529b\\u4e0d\\u8db3\\uff0c\\u6b7b\\u7109\\uff0c\\u804c\\u4e5f\\u003C\\/u\\u003E\\u3002\\u541b\\u5982\\u9003\\uff0c\\u5219\\u4eba\\u8c01\\u80af\\u56fa\\u77e3!\\u201d\\u4f83\\u65e5\\uff1a\\u201c\\u5175\\u4e0e\\u8d22\\u7686\\u65e0\\uff0c\\u5c06\\u82e5\\u4f55\\u201d\\u66f0\\uff1a\\u201c\\u5982\\u4e0d\\u5b88\\uff0c\\u53bf\\u4e3a\\u8d3c\\u6240\\u5f97\\u77e3\\uff0c\\u4ed3\\u5eea\\u7686\\u5176\\u79ef\\u4e5f\\uff0c\\u5e9c\\u5e93\\u7686\\u5176\\u8d22\\u4e5f\\uff0c\\u767e\\u59d3\\u7686\\u5176\\u6218\\u58eb\\u4e5f\\uff0c\\u56fd\\u5bb6\\u4f55\\u6709?\\u593a\\u8d3c\\u4e4b\\u8d22\\u800c\\u98df\\u5176\\u98df\\uff0c\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u201d\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[\"1\",\"2\"],\"analysis\":\"\",\"metas\":{\"choices\":[\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u66f0\\uff1a\\u0026ldquo;\\u5982\\u4e0d\\u5b88\\uff0c\\u53bf\\u4e3a\\u8d3c\\u6240\\u5f97\\u77e3\\uff0c\\u4ed3\\u5eea\\u7686\\u5176\\u79ef\\u4e5f\\uff0c\\u5e9c\\u5e93\\u7686\\u5176\\u8d22\\u4e5f\\uff0c\\u767e\\u59d3\\u7686\\u5176\\u6218\\u58eb\\u4e5f\\uff0c\\u56fd\\u5bb6\\u4f55\\u6709?\\u593a\\u8d3c\\u4e4b\\u8d22\\u800c\\u98df\\u5176\\u98df\\uff0c\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\"]},\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984106\",\"createdTime\":\"1484984106\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null},\"9\":{\"id\":\"133\",\"exerciseId\":\"2\",\"seq\":\"3\",\"questionId\":\"9\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"9\",\"type\":\"fill\",\"stem\":\"\\u003Cp\\u003E\\u4eca\\u5e74\\u662f[[2017|\\u9e21]]\\u5e74\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[[\"2017\",\"\\u9e21\"]],\"analysis\":\"\",\"metas\":[],\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984146\",\"createdTime\":\"1484984146\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null}},\"questionIds\":[\"7\",\"8\",\"9\"],\"total\":3}"
						},
						{
							"id": "39aef719-a950-4538-9d0d-b6aa2f07cc6d",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/api/exercise_results/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"exercise_results",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 10 Feb 2017 08:11:38 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "529",
							"body": "\nNotice: Undefined offset: 7 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n\nNotice: Undefined offset: 8 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n\nNotice: Undefined offset: 9 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n{\"items\":{\"7\":{\"id\":\"131\",\"exerciseId\":\"2\",\"seq\":\"1\",\"questionId\":\"7\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"7\",\"type\":\"single_choice\",\"stem\":\"\\u003Cp\\u003E\\u6211\\u5bb6\\u7684\\u5927\\u95e8\\u53e3\\u5e73\\u653e\\u7740\\u4e00\\u6247\\u5e9f\\u5f03\\u7684\\u77f3\\u78e8\\uff0c\\u590f\\u65e5\\u9ec4\\u660f\\uff0c\\u66fe\\u7956\\u6bcd\\u5e38\\u5e38\\u5750\\u5728\\u4e0a\\u9762\\u3002\\u6211\\u4ece\\u8fdc\\u8fdc\\u7684\\u8857\\u89d2\\u4e00\\u9732\\u9762\\uff0c\\u5979\\u5c31\\u53ef\\u7740\\u55d3\\u95e8\\u558a\\u6211\\u201c\\u6c49\\u5b50\\uff0c\\u6c49\\u5b50\\uff0c\\u5feb\\u8fc7\\u6765!\\u201d\\u6211\\u4eec\\u5bb6\\u4e61\\u5973\\u4eba\\u628a\\u4e08\\u592b\\u624d\\u53eb\\u201c\\u6c49\\u5b50\\u201d\\uff0c\\u66fe\\u7956\\u6bcd\\u201c\\u6c49\\u5b50\\u6c49\\u5b50\\u201d\\u5730\\u53eb\\u6211\\uff0c\\u5f15\\u5f97\\u8fc7\\u8def\\u7684\\u4eba\\u72c2\\u7b11\\u4e0d\\u6b62\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[\"3\"],\"analysis\":\"\\u003Cp\\u003E\\u5c3a\\u5bf8\\u003C\\/p\\u003E\\r\\n\",\"metas\":{\"choices\":[\"\\u003Cp\\u003E\\u66fe\\u7956\\u6bcd\\u0026ldquo;\\u6c49\\u5b50\\u6c49\\u5b50\\u0026rdquo;\\u5730\\u53eb\\u6211\\uff0c\\u5f15\\u5f97\\u8fc7\\u8def\\u7684\\u4eba\\u72c2\\u7b11\\u4e0d\\u6b62\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u6211\\u5bb6\\u7684\\u5927\\u95e8\\u53e3\\u5e73\\u653e\\u7740\\u4e00\\u6247\\u5e9f\\u5f03\\u7684\\u77f3\\u78e8\\uff0c\\u590f\\u65e5\\u9ec4\\u660f\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u66fe\\u7956\\u6bcd\\u5e38\\u5e38\\u5750\\u5728\\u4e0a\\u9762\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u8fd9\\u4e2a\\u7ec6\\u8282\\u6211\\u4e00\\u76f4\\u6ca1\\u6709\\u5fd8\\u8bb0\\u3002\\u6211\\u8dd1\\u5230\\u5979\\u8eab\\u8fb9\\uff0c\\u5979\\u7275\\u7740\\u6211\\u7684\\u624b\\u8d70\\u8fdb\\u5927\\u95e8\\u3002\\u4e00\\u8fdb\\u5927\\u95e8\\uff0c\\u6709\\u4e00\\u95ee\\u5806\\u653e\\u9ea6\\u79f8\\u7684\\u6ca1\\u95e8\\u6ca1\\u7a97\\u7684\\u623f\\u5b50\\u3002\\u9ea6\\u79f8\\u7ecf\\u8fc7\\u788c\\u78a1\\u538b\\u8fc7\\u4ee5\\u540e\\u5f88\\u67d4\\u8f6f\\uff0c\\u6211\\u4eec\\u53eb\\u0026ldquo;\\u9ea6\\u6ed1\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\"]},\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984038\",\"createdTime\":\"1484984038\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null},\"8\":{\"id\":\"132\",\"exerciseId\":\"2\",\"seq\":\"2\",\"questionId\":\"8\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"8\",\"type\":\"choice\",\"stem\":\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u5176\\u59bb\\u6768\\u6c0f\\u65e5\\uff1a\\u201c\\u541b\\uff0c\\u53bf\\u4ee4\\u4e5f\\u3002\\u5bc7\\u81f3\\u5f53\\u5b88\\uff1b\\u003Cu\\u003E\\u529b\\u4e0d\\u8db3\\uff0c\\u6b7b\\u7109\\uff0c\\u804c\\u4e5f\\u003C\\/u\\u003E\\u3002\\u541b\\u5982\\u9003\\uff0c\\u5219\\u4eba\\u8c01\\u80af\\u56fa\\u77e3!\\u201d\\u4f83\\u65e5\\uff1a\\u201c\\u5175\\u4e0e\\u8d22\\u7686\\u65e0\\uff0c\\u5c06\\u82e5\\u4f55\\u201d\\u66f0\\uff1a\\u201c\\u5982\\u4e0d\\u5b88\\uff0c\\u53bf\\u4e3a\\u8d3c\\u6240\\u5f97\\u77e3\\uff0c\\u4ed3\\u5eea\\u7686\\u5176\\u79ef\\u4e5f\\uff0c\\u5e9c\\u5e93\\u7686\\u5176\\u8d22\\u4e5f\\uff0c\\u767e\\u59d3\\u7686\\u5176\\u6218\\u58eb\\u4e5f\\uff0c\\u56fd\\u5bb6\\u4f55\\u6709?\\u593a\\u8d3c\\u4e4b\\u8d22\\u800c\\u98df\\u5176\\u98df\\uff0c\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u201d\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[\"1\",\"2\"],\"analysis\":\"\",\"metas\":{\"choices\":[\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u66f0\\uff1a\\u0026ldquo;\\u5982\\u4e0d\\u5b88\\uff0c\\u53bf\\u4e3a\\u8d3c\\u6240\\u5f97\\u77e3\\uff0c\\u4ed3\\u5eea\\u7686\\u5176\\u79ef\\u4e5f\\uff0c\\u5e9c\\u5e93\\u7686\\u5176\\u8d22\\u4e5f\\uff0c\\u767e\\u59d3\\u7686\\u5176\\u6218\\u58eb\\u4e5f\\uff0c\\u56fd\\u5bb6\\u4f55\\u6709?\\u593a\\u8d3c\\u4e4b\\u8d22\\u800c\\u98df\\u5176\\u98df\\uff0c\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\"]},\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984106\",\"createdTime\":\"1484984106\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null},\"9\":{\"id\":\"133\",\"exerciseId\":\"2\",\"seq\":\"3\",\"questionId\":\"9\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"9\",\"type\":\"fill\",\"stem\":\"\\u003Cp\\u003E\\u4eca\\u5e74\\u662f[[2017|\\u9e21]]\\u5e74\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[[\"2017\",\"\\u9e21\"]],\"analysis\":\"\",\"metas\":[],\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984146\",\"createdTime\":\"1484984146\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null}},\"questionIds\":[\"7\",\"8\",\"9\"],\"total\":3}"
						}
					]
				},
				{
					"name": "getHomeworkResultSummary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"var itemsBody = JSON.stringify(jsonData.items);",
									"tests[\"get homework info success !\"] = (jsonData.lessonId === data.homeworkTaskId)&(jsonData.testId === data.homeworkId)&((jsonData.passedStatus === \"excellent'\")||(jsonData.passedStatus === \"good\")||(jsonData.passedStatus === \"passed\")||(jsonData.passedStatus === \"unpassed\"))&itemsBody.has(\"seq\")&itemsBody.has(\"questionId\")&itemsBody.has(\"questionType\")&itemsBody.has(\"status\")&itemsBody.has(\"teacherSay\")&itemsBody.has(\"type\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/homework_results/{{homeworkTaskId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"homework_results",
								"{{homeworkTaskId}}"
							]
						},
						"description": "获取当前课时下最新作业结果摘要 \n{{url}}/api/homework_results/{{lessonId}}"
					},
					"response": [
						{
							"id": "8a3b57de-99e5-48c0-aa4f-c8fb7161deac",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/api/exercise_results/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"exercise_results",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 10 Feb 2017 08:11:38 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "529",
							"body": "\nNotice: Undefined offset: 7 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n\nNotice: Undefined offset: 8 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n\nNotice: Undefined offset: 9 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n{\"items\":{\"7\":{\"id\":\"131\",\"exerciseId\":\"2\",\"seq\":\"1\",\"questionId\":\"7\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"7\",\"type\":\"single_choice\",\"stem\":\"\\u003Cp\\u003E\\u6211\\u5bb6\\u7684\\u5927\\u95e8\\u53e3\\u5e73\\u653e\\u7740\\u4e00\\u6247\\u5e9f\\u5f03\\u7684\\u77f3\\u78e8\\uff0c\\u590f\\u65e5\\u9ec4\\u660f\\uff0c\\u66fe\\u7956\\u6bcd\\u5e38\\u5e38\\u5750\\u5728\\u4e0a\\u9762\\u3002\\u6211\\u4ece\\u8fdc\\u8fdc\\u7684\\u8857\\u89d2\\u4e00\\u9732\\u9762\\uff0c\\u5979\\u5c31\\u53ef\\u7740\\u55d3\\u95e8\\u558a\\u6211\\u201c\\u6c49\\u5b50\\uff0c\\u6c49\\u5b50\\uff0c\\u5feb\\u8fc7\\u6765!\\u201d\\u6211\\u4eec\\u5bb6\\u4e61\\u5973\\u4eba\\u628a\\u4e08\\u592b\\u624d\\u53eb\\u201c\\u6c49\\u5b50\\u201d\\uff0c\\u66fe\\u7956\\u6bcd\\u201c\\u6c49\\u5b50\\u6c49\\u5b50\\u201d\\u5730\\u53eb\\u6211\\uff0c\\u5f15\\u5f97\\u8fc7\\u8def\\u7684\\u4eba\\u72c2\\u7b11\\u4e0d\\u6b62\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[\"3\"],\"analysis\":\"\\u003Cp\\u003E\\u5c3a\\u5bf8\\u003C\\/p\\u003E\\r\\n\",\"metas\":{\"choices\":[\"\\u003Cp\\u003E\\u66fe\\u7956\\u6bcd\\u0026ldquo;\\u6c49\\u5b50\\u6c49\\u5b50\\u0026rdquo;\\u5730\\u53eb\\u6211\\uff0c\\u5f15\\u5f97\\u8fc7\\u8def\\u7684\\u4eba\\u72c2\\u7b11\\u4e0d\\u6b62\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u6211\\u5bb6\\u7684\\u5927\\u95e8\\u53e3\\u5e73\\u653e\\u7740\\u4e00\\u6247\\u5e9f\\u5f03\\u7684\\u77f3\\u78e8\\uff0c\\u590f\\u65e5\\u9ec4\\u660f\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u66fe\\u7956\\u6bcd\\u5e38\\u5e38\\u5750\\u5728\\u4e0a\\u9762\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u8fd9\\u4e2a\\u7ec6\\u8282\\u6211\\u4e00\\u76f4\\u6ca1\\u6709\\u5fd8\\u8bb0\\u3002\\u6211\\u8dd1\\u5230\\u5979\\u8eab\\u8fb9\\uff0c\\u5979\\u7275\\u7740\\u6211\\u7684\\u624b\\u8d70\\u8fdb\\u5927\\u95e8\\u3002\\u4e00\\u8fdb\\u5927\\u95e8\\uff0c\\u6709\\u4e00\\u95ee\\u5806\\u653e\\u9ea6\\u79f8\\u7684\\u6ca1\\u95e8\\u6ca1\\u7a97\\u7684\\u623f\\u5b50\\u3002\\u9ea6\\u79f8\\u7ecf\\u8fc7\\u788c\\u78a1\\u538b\\u8fc7\\u4ee5\\u540e\\u5f88\\u67d4\\u8f6f\\uff0c\\u6211\\u4eec\\u53eb\\u0026ldquo;\\u9ea6\\u6ed1\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\"]},\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984038\",\"createdTime\":\"1484984038\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null},\"8\":{\"id\":\"132\",\"exerciseId\":\"2\",\"seq\":\"2\",\"questionId\":\"8\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"8\",\"type\":\"choice\",\"stem\":\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u5176\\u59bb\\u6768\\u6c0f\\u65e5\\uff1a\\u201c\\u541b\\uff0c\\u53bf\\u4ee4\\u4e5f\\u3002\\u5bc7\\u81f3\\u5f53\\u5b88\\uff1b\\u003Cu\\u003E\\u529b\\u4e0d\\u8db3\\uff0c\\u6b7b\\u7109\\uff0c\\u804c\\u4e5f\\u003C\\/u\\u003E\\u3002\\u541b\\u5982\\u9003\\uff0c\\u5219\\u4eba\\u8c01\\u80af\\u56fa\\u77e3!\\u201d\\u4f83\\u65e5\\uff1a\\u201c\\u5175\\u4e0e\\u8d22\\u7686\\u65e0\\uff0c\\u5c06\\u82e5\\u4f55\\u201d\\u66f0\\uff1a\\u201c\\u5982\\u4e0d\\u5b88\\uff0c\\u53bf\\u4e3a\\u8d3c\\u6240\\u5f97\\u77e3\\uff0c\\u4ed3\\u5eea\\u7686\\u5176\\u79ef\\u4e5f\\uff0c\\u5e9c\\u5e93\\u7686\\u5176\\u8d22\\u4e5f\\uff0c\\u767e\\u59d3\\u7686\\u5176\\u6218\\u58eb\\u4e5f\\uff0c\\u56fd\\u5bb6\\u4f55\\u6709?\\u593a\\u8d3c\\u4e4b\\u8d22\\u800c\\u98df\\u5176\\u98df\\uff0c\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u201d\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[\"1\",\"2\"],\"analysis\":\"\",\"metas\":{\"choices\":[\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u66f0\\uff1a\\u0026ldquo;\\u5982\\u4e0d\\u5b88\\uff0c\\u53bf\\u4e3a\\u8d3c\\u6240\\u5f97\\u77e3\\uff0c\\u4ed3\\u5eea\\u7686\\u5176\\u79ef\\u4e5f\\uff0c\\u5e9c\\u5e93\\u7686\\u5176\\u8d22\\u4e5f\\uff0c\\u767e\\u59d3\\u7686\\u5176\\u6218\\u58eb\\u4e5f\\uff0c\\u56fd\\u5bb6\\u4f55\\u6709?\\u593a\\u8d3c\\u4e4b\\u8d22\\u800c\\u98df\\u5176\\u98df\\uff0c\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\"]},\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984106\",\"createdTime\":\"1484984106\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null},\"9\":{\"id\":\"133\",\"exerciseId\":\"2\",\"seq\":\"3\",\"questionId\":\"9\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"9\",\"type\":\"fill\",\"stem\":\"\\u003Cp\\u003E\\u4eca\\u5e74\\u662f[[2017|\\u9e21]]\\u5e74\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[[\"2017\",\"\\u9e21\"]],\"analysis\":\"\",\"metas\":[],\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984146\",\"createdTime\":\"1484984146\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null}},\"questionIds\":[\"7\",\"8\",\"9\"],\"total\":3}"
						},
						{
							"id": "94a33119-e78d-4b5c-ac88-a262248a4181",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 10 Feb 2017 08:11:38 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "529",
							"body": "\nNotice: Undefined offset: 7 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n\nNotice: Undefined offset: 8 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n\nNotice: Undefined offset: 9 in /var/www/test.mob.edusoho.cn/plugins/Homework/Service/Homework/Impl/ExerciseServiceImpl.php on line 50\n{\"items\":{\"7\":{\"id\":\"131\",\"exerciseId\":\"2\",\"seq\":\"1\",\"questionId\":\"7\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"7\",\"type\":\"single_choice\",\"stem\":\"\\u003Cp\\u003E\\u6211\\u5bb6\\u7684\\u5927\\u95e8\\u53e3\\u5e73\\u653e\\u7740\\u4e00\\u6247\\u5e9f\\u5f03\\u7684\\u77f3\\u78e8\\uff0c\\u590f\\u65e5\\u9ec4\\u660f\\uff0c\\u66fe\\u7956\\u6bcd\\u5e38\\u5e38\\u5750\\u5728\\u4e0a\\u9762\\u3002\\u6211\\u4ece\\u8fdc\\u8fdc\\u7684\\u8857\\u89d2\\u4e00\\u9732\\u9762\\uff0c\\u5979\\u5c31\\u53ef\\u7740\\u55d3\\u95e8\\u558a\\u6211\\u201c\\u6c49\\u5b50\\uff0c\\u6c49\\u5b50\\uff0c\\u5feb\\u8fc7\\u6765!\\u201d\\u6211\\u4eec\\u5bb6\\u4e61\\u5973\\u4eba\\u628a\\u4e08\\u592b\\u624d\\u53eb\\u201c\\u6c49\\u5b50\\u201d\\uff0c\\u66fe\\u7956\\u6bcd\\u201c\\u6c49\\u5b50\\u6c49\\u5b50\\u201d\\u5730\\u53eb\\u6211\\uff0c\\u5f15\\u5f97\\u8fc7\\u8def\\u7684\\u4eba\\u72c2\\u7b11\\u4e0d\\u6b62\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[\"3\"],\"analysis\":\"\\u003Cp\\u003E\\u5c3a\\u5bf8\\u003C\\/p\\u003E\\r\\n\",\"metas\":{\"choices\":[\"\\u003Cp\\u003E\\u66fe\\u7956\\u6bcd\\u0026ldquo;\\u6c49\\u5b50\\u6c49\\u5b50\\u0026rdquo;\\u5730\\u53eb\\u6211\\uff0c\\u5f15\\u5f97\\u8fc7\\u8def\\u7684\\u4eba\\u72c2\\u7b11\\u4e0d\\u6b62\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u6211\\u5bb6\\u7684\\u5927\\u95e8\\u53e3\\u5e73\\u653e\\u7740\\u4e00\\u6247\\u5e9f\\u5f03\\u7684\\u77f3\\u78e8\\uff0c\\u590f\\u65e5\\u9ec4\\u660f\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u66fe\\u7956\\u6bcd\\u5e38\\u5e38\\u5750\\u5728\\u4e0a\\u9762\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u8fd9\\u4e2a\\u7ec6\\u8282\\u6211\\u4e00\\u76f4\\u6ca1\\u6709\\u5fd8\\u8bb0\\u3002\\u6211\\u8dd1\\u5230\\u5979\\u8eab\\u8fb9\\uff0c\\u5979\\u7275\\u7740\\u6211\\u7684\\u624b\\u8d70\\u8fdb\\u5927\\u95e8\\u3002\\u4e00\\u8fdb\\u5927\\u95e8\\uff0c\\u6709\\u4e00\\u95ee\\u5806\\u653e\\u9ea6\\u79f8\\u7684\\u6ca1\\u95e8\\u6ca1\\u7a97\\u7684\\u623f\\u5b50\\u3002\\u9ea6\\u79f8\\u7ecf\\u8fc7\\u788c\\u78a1\\u538b\\u8fc7\\u4ee5\\u540e\\u5f88\\u67d4\\u8f6f\\uff0c\\u6211\\u4eec\\u53eb\\u0026ldquo;\\u9ea6\\u6ed1\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\"]},\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984038\",\"createdTime\":\"1484984038\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null},\"8\":{\"id\":\"132\",\"exerciseId\":\"2\",\"seq\":\"2\",\"questionId\":\"8\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"8\",\"type\":\"choice\",\"stem\":\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u5176\\u59bb\\u6768\\u6c0f\\u65e5\\uff1a\\u201c\\u541b\\uff0c\\u53bf\\u4ee4\\u4e5f\\u3002\\u5bc7\\u81f3\\u5f53\\u5b88\\uff1b\\u003Cu\\u003E\\u529b\\u4e0d\\u8db3\\uff0c\\u6b7b\\u7109\\uff0c\\u804c\\u4e5f\\u003C\\/u\\u003E\\u3002\\u541b\\u5982\\u9003\\uff0c\\u5219\\u4eba\\u8c01\\u80af\\u56fa\\u77e3!\\u201d\\u4f83\\u65e5\\uff1a\\u201c\\u5175\\u4e0e\\u8d22\\u7686\\u65e0\\uff0c\\u5c06\\u82e5\\u4f55\\u201d\\u66f0\\uff1a\\u201c\\u5982\\u4e0d\\u5b88\\uff0c\\u53bf\\u4e3a\\u8d3c\\u6240\\u5f97\\u77e3\\uff0c\\u4ed3\\u5eea\\u7686\\u5176\\u79ef\\u4e5f\\uff0c\\u5e9c\\u5e93\\u7686\\u5176\\u8d22\\u4e5f\\uff0c\\u767e\\u59d3\\u7686\\u5176\\u6218\\u58eb\\u4e5f\\uff0c\\u56fd\\u5bb6\\u4f55\\u6709?\\u593a\\u8d3c\\u4e4b\\u8d22\\u800c\\u98df\\u5176\\u98df\\uff0c\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u201d\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[\"1\",\"2\"],\"analysis\":\"\",\"metas\":{\"choices\":[\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u5efa\\u4e2d\\u56db\\u5e74\\uff0c\\u9879\\u57ce\\u4e3a\\u53db\\u519b\\u56f0\\u3002\\u53bf\\u4ee4\\u674e\\u4f83\\uff0c\\u4e0d\\u77e5\\u6240\\u4e3a\\u3002\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\",\"\\u003Cp\\u003E\\u66f0\\uff1a\\u0026ldquo;\\u5982\\u4e0d\\u5b88\\uff0c\\u53bf\\u4e3a\\u8d3c\\u6240\\u5f97\\u77e3\\uff0c\\u4ed3\\u5eea\\u7686\\u5176\\u79ef\\u4e5f\\uff0c\\u5e9c\\u5e93\\u7686\\u5176\\u8d22\\u4e5f\\uff0c\\u767e\\u59d3\\u7686\\u5176\\u6218\\u58eb\\u4e5f\\uff0c\\u56fd\\u5bb6\\u4f55\\u6709?\\u593a\\u8d3c\\u4e4b\\u8d22\\u800c\\u98df\\u5176\\u98df\\uff0c\\u91cd\\u8d4f\\u4ee5\\u4ee4\\u6b7b\\u58eb\\uff0c\\u5176\\u5fc5\\u6d4e!\\u0026rdquo;\\u003C\\/p\\u003E\\r\\n\"]},\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984106\",\"createdTime\":\"1484984106\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null},\"9\":{\"id\":\"133\",\"exerciseId\":\"2\",\"seq\":\"3\",\"questionId\":\"9\",\"score\":\"0.0\",\"missScore\":\"0.0\",\"parentId\":\"0\",\"question\":{\"id\":\"9\",\"type\":\"fill\",\"stem\":\"\\u003Cp\\u003E\\u4eca\\u5e74\\u662f[[2017|\\u9e21]]\\u5e74\\u003C\\/p\\u003E\\n\",\"score\":\"2.0\",\"answer\":[[\"2017\",\"\\u9e21\"]],\"analysis\":\"\",\"metas\":[],\"categoryId\":\"0\",\"difficulty\":\"normal\",\"target\":\"course-1\",\"parentId\":\"0\",\"subCount\":\"0\",\"finishedTimes\":\"0\",\"passedTimes\":\"0\",\"userId\":\"1\",\"updatedTime\":\"1484984146\",\"createdTime\":\"1484984146\",\"copyId\":\"0\",\"includeImg\":false},\"itemResult\":null}},\"questionIds\":[\"7\",\"8\",\"9\"],\"total\":3}"
						}
					]
				},
				{
					"name": "getHomeworkResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.items.length;i++){",
									"    var itemsBody = JSON.stringify(jsonData.items[i]);",
									"    tests[\"get homework result info success !\"] = itemsBody.has(\"type\")&itemsBody.has(\"stem\")&itemsBody.has(\"answer\")&itemsBody.has(\"analysis\")&itemsBody.has(\"metas\")&itemsBody.has(\"result\");",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/homework/{{homeworkResultId}}/result",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"homework",
								"{{homeworkResultId}}",
								"result"
							]
						},
						"description": "教师获取已批改的作业"
					},
					"response": []
				},
				{
					"name": "getExercise",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"var itemsBody = JSON.stringify(jsonData.items);",
									"tests[\"get exercise info success !\"] = (jsonData.id === data.exerciseId)&responseBody.has(\"description\")&responseBody.has(\"lessonTitle\")&responseBody.has(\"courseTitle\")&itemsBody.has(\"type\")&itemsBody.has(\"stem\")&itemsBody.has(\"metas\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/exercise/{{exerciseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"exercise",
								"{{exerciseId}}"
							]
						},
						"description": "获取练习信息"
					},
					"response": []
				},
				{
					"name": "submitExerciseResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"submit exercise result success\"] = responseBody.has(\"id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data[1][answer][0]",
									"type": "text",
									"value": "0"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/exercise_results/{{exerciseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"exercise_results",
								"{{exerciseId}}"
							]
						},
						"description": "提交作业"
					},
					"response": []
				},
				{
					"name": "getExerciseResult",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.items.length ===0 ){",
									"    tests[\"There is no exercise result !\"] = true ;",
									"}",
									"",
									"for(var i=0;i<jsonData.items.length;i++){",
									"    var itemsBody = JSON.stringify(jsonData.items[i]);",
									"    tests[\"get exercise result info success !\"] = (jsonData.id === data.exerciseId)&itemsBody.has(\"type\")&itemsBody.has(\"stem\")&itemsBody.has(\"answer\")&itemsBody.has(\"analysis\")&itemsBody.has(\"metas\")&itemsBody.has(\"result\");",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/exercise/{{exerciseId}}/result",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"exercise",
								"{{exerciseId}}",
								"result"
							]
						},
						"description": "获取练习的答案和结果"
					},
					"response": []
				}
			]
		},
		{
			"name": "12_user",
			"description": "用户信息",
			"item": [
				{
					"name": "getUserInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getUserInfo success\"] = (jsonData.id === data.userId)&(responseBody.has(\"nickname\")&responseBody.has(\"title\")&responseBody.has(\"mediumAvatar\")&responseBody.has(\"roles\")&responseBody.has(\"about\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/user/{{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{{userId}}"
							]
						},
						"description": "获取单个用户信息（正确id）"
					},
					"response": []
				},
				{
					"name": "getUserInfo_error_userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"getUserInfo_error_userId\"] = responseBody === \"[]\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/getUserInfo?userId=d",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"getUserInfo"
							],
							"query": [
								{
									"equals": true,
									"key": "userId",
									"value": "d"
								}
							]
						},
						"description": "获取用户信息（错误id）"
					},
					"response": []
				},
				{
					"name": "getUsers_search_nickName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.nickname.length >0){",
									"    for(var i=0;i<jsonData.nickname.length;i++){",
									"        var dataBody = JSON.stringify(jsonData.nickname[i]);",
									"        tests[\"search user success !\"] = (jsonData.nickname[i].nickname.indexOf(data.userName)>-1)&dataBody.has(\"id\")&dataBody.has(\"title\")&dataBody.has(\"mediumAvatar\")&dataBody.has(\"roles\")&dataBody.has(\"about\");",
									"    }",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users?q={{userName}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"equals": true,
									"key": "q",
									"value": "{{userName}}"
								}
							]
						},
						"description": "用户搜索，支持QQ和手机号"
					},
					"response": []
				},
				{
					"name": "getUsers_search_mobile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.mobile.length >0){",
									"    for(var i=0;i<jsonData.mobile.length;i++){",
									"        var dataBody = JSON.stringify(jsonData.mobile[i]);",
									"        tests[\"search user success !\"] = dataBody.has(\"id\")&dataBody.has(\"title\")&dataBody.has(\"mediumAvatar\")&dataBody.has(\"roles\")&dataBody.has(\"about\");",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users?q={{searchPhoneNum}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"equals": true,
									"key": "q",
									"value": "{{searchPhoneNum}}"
								}
							]
						},
						"description": "用户搜索，支持QQ和手机号"
					},
					"response": []
				},
				{
					"name": "userFollow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"follow user success !\"] = (jsonData.fromId === data.userId)&(jsonData.toId === data.teacherId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "toId",
									"type": "text",
									"value": "{{teacherId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/follow",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"follow"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "userUnfollow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"unfollow user success !\"] = responseBody === \"1\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "toId",
									"type": "text",
									"value": "{{teacherId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/User/unfollow",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"unfollow"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "addFollowers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"follow user success ! \"] = jsonData.success === true;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"type": "text",
									"value": "{{teacherId}}"
								},
								{
									"description": "",
									"key": "method",
									"type": "text",
									"value": "follow"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users/{{teacherId}}/followers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{teacherId}}",
								"followers"
							]
						},
						"description": "通知提醒》添加好友"
					},
					"response": []
				},
				{
					"name": "deleteFollowers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"unfollow user success ! \"] = jsonData.success === true;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "userId",
									"type": "text",
									"value": "{{teacherId}}"
								},
								{
									"description": "",
									"key": "method",
									"type": "text",
									"value": "delete"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/users/{{teacherId}}/followers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{teacherId}}",
								"followers"
							]
						},
						"description": "通知提醒》添加好友"
					},
					"response": []
				},
				{
					"name": "getUserFriendship",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.length;i++){",
									"    tests[\"get my friendship with other users success !\"] = (jsonData[i] === \"follower\")||(jsonData[i] === \"friend\")||(jsonData[i] === \"none\")||(jsonData[i] === \"following\");",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/users/{{userId}}/friendship?toIds={{teacherId}},{{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"friendship"
							],
							"query": [
								{
									"equals": true,
									"key": "toIds",
									"value": "{{teacherId}},{{userId}}"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "searchUserIsFollowed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"searchUserIsFollowed success !\"] = (responseBody === \"true\")||(responseBody === \"[]\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/mapi_v2/User/searchUserIsFollowed?toId={{teacherId}}&userId={{userId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"User",
								"searchUserIsFollowed"
							],
							"query": [
								{
									"equals": true,
									"key": "toId",
									"value": "{{teacherId}}"
								},
								{
									"equals": true,
									"key": "userId",
									"value": "{{userId}}"
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "13_school",
			"description": "网校相关api",
			"item": [
				{
					"name": "getSchoolSite",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getScoolSite success,即 \"+environment.url] = jsonData.site.host === environment.url;",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/mapi_v2/School/getSchoolSite",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"getSchoolSite"
							]
						},
						"description": "获取网校地址"
					},
					"response": []
				},
				{
					"name": "getSchoolBanner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getScoolBanner is  not null\"] = jsonData.url !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/mapi_v2/School/getSchoolBanner",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"getSchoolBanner"
							]
						},
						"description": "获取网校轮播图"
					},
					"response": []
				},
				{
					"name": "getSchoolToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.token){",
									"",
									"    postman.setEnvironmentVariable(\"schoolToken\",jsonData.token);",
									"}",
									"    tests[\"get school token success !\"] = jsonData.token;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/api/mobileschools/token",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobileschools",
								"token"
							]
						},
						"description": "获取网校token"
					},
					"response": []
				},
				{
					"name": "getSchoolInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"getSchoolInfo success\"] = responseBody.indexOf(data.schoolInfo)>-1;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/mapi_v2/School/getSchoolInfo",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"getSchoolInfo"
							]
						},
						"description": "获取网校信息\napp 设置》关于》关于网校"
					},
					"response": []
				},
				{
					"name": "sendSuggestion_fix",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var random =\"功能有缺失\"+ Math.floor(Math.random() * 1000);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"sendSuggestion success\"] = responseBody === \"true\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "info",
									"type": "text",
									"value": "{{random}}"
								},
								{
									"key": "type",
									"type": "text",
									"value": "fix"
								},
								{
									"key": "contact",
									"type": "text",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/School/sendSuggestion",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"sendSuggestion"
							]
						},
						"description": "意见反馈-意见type:fix,，即功能有缺失\napp 设置》关于》意见反馈"
					},
					"response": []
				},
				{
					"name": "sendSuggestion_bug",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var random =\"客户端有BUG\"+ Math.floor(Math.random() * 1000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"tests[\"sendSuggestion success\"] = responseBody === \"true\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "info",
									"type": "text",
									"value": "{{random}}"
								},
								{
									"key": "type",
									"type": "text",
									"value": "bug"
								},
								{
									"key": "contact",
									"type": "text",
									"value": "zf"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/School/sendSuggestion",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"sendSuggestion"
							]
						},
						"description": "意见反馈>意见分类bug,即客户端有BUG\napp 设置》关于》意见反馈"
					},
					"response": []
				},
				{
					"name": "sendSuggestion_success_typeAndcontact_null",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" var random =\"未知BUG类型\"+ Math.floor(Math.random() * 1000);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"sendSuggestion success\"] = responseBody === \"true\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "info",
									"type": "text",
									"value": "{{random}}"
								},
								{
									"key": "type",
									"type": "text",
									"value": ""
								},
								{
									"key": "contact",
									"type": "text",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/School/sendSuggestion",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"sendSuggestion"
							]
						},
						"description": "意见反馈-type和contact为空\napp 设置》关于》意见反馈"
					},
					"response": []
				},
				{
					"name": "sendSuggestion_error_infoNull",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.error.name === \"error\")&(jsonData.error.message === \"反馈内容不能为空！\"))",
									"{",
									"    tests[\"sendSuggestion_error_info is null\"] = true;",
									"}else{",
									"    tests[\"sendSuggestion_error_info is null\"] = false;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "info",
									"type": "text",
									"value": ""
								},
								{
									"key": "type",
									"type": "text",
									"value": ""
								},
								{
									"key": "contact",
									"type": "text",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/School/sendSuggestion",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"sendSuggestion"
							]
						},
						"description": "意见反馈-info 为空\napp 设置》关于》意见反馈"
					},
					"response": []
				},
				{
					"name": "getClientVersion ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.show === true)&(jsonData.updateUrl !== null))",
									"{",
									"    tests[\"getClientVersion is \"+jsonData.androidVersion] = true;",
									"}else{",
									"    tests[\"getClientVersion success\"] = false;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "code",
									"type": "text",
									"value": "edusohov3"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/School/getClientVersion",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"getClientVersion"
							]
						},
						"description": "获取当前app版本"
					},
					"response": []
				},
				{
					"name": "getClientVersion_error_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									"",
									"tests[\"Status code is 500\"] = responseCode.code === 500;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "code",
									"type": "text",
									"value": "123"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/School/getClientVersion",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"getClientVersion"
							]
						},
						"description": "获取当前app版本--code错误"
					},
					"response": []
				},
				{
					"name": "getDownloadUrl ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"tests[\"getDownloadUrl_android\"] = responseBody.has(\"android\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "code",
									"type": "text",
									"value": "edusohov3"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/School/getDownloadUrl",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"getDownloadUrl"
							]
						},
						"description": "获取最新版本下载地址"
					},
					"response": []
				},
				{
					"name": "getDownloadUrl_error_code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[ \"code is error\"] = jsonData.error ===  \"meta file not exist.\";"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "code",
									"type": "text",
									"value": "123"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/School/getDownloadUrl",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"School",
								"getDownloadUrl"
							]
						},
						"description": "获取最新版本下载地址--code错误"
					},
					"response": []
				},
				{
					"name": "getH5Version_3x",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.updateMode === \"alert\")&(jsonData.code === \"main\"))",
									"{",
									"    tests[\"getH5Version is \"+jsonData.version+\" ; updateInfo:\"+jsonData.updateInfo] = true;",
									"}else{",
									"    tests[\"getH5Version success\"] = false;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "code",
									"type": "text",
									"value": "edusohov3"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/mobile/main/version?code=edusohov3",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"mobile",
								"main",
								"version"
							],
							"query": [
								{
									"equals": true,
									"key": "code",
									"value": "edusohov3"
								}
							]
						},
						"description": "获取当前app版本的H5版本信息"
					},
					"response": []
				},
				{
					"name": "getH5Version_4x",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if((jsonData.updateMode === \"alert\")&(jsonData.code === \"main\"))",
									"{",
									"    tests[\"getH5Version is \"+jsonData.version+\" ; updateInfo:\"+jsonData.updateInfo] = true;",
									"}else{",
									"    tests[\"getH5Version success\"] = false;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "code",
									"type": "text",
									"value": "edusohov3"
								}
							]
						},
						"url": {
							"raw": "{{url}}/mapi_v2/mobile/main/version?code=edusohov4",
							"host": [
								"{{url}}"
							],
							"path": [
								"mapi_v2",
								"mobile",
								"main",
								"version"
							],
							"query": [
								{
									"equals": true,
									"key": "code",
									"value": "edusohov4"
								}
							]
						},
						"description": "获取当前app版本的H5版本信息"
					},
					"response": []
				},
				{
					"name": "searchSchool",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"// tests[\"searchSchool success\"] = responseBody.has(\"demo\");",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"var keyWord = data.schoolKeyword;",
									"var count = 0;",
									"for(var i = 0;i<jsonData.resources.length;i++){",
									"    var siteName = jsonData.resources[i].siteName;",
									"    var siteUrl = jsonData.resources[i].siteUrl;",
									"    var f1=siteName.toLowerCase().indexOf(keyWord.toLowerCase())!==-1 ;",
									"    var f2 = siteUrl.toLowerCase().indexOf(keyWord.toLowerCase())!==-1;",
									"    if(f1||f2){",
									"        count = count + 1 ;",
									"    }else{",
									"        break;",
									"    }",
									"}",
									"if(jsonData.resources.length > 0){",
									"    tests[\"searchSchool success\"] = count === jsonData.resources.length;",
									"}else{",
									"    tests[\"searchSchool is null\"] = jsonData.resources.length === 0;",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "mobile",
									"type": "text",
									"value": "18268096715"
								},
								{
									"key": "type",
									"type": "text",
									"value": "sms_bind"
								},
								{
									"key": "img_code",
									"type": "text",
									"value": "rt85s",
									"disabled": true
								},
								{
									"key": "verified_token",
									"type": "text",
									"value": "gLrjDZ6mVF5doUH3rDp3dKfBqpdPnXKB",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://open.qiqiuyun.net/api/v1/schools?keyword={{schoolKeyword}}",
							"protocol": "https",
							"host": [
								"open",
								"qiqiuyun",
								"net"
							],
							"path": [
								"api",
								"v1",
								"schools"
							],
							"query": [
								{
									"equals": true,
									"key": "keyword",
									"value": "{{schoolKeyword}}"
								}
							]
						},
						"description": "网校搜索"
					},
					"response": []
				},
				{
					"name": "searchSchool_notExisted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"// tests[\"searchSchool success\"] = responseBody.has(\"demo\");",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var jsonData = JSON.parse(responseBody);",
									"var keyWord = \"error\";",
									"var count = 0;",
									"for(var i = 0;i<jsonData.resources.length;i++){",
									"    var siteName = jsonData.resources[i].siteName;",
									"    var siteUrl = jsonData.resources[i].siteUrl;",
									"    var f1=siteName.toLowerCase().indexOf(keyWord.toLowerCase())!==-1 ;",
									"    var f2 = siteUrl.toLowerCase().indexOf(keyWord.toLowerCase())!==-1;",
									"    if(f1||f2){",
									"        count = count + 1 ;",
									"    }else{",
									"        break;",
									"    }",
									"}",
									"if(jsonData.resources.length > 0){",
									"    tests[\"searchSchool success\"] = count === jsonData.resources.length;",
									"}else{",
									"    tests[\"searchSchool is null\"] = jsonData.resources.length === 0;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "sms_bind",
								"value": "aadh49tuq7kso0kowksgccog8ggk4oo"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "mobile",
									"type": "text",
									"value": "18268096715"
								},
								{
									"key": "type",
									"type": "text",
									"value": "sms_bind"
								},
								{
									"key": "img_code",
									"type": "text",
									"value": "rt85s",
									"disabled": true
								},
								{
									"key": "verified_token",
									"type": "text",
									"value": "gLrjDZ6mVF5doUH3rDp3dKfBqpdPnXKB",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "https://open.qiqiuyun.net/api/v1/schools?keyword=error",
							"protocol": "https",
							"host": [
								"open",
								"qiqiuyun",
								"net"
							],
							"path": [
								"api",
								"v1",
								"schools"
							],
							"query": [
								{
									"equals": true,
									"key": "keyword",
									"value": "error"
								}
							]
						},
						"description": "网校搜索,搜索结果为空"
					},
					"response": []
				},
				{
					"name": "getSystemInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"get system info success !\"] = (jsonData.mobileApiUrl.indexOf(environment.url) !== -1)&responseBody.has(\"version\")&responseBody.has(\"name\")&responseBody.has(\"mobileApiVersion\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/systeminfo?version=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"systeminfo"
							],
							"query": [
								{
									"equals": true,
									"key": "version",
									"value": "2"
								}
							]
						},
						"description": "获取网校 信息 "
					},
					"response": []
				},
				{
					"name": "getSchoolApps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"get school apps success !\"] = (jsonData[0].code === \"global\")&(jsonData[1].code === \"news\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/api/mobileschools/apps",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobileschools",
								"apps"
							]
						},
						"description": "获取网校服务号"
					},
					"response": []
				},
				{
					"name": "getSchoolAppInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"tests[\"get school app info success !\"] = (jsonData.id === \"2\")&(jsonData.code === \"news\")&(jsonData.name === \"资讯\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url}}/api/mobileschools/app/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"mobileschools",
								"app",
								"2"
							]
						},
						"description": "获取网校资讯信息"
					},
					"response": []
				}
			]
		},
		{
			"name": "14_IM",
			"description": "IM相关api",
			"item": [
				{
					"name": "imSync",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get conversationNumber success !\"] = jsonData.convNo !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/im/sync",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"im",
								"sync"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "imMembers_Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get convsionNumber success !\"] = jsonData.convNo !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetId",
									"type": "text",
									"value": "{{courseId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "course"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/im/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"im",
								"members"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "imPushSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"IM push setting success !\"] = (jsonData.clientId === data.userId)&(jsonData.mute === \"0\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "mute",
									"type": "text",
									"value": "0"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/im/me/push",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"im",
								"me",
								"push"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "imMembers_Classroom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get convsionNumber success !\"] = jsonData.convNo !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "targetId",
									"type": "text",
									"value": "{{classroomId}}"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/im/members",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"im",
								"members"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "imConversations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get IM private chat conversationNumber success !\"] = (jsonData.no !== null)&(jsonData.targetType === \"private\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "memberIds",
									"type": "text",
									"value": "{{userId}},{{teacherId}}"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/im/conversations",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"im",
								"conversations"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "imLogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Im login success !\"] = jsonData.servers;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "tag",
									"type": "text",
									"value": "mobile"
								},
								{
									"key": "deviceToken",
									"type": "text",
									"value": "862123036867890"
								},
								{
									"key": "deviceKernel",
									"type": "text",
									"value": "5.1.1"
								},
								{
									"key": "desiceName",
									"type": "text",
									"value": "Android+Redmi+Note+3"
								},
								{
									"key": "deviceVersion",
									"type": "text",
									"value": "22"
								},
								{
									"key": "ignoreServers",
									"type": "text",
									"value": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/im/me/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"im",
								"me",
								"login"
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "getMyChatRooms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"for(var i=0;i<jsonData.resources.length;i++){",
									"    var chatroomBody = JSON.stringify(jsonData.resources[i]);",
									"    tests[\"getMyChatRooms  success\"] = chatroomBody.has(\"id\")&chatroomBody.has(\"title\")&chatroomBody.has(\"picture\")&(jsonData.resources[i].type === \"classroom\")||(jsonData.resources[i].type === \"course\");",
									"",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/chatrooms",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"chatrooms"
							]
						},
						"description": "获取我的班级讨论组"
					},
					"response": [
						{
							"id": "973a9dce-fb84-4ec2-9a05-6d1b510e6d10",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "classRoomId",
											"type": "text",
											"value": "4sd"
										},
										{
											"key": "targetType",
											"type": "text",
											"value": "classroom"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/me/chatrooms",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"me",
										"chatrooms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Tue, 07 Feb 2017 07:44:42 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "607",
							"body": "{\"resources\":[{\"type\":\"classroom\",\"id\":\"1\",\"title\":\"\\u79fb\\u52a8\\u5c0f\\u7ec4\\u73ed\\uff0c\\u8352\\u5c9b\\u60ca\\u9b42\\u8bd5\\u770b\\u673a\\u9876\\u76d2\\uff0c\\u7b49\\u7ea7\\u8003\\u8bd5\\u6253\\u5f00\\u5361\\u673a\\u5237\\u5361\\u673a\\u673a\\u9876\\u76d2\",\"picture\":\"http:\\/\\/test.mob.edusoho.cn\\/files\\/course\\/2017\\/01-19\\/1341553900d2466092.JPG\"},{\"type\":\"course\",\"id\":\"1\",\"title\":\"2017\\u7b2c\\u4e00\\u8bfe\",\"picture\":\"\"},{\"type\":\"course\",\"id\":\"3\",\"title\":\"\\u76f4\\u64ad\\u8bfe01-12\",\"picture\":\"\"},{\"type\":\"course\",\"id\":\"4\",\"title\":\"\\u4e13\\u7528\\u6d4b\\u8bd5\\u8bfe\\u7a0b\\u6d4b\\u8bd5\\u8bfe\\u7a0b\",\"picture\":\"http:\\/\\/test.mob.edusoho.cn\\/files\\/course\\/2017\\/01-12\\/1044535e9fe1125132.jpg\"},{\"type\":\"course\",\"id\":\"7\",\"title\":\"\\u5f88\\u957f\\u5f88\\u957f\\u7684\\u666e\\u901a\\u8bfe\\u7a0b\\u540d\\u79f0\\uff0c\\u5c31\\u662f\\u8ba8\\u8bba\\u6700\\u597d\\u7684\\u5f00\\u53d1\\u8bed\\u8a00\\u662f\\u54ea\\u4e2a\\uff1fjava\\uff0cc,c++,OC\\uff0cswift,PHP\",\"picture\":\"http:\\/\\/test.mob.edusoho.cn\\/files\\/course\\/2017\\/01-13\\/171701d0d5e8553038.jpg\"},{\"type\":\"course\",\"id\":\"8\",\"title\":\"\\u76f4\\u64adLIVE\",\"picture\":\"\"},{\"type\":\"course\",\"id\":\"12\",\"title\":\"\\u4ed8\\u8d39\\u8bfe\\u7a0b\\u6d4b\\u8bd52\",\"picture\":\"\"}],\"total\":7}"
						}
					]
				},
				{
					"name": "getMyfriends",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    var userBody = JSON.stringify(jsonData.data[i]);",
									"    tests[\"getMyFriends success\"] = userBody.has(\"id\")&userBody.has(\"nickname\")&userBody.has(\"mediumAvatar\")&userBody.has(\"roles\");",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/friends?start=0&limit=10000",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"friends"
							],
							"query": [
								{
									"equals": true,
									"key": "start",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "10000"
								}
							]
						},
						"description": "获取我的班级讨论组"
					},
					"response": [
						{
							"id": "fc00ff2a-79a3-4655-9a11-4e8eda520cd8",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "classRoomId",
											"type": "text",
											"value": "4sd"
										},
										{
											"key": "targetType",
											"type": "text",
											"value": "classroom"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/me/chatrooms",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"me",
										"chatrooms"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Tue, 07 Feb 2017 07:44:42 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "607",
							"body": "{\"resources\":[{\"type\":\"classroom\",\"id\":\"1\",\"title\":\"\\u79fb\\u52a8\\u5c0f\\u7ec4\\u73ed\\uff0c\\u8352\\u5c9b\\u60ca\\u9b42\\u8bd5\\u770b\\u673a\\u9876\\u76d2\\uff0c\\u7b49\\u7ea7\\u8003\\u8bd5\\u6253\\u5f00\\u5361\\u673a\\u5237\\u5361\\u673a\\u673a\\u9876\\u76d2\",\"picture\":\"http:\\/\\/test.mob.edusoho.cn\\/files\\/course\\/2017\\/01-19\\/1341553900d2466092.JPG\"},{\"type\":\"course\",\"id\":\"1\",\"title\":\"2017\\u7b2c\\u4e00\\u8bfe\",\"picture\":\"\"},{\"type\":\"course\",\"id\":\"3\",\"title\":\"\\u76f4\\u64ad\\u8bfe01-12\",\"picture\":\"\"},{\"type\":\"course\",\"id\":\"4\",\"title\":\"\\u4e13\\u7528\\u6d4b\\u8bd5\\u8bfe\\u7a0b\\u6d4b\\u8bd5\\u8bfe\\u7a0b\",\"picture\":\"http:\\/\\/test.mob.edusoho.cn\\/files\\/course\\/2017\\/01-12\\/1044535e9fe1125132.jpg\"},{\"type\":\"course\",\"id\":\"7\",\"title\":\"\\u5f88\\u957f\\u5f88\\u957f\\u7684\\u666e\\u901a\\u8bfe\\u7a0b\\u540d\\u79f0\\uff0c\\u5c31\\u662f\\u8ba8\\u8bba\\u6700\\u597d\\u7684\\u5f00\\u53d1\\u8bed\\u8a00\\u662f\\u54ea\\u4e2a\\uff1fjava\\uff0cc,c++,OC\\uff0cswift,PHP\",\"picture\":\"http:\\/\\/test.mob.edusoho.cn\\/files\\/course\\/2017\\/01-13\\/171701d0d5e8553038.jpg\"},{\"type\":\"course\",\"id\":\"8\",\"title\":\"\\u76f4\\u64adLIVE\",\"picture\":\"\"},{\"type\":\"course\",\"id\":\"12\",\"title\":\"\\u4ed8\\u8d39\\u8bfe\\u7a0b\\u6d4b\\u8bd52\",\"picture\":\"\"}],\"total\":7}"
						}
					]
				},
				{
					"name": "getUserNotification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.data.length;i++){",
									"    var userBody = JSON.stringify(jsonData.data[i]);",
									"    tests[\"getMyNotifications success\"] = userBody.has(\"userId\")&userBody.has(\"userName\")&userBody.has(\"opration\")&userBody.has(\"avatar\");",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/notifications?type=user-follow",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"notifications"
							],
							"query": [
								{
									"equals": true,
									"key": "type",
									"value": "user-follow"
								}
							]
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "15_article",
			"description": "资讯相关\n",
			"item": [
				{
					"name": "getArticleCategories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"for(var i=0;i<jsonData.length;i++){",
									"    var categoryBody = JSON.stringify(jsonData[i]);",
									"    tests[\"get article_categories success !\"] = categoryBody.has(\"name\")&categoryBody.has(\"code\")&categoryBody.has(\"id\")&categoryBody.has(\"parentId\")&categoryBody.has(\"depth\")&(jsonData[i].published===\"1\");",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/article_categories",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"article_categories"
							]
						},
						"description": "获取资讯 栏目 "
					},
					"response": [
						{
							"id": "b96ba007-8b8a-4935-900e-aa17dddd57de",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 16 Feb 2017 03:09:21 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "1671",
							"body": "[{\"id\":\"1\",\"name\":\"\\u65b0\\u95fb\",\"code\":\"news\",\"weight\":\"0\",\"publishArticle\":\"1\",\"seoTitle\":\"\",\"seoKeyword\":\"\",\"seoDesc\":\"\",\"published\":\"1\",\"parentId\":\"0\",\"createdTime\":\"2017-01-16T09:19:59+00:00\",\"depth\":1},{\"id\":\"4\",\"name\":\"ddddd\",\"code\":\"ddddd\",\"weight\":\"0\",\"publishArticle\":\"1\",\"seoTitle\":\"\",\"seoKeyword\":\"\",\"seoDesc\":\"\",\"published\":\"1\",\"parentId\":\"1\",\"createdTime\":\"2017-01-19T03:56:15+00:00\",\"depth\":2},{\"id\":\"2\",\"name\":\"\\u6d6e\\u5149\",\"code\":\"Time\",\"weight\":\"0\",\"publishArticle\":\"1\",\"seoTitle\":\"\",\"seoKeyword\":\"\",\"seoDesc\":\"\",\"published\":\"1\",\"parentId\":\"0\",\"createdTime\":\"2017-01-17T06:07:13+00:00\",\"depth\":1},{\"id\":\"3\",\"name\":\"\\u63a0\\u5f71\",\"code\":\"photo\",\"weight\":\"0\",\"publishArticle\":\"1\",\"seoTitle\":\"\",\"seoKeyword\":\"\",\"seoDesc\":\"\",\"published\":\"1\",\"parentId\":\"0\",\"createdTime\":\"2017-01-17T06:07:40+00:00\",\"depth\":1},{\"id\":\"5\",\"name\":\"gdfgsfg \",\"code\":\"ffdgdfg\",\"weight\":\"0\",\"publishArticle\":\"1\",\"seoTitle\":\"\",\"seoKeyword\":\"\",\"seoDesc\":\"\",\"published\":\"1\",\"parentId\":\"0\",\"createdTime\":\"2017-01-19T03:56:39+00:00\",\"depth\":1}]"
						}
					]
				},
				{
					"name": "getArticles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var count = 0;",
									"//判断当前分类下被置顶的资讯",
									"for (var i=0;i<jsonData.resources.length;i++ ){",
									"    if(jsonData.resources[i].sticky === \"1\"){",
									"        count=count+1;",
									"    }",
									"}",
									"if((count === 0)&(jsonData.resources.length>1)){",
									"  var flag = false;",
									"  for(var i=0;i<jsonData.resources.length-1;i++){",
									"      if(jsonData.resources[i].publishedTime >= jsonData.resources[i+1].publishedTime){",
									"          flag = true;",
									"        }else{",
									"            flag = false;break;",
									"        }",
									"    }",
									"  tests[\"get articles sorted by publishedTime DESC !\"] = flag === true;",
									"}",
									"if(count === 1){",
									"    tests[\"get articles sorted by publishedTime DESC !\"] = jsonData[0].sticky === \"1\";",
									"}",
									"",
									"if(count > 1){",
									"    var flag=false;",
									"    for(var i=0;i<count-1;i++){",
									"        if(jsonData.resources[i].publishedTime >= jsonData.resources[i+1].publishedTime){",
									"          flag = true;",
									"        }else{",
									"            flag = false;break;",
									"        }",
									"    }",
									"    if(jsonData.resources.length-count>1){",
									"        var flag2 = false;",
									"        for(var j=count;j<jsonData.resources.length-1;j++){ ",
									"          if(jsonData.resources[j].publishedTime >= jsonData.resources[j+1].publishedTime){",
									"            flag2 = true;",
									"           }else{",
									"              flag2 = false;break;",
									"            }",
									"        }",
									"         tests[\"get articles sorted by publishedTime DESC !\"] = (flag&flag2) === 1;",
									"    }else{",
									"        tests[\"get articles sorted by publishedTime DESC !\"] = flag === true;",
									"    }",
									"}",
									"",
									"if(jsonData.resources.length>0){",
									"    postman.setEnvironmentVariable(\"articleId\", jsonData.resources[0].id);",
									"    for(var i=0;i<jsonData.resources.length;i++){",
									"        tests[\"get articles success\"] = (jsonData.resources[i].status === \"published\")&responseBody.has(\"id\")&responseBody.has(\"title\")&responseBody.has(\"picture\")&responseBody.has(\"categoryId\")&responseBody.has(\"tags\")&responseBody.has(\"thumb\")&responseBody.has(\"originalThumb\")&responseBody.has(\"sticky\")&responseBody.has(\"promoted\")&responseBody.has(\"featured\"); ",
									"",
									"    }",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/articles?categoryId=0&limit=100&start=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"articles"
							],
							"query": [
								{
									"equals": true,
									"key": "categoryId",
									"value": "0"
								},
								{
									"equals": true,
									"key": "limit",
									"value": "100"
								},
								{
									"equals": true,
									"key": "start",
									"value": "0"
								}
							]
						},
						"description": "sort,默认按published排序\ncreated 创建时间倒序 \nupdated 更新时间倒序 \npublished 就是先置顶后发布时间倒序；\nnormal  发布时间倒序 \npopular  点击量倒序"
					},
					"response": [
						{
							"id": "38262b0e-a1c3-4cdc-8d03-48edbfaf4bec",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Auth-Token",
										"value": "{{token}}",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {},
								"url": {
									"raw": "{{url}}/api/articles?categoryId=1&limit=100&start=0",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"articles"
									],
									"query": [
										{
											"key": "categoryId",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "start",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 16 Feb 2017 03:09:47 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "536",
							"body": "{\"resources\":[{\"id\":\"1\",\"title\":\"\\u7279\\u5927\\u65b0\\u95fb\",\"categoryId\":\"1\",\"tagIds\":null,\"source\":\"mobile test\\u6d4b\\u8bd5\\u7ad9\",\"sourceUrl\":\"\",\"publishedTime\":\"1484558407\",\"body\":\"\\u003Cp\\u003E\\u5c3a\\u5bf8\\u003C\\/p\\u003E\\r\\n\",\"thumb\":\"\",\"originalThumb\":\"\",\"picture\":\"\",\"status\":\"published\",\"hits\":\"0\",\"featured\":\"0\",\"promoted\":\"0\",\"sticky\":\"0\",\"postNum\":\"0\",\"upsNum\":\"0\",\"userId\":\"1\",\"orgId\":\"1\",\"orgCode\":\"1.\",\"createdTime\":\"2017-01-16T09:20:22+00:00\",\"updatedTime\":\"2017-01-16T09:20:22+00:00\",\"category\":{\"id\":\"1\",\"name\":\"\\u9ed8\\u8ba4\\u5206\\u7c7b\"},\"tags\":[]}],\"total\":\"1\"}"
						}
					]
				},
				{
					"name": "getArticleInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									" tests[\"get article info  success\"] = (jsonData.id === environment.articleId)&responseBody.has(\"title\")&responseBody.has(\"picture\")&responseBody.has(\"status\")&responseBody.has(\"categoryId\")&responseBody.has(\"tags\")&responseBody.has(\"tagIds\")&responseBody.has(\"source\")&responseBody.has(\"body\")&responseBody.has(\"thumb\")&responseBody.has(\"originalThumb\")&responseBody.has(\"sticky\")&responseBody.has(\"promoted\")&responseBody.has(\"featured\");",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/articles/{{articleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"articles",
								"{{articleId}}"
							]
						},
						"description": "获取资讯详情"
					},
					"response": []
				}
			]
		},
		{
			"name": "16_setting",
			"description": "",
			"item": [
				{
					"name": "getCourseSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get courseSetting success !\"] = (jsonData.chapter_name === \"章\")&(jsonData.part_name === \"节\")&((jsonData.show_student_num_enabled === \"0\")||(jsonData.show_student_num_enabled === \"1\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/setting/course",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"setting",
								"course"
							]
						},
						"description": "课程章节自定义 "
					},
					"response": []
				},
				{
					"name": "getCloudVideoSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get cloudVideoSetting success !\"] = (responseBody.has(\"video_watermark\"))&(responseBody.has(\"video_watermark_image\"))&(responseBody.has(\"video_embed_watermark_image\"))&(responseBody.has(\"video_fingerprint\"))&(responseBody.has(\"video_fingerprint_time\"));",
									"",
									""
								],
								"id": "d671efa5-7309-42db-a0ad-54f7d1496ad7",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "classRoomId",
									"type": "text",
									"value": "4sd"
								},
								{
									"key": "targetType",
									"type": "text",
									"value": "classroom"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/setting/cloud_video",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"setting",
								"cloud_video"
							]
						},
						"description": "课程章节自定义 "
					},
					"response": []
				},
				{
					"name": "getIMSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.enabled === \"1\"){",
									"    tests[\"IM is opened !\"] = true;",
									"}",
									"if(jsonData.enabled === \"0\"){",
									"    tests[\"IM is closed !\"] = true;",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Auth-Token",
								"value": "{{token}}"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/setting/app_im",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"setting",
								"app_im"
							]
						},
						"description": ""
					},
					"response": [
						{
							"id": "9a08099d-1e29-403b-8282-8f4a807b8e8a",
							"name": "\"enabled\": \"1\",",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 09 Mar 2017 08:29:25 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "584",
							"body": "{\"enabled\":\"1\",\"convNo\":\"4b23b5999a7d3b4bf29d6d34fe1d059c\"}"
						},
						{
							"id": "ec1603f1-3f21-4050-8111-0c105510c872",
							"name": "IM关闭",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 09 Mar 2017 08:30:21 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "515",
							"body": "{\"enabled\":\"0\",\"convNo\":\"4b23b5999a7d3b4bf29d6d34fe1d059c\"}"
						}
					]
				},
				{
					"name": "getRegisterSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"get registerSetting success !\"] = responseBody.has(\"mode\")&(responseBody.has(\"level\"))&(responseBody.has(\"captchaEnabled\"))&(responseBody.has(\"emailVerifyEnabled\"));",
									"",
									""
								],
								"id": "d09cb638-c7ce-4fd3-9241-03618968267c",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/setting/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"setting",
								"register"
							]
						},
						"description": ""
					},
					"response": [
						{
							"id": "df3852bc-2cce-4c33-90ba-f2337c94b7a9",
							"name": "\"enabled\": \"1\",",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 09 Mar 2017 08:29:25 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "584",
							"body": "{\"enabled\":\"1\",\"convNo\":\"4b23b5999a7d3b4bf29d6d34fe1d059c\"}"
						},
						{
							"id": "052b4321-435f-465c-a232-acadcc49a016",
							"name": "IM关闭",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 09 Mar 2017 08:30:21 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "515",
							"body": "{\"enabled\":\"0\",\"convNo\":\"4b23b5999a7d3b4bf29d6d34fe1d059c\"}"
						}
					]
				},
				{
					"name": "getPaymentSetting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"tests[\"get paymentSetting success !\"] = responseBody.has(\"alipayEnabled\")&(responseBody.has(\"wxpayEnabled\"))&(responseBody.has(\"llpayEnabled\"))&(responseBody.has(\"enabled\"));",
									"",
									""
								],
								"id": "332bc8ec-cca5-4e22-88c6-ee069fa2fbc1",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {},
						"url": {
							"raw": "{{url}}/api/setting/payment",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"setting",
								"payment"
							]
						},
						"description": ""
					},
					"response": [
						{
							"id": "8fe3bcdb-c2f0-428e-8b45-80757d576994",
							"name": "\"enabled\": \"1\",",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 09 Mar 2017 08:29:25 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "584",
							"body": "{\"enabled\":\"1\",\"convNo\":\"4b23b5999a7d3b4bf29d6d34fe1d059c\"}"
						},
						{
							"id": "07b51c4f-ddf6-4cef-a216-7fac436e7649",
							"name": "IM关闭",
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Thu, 09 Mar 2017 08:30:21 GMT"
								},
								{
									"description": "",
									"key": "Proxy-Connection",
									"name": "Proxy-Connection",
									"value": "Keep-alive"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.10.1"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Powered-By",
									"name": "X-Powered-By",
									"value": "PHP/5.3.10-1ubuntu3.25"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "test.mob.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "k3uia04evospbm7idcp12r9n02",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "515",
							"body": "{\"enabled\":\"0\",\"convNo\":\"4b23b5999a7d3b4bf29d6d34fe1d059c\"}"
						}
					]
				}
			]
		},
		{
			"name": "17_plugin",
			"description": "会员模块",
			"item": [
				{
					"name": "getVipLevels",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"if(jsonData.length>0){",
									"    postman.setEnvironmentVariable(\"vipLevelId\", jsonData[jsonData.length-1].id);",
									"for(var i=0;i<jsonData.length;i++){",
									"    var vip=JSON.stringify(jsonData[i]);//json转换为string",
									"    tests[\"getVipLevels info  success\"] = vip.has(\"id\")&vip.has(\"seq\")&vip.has(\"name\")&vip.has(\"icon\")&vip.has(\"monthPrice\")&vip.has(\"yearPrice\")&vip.has(\"description\")&vip.has(\"vip\");",
									"",
									"}",
									"}else{",
									"    tests[\"There is no vip !\"] = true;",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/plugins/vip/vip_levels",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plugins",
								"vip",
								"vip_levels"
							]
						},
						"description": "获取所有会员等级"
					},
					"response": []
				},
				{
					"name": "getVipInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getVipLevels info  success\"] = (jsonData.id === environment.vipLevelId)&responseBody.has(\"seq\")&responseBody.has(\"name\")&responseBody.has(\"icon\")&responseBody.has(\"monthPrice\")&responseBody.has(\"yearPrice\")&responseBody.has(\"description\")&responseBody.has(\"vip\");",
									"",
									"",
									"",
									"// postman.setEnvironmentVariable(\"variable_key\", \"variable_value\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/plugins/vip/vip_levels/{{vipLevelId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plugins",
								"vip",
								"vip_levels",
								"{{vipLevelId}}"
							]
						},
						"description": "获取单个会员等级信息\nGET /plugins/vip/vip_levels/{levelId}"
					},
					"response": [
						{
							"id": "d7c2d051-698d-48ee-9790-159c5258fd18",
							"name": "200",
							"originalRequest": {
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 14 Apr 2017 03:22:12 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "375e67"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/375e67"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "39",
							"body": "{\"id\":\"3\",\"seq\":\"3\",\"name\":\"\\u9ec4\\u91d1\",\"icon\":\"\",\"picture\":\"\",\"monthPrice\":\"1.00\",\"yearPrice\":\"10.00\",\"description\":\"\\u4e09\\u7ea7\\uff0c\\u4e0d\\u662f\\u7247\",\"freeLearned\":\"0\",\"enabled\":\"1\",\"createdTime\":\"2017-03-30T17:31:04+08:00\",\"maxRate\":\"100\"}"
						}
					]
				},
				{
					"name": "getVipInfo_error_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The vip levelId is error or not existed !\"] = responseBody === \"{}\";",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/plugins/vip/vip_levels/errorId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plugins",
								"vip",
								"vip_levels",
								"errorId"
							]
						},
						"description": "VIPid错误，获取单个会员等级信息失败"
					},
					"response": [
						{
							"id": "fac5b346-4be6-4935-8e9d-657428ae5df5",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.edusoho.v2+json",
										"enabled": true,
										"disabled": false
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "_username",
											"value": "Jesse",
											"type": "text"
										},
										{
											"key": "_password",
											"value": "123456",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{url}}/api/plugins/vip/vip_levels/3",
									"host": [
										"{{url}}"
									],
									"path": [
										"api",
										"plugins",
										"vip",
										"vip_levels",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"description": "",
									"key": "Cache-Control",
									"name": "Cache-Control",
									"value": "private, must-revalidate"
								},
								{
									"description": "",
									"key": "Connection",
									"name": "Connection",
									"value": "keep-alive"
								},
								{
									"description": "",
									"key": "Content-Type",
									"name": "Content-Type",
									"value": "application/json"
								},
								{
									"description": "",
									"key": "Date",
									"name": "Date",
									"value": "Fri, 14 Apr 2017 03:22:12 GMT"
								},
								{
									"description": "",
									"key": "Server",
									"name": "Server",
									"value": "nginx/1.4.6 (Ubuntu)"
								},
								{
									"description": "",
									"key": "Transfer-Encoding",
									"name": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"description": "",
									"key": "X-Debug-Token",
									"name": "X-Debug-Token",
									"value": "375e67"
								},
								{
									"description": "",
									"key": "X-Debug-Token-Link",
									"name": "X-Debug-Token-Link",
									"value": "http://devtest.edusoho.cn/_profiler/375e67"
								},
								{
									"description": "",
									"key": "expires",
									"name": "expires",
									"value": "-1"
								},
								{
									"description": "",
									"key": "pragma",
									"name": "pragma",
									"value": "no-cache"
								}
							],
							"cookie": [
								{
									"expires": "Tue Jan 19 2038 03:14:07 GMT+0800 (中国标准时间)",
									"httpOnly": true,
									"domain": "devtest.edusoho.cn",
									"path": "/",
									"secure": false,
									"value": "7q8r2djnq1ksfq2rs615t15osv",
									"key": "PHPSESSID"
								}
							],
							"responseTime": "39",
							"body": "{\"id\":\"3\",\"seq\":\"3\",\"name\":\"\\u9ec4\\u91d1\",\"icon\":\"\",\"picture\":\"\",\"monthPrice\":\"1.00\",\"yearPrice\":\"10.00\",\"description\":\"\\u4e09\\u7ea7\\uff0c\\u4e0d\\u662f\\u7247\",\"freeLearned\":\"0\",\"enabled\":\"1\",\"createdTime\":\"2017-03-30T17:31:04+08:00\",\"maxRate\":\"100\"}"
						}
					]
				},
				{
					"name": "isVip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"I am a vip !\"] = jsonData.isMember === true;",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/me/vip_levels/{{myVipId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"me",
								"vip_levels",
								"{{myVipId}}"
							]
						},
						"description": "判断当前用户是否是VIP会员\nGET /me/vip_levels/{vipLevelId}"
					},
					"response": []
				},
				{
					"name": "getDiscountInfo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"getDiscountInfo success\"] = (jsonData.id === data.discountId)&responseBody.has(\"name\")&responseBody.has(\"startTime\")&responseBody.has(\"endTime\")&responseBody.has(\"status\");",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/plugins/discount/discounts/{{discountId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plugins",
								"discount",
								"discounts",
								"{{discountId}}"
							]
						},
						"description": "获取单个打折活动信息"
					},
					"response": []
				},
				{
					"name": "getDiscountInfo_error_id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"The discount Id is error or not existed !\"] = responseBody === \"{}\";",
									""
								],
								"id": "b29d1a27-d720-4bce-8c92-5c842411c92a",
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.edusoho.v2+json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "_username",
									"type": "text",
									"value": "Jesse"
								},
								{
									"key": "_password",
									"type": "text",
									"value": "123456"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/plugins/discount/discounts/errorId",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"plugins",
								"discount",
								"discounts",
								"errorId"
							]
						},
						"description": "获取打折活动信息失败"
					},
					"response": []
				}
			]
		}
	]
}