'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BatchSelect = function () {
  function BatchSelect($element) {
    _classCallCheck(this, BatchSelect);

    this.$element = $element;
    this.initEvent();
  }

  _createClass(BatchSelect, [{
    key: 'initEvent',
    value: function initEvent() {
      var _this = this;

      this.$element.on('click', '[data-role="batch-select"]', function (event) {
        return _this._batch2Item(event);
      });
      this.$element.on('click', '[data-role="batch-item"]', function (event) {
        return _this._item2Batch(event);
      });
    }
  }, {
    key: '_batch2Item',
    value: function _batch2Item(event) {
      var checked = $(event.currentTarget).prop('checked');
      this.$element.find('[data-role="batch-select"]').prop('checked', checked);
      this.$element.find('[data-role="batch-item"]:visible').prop('checked', checked);
    }
  }, {
    key: '_item2Batch',
    value: function _item2Batch(event) {
      var itemLength = this.$element.find('[data-role="batch-item"]').length;
      var itemCheckedLength = this.$element.find('[data-role="batch-item"]:checked').length;

      if (itemLength == itemCheckedLength) {
        this.$element.find('[data-role="batch-select"]').prop('checked', true);
      } else {
        this.$element.find('[data-role="batch-select"]').prop('checked', false);
      }
    }
  }]);

  return BatchSelect;
}();

exports.default = BatchSelect;