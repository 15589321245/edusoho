'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Options = function (_Component) {
  _inherits(Options, _Component);

  function Options(props) {
    _classCallCheck(this, Options);

    var _this = _possibleConstructorReturn(this, (Options.__proto__ || Object.getPrototypeOf(Options)).call(this, props));

    _this.state = {
      datas: _this.props.datas
    };
    _this.editor = null;
    _this.editorBody = null;
    _this.editorHtml = null;
    return _this;
  }

  _createClass(Options, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      console.log('componentDidMount');
      this.initCkeditor();
    }
  }, {
    key: 'deleteOption',
    value: function deleteOption(event) {
      this.editorHtml = null;
      this.props.deleteOption(event.currentTarget.attributes["data-option-id"].value);
    }
  }, {
    key: 'onChangeChecked',
    value: function onChangeChecked(event) {
      this.props.changeOptionChecked(event.currentTarget.attributes["data-option-id"].value, this.props.datas.checked);
    }
  }, {
    key: 'initCkeditor',
    value: function initCkeditor(dataSourceUi) {
      var _this2 = this;

      if (!this.editor) {
        (function () {
          _this2.editor = CKEDITOR.replace(_this2.props.datas.optionId, {
            toolbar: 'Minimal',
            filebrowserImageUploadUrl: _this2.props.imageUploadUrl,
            height: 120
          });
          var self = _this2;
          _this2.editor.on("instanceReady", function () {
            self.editorBody = $('#' + [self.props.datas.optionId]).parent().find('iframe').contents().find('body');
            //setData两个问题：1、引发事件失效 2、死循环触发；
          });
          _this2.editor.on('change', function () {
            setTimeout(function () {
              self.updateInputValue(self.editor.getData());
            }, 100);
          });
        })();
      } else {
        this.editor.setData(datas.inputValue);
      }
    }
  }, {
    key: 'updateInputValue',
    value: function updateInputValue(inputValue) {
      this.editorHtml = inputValue;
      this.props.updateInputValue(this.props.datas.optionId, inputValue);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var showDanger = this.props.isValidator && this.props.datas.inputValue.length <= 0;
      var type = 'checkbox';
      if (this.props.isRadio) {
        type = 'radio';
      }
      if (this.editorBody && this.editorHtml != this.props.datas.inputValue) {
        this.editorBody.html(this.props.datas.inputValue);
      }
      return _react2.default.createElement(
        'div',
        { className: 'form-group' },
        _react2.default.createElement(
          'div',
          { className: 'col-sm-2 control-label' },
          _react2.default.createElement(
            'label',
            { className: 'choice-label control-label-required' },
            this.props.datas.optionLabel
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'col-sm-8 controls' },
          _react2.default.createElement('textarea', { className: 'form-control datas-input col-md-8', id: this.props.datas.optionId, defaultValue: this.props.datas.inputValue, name: 'choices[]', value: this.props.datas.inputValue, 'data-image-upload-url': this.props.imageUploadUrl, 'data-image-download-url': this.props.imageDownloadUrl }),
          _react2.default.createElement(
            'div',
            { className: 'mtm' },
            _react2.default.createElement(
              'label',
              null,
              _react2.default.createElement('input', { type: type, name: 'answer[]', 'data-option-id': this.props.datas.optionId, value: this.props.index, checked: this.props.datas.checked, className: 'answer-checkbox', onChange: function onChange(event) {
                  return _this3.onChangeChecked(event);
                } }),
              '\u6B63\u786E\u7B54\u6848'
            )
          ),
          _react2.default.createElement(
            'p',
            { className: showDanger ? 'color-danger' : 'hidden' },
            '\u8BF7\u8F93\u5165\u9009\u9879\u5185\u5BB9'
          )
        ),
        _react2.default.createElement(
          'div',
          { className: 'col-sm-2' },
          _react2.default.createElement(
            'a',
            { className: 'btn btn-default btn-sm', 'data-option-id': this.props.datas.optionId, onClick: function onClick(event) {
                return _this3.deleteOption(event);
              }, href: 'javascript:;' },
            _react2.default.createElement('i', { className: 'glyphicon glyphicon-trash' })
          )
        )
      );
    }
  }]);

  return Options;
}(_react.Component);

exports.default = Options;