{"version":3,"sources":["app/Resources/static-src/app/js/activity/activity-emitter.js"],"names":["ActivityEmitter","eventMap","receives","_registerIframeEvents","instanceId","fedx","addFilter","channel","topic","direction","signalReady","_registerReceiveTaskParentEvents","subscribe","callback","event","data","listeners","forEach","Promise","resolve","reject","message","publish","subscriber","error","unsubscribe","push"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;;;IAGqBA,e;AAEnB,6BAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB;AACdC,gBAAU;AADI,KAAhB;;AAIA,SAAKC,qBAAL;AACD;;;;4CAEsB;AACrB,uBAAOC,UAAP,CAAkB,UAAlB;;AAEA,uBAAOC,IAAP,CAAYC,SAAZ,CAAsB,CACpB;AACEC,iBAAS,iBADX,EAC8B;AAC5BC,eAAO,GAFT;AAGEC,mBAAW;AAHb,OADoB,EAMpB;AACEF,iBAAS,aADX,EAC2B;AACzBC,eAAO,GAFT;AAGEC,mBAAW;AAHb,OANoB,CAAtB;;AAaA,uBAAOJ,IAAP,CAAYK,WAAZ;AACA,WAAKC,gCAAL;;AAEA,aAAO,IAAP;AACD;;;uDAEkC;AAAA;;AACjC,uBAAOC,SAAP,CAAiB;AACfL,iBAAS,aADM;AAEfC,eAAO,GAFQ;AAGfK,kBAAU,wBAAmB;AAAA,cAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,cAAVC,IAAU,QAAVA,IAAU;;AAC3B,cAAIC,YAAY,MAAKf,QAAL,CAAcC,QAAd,CAAuBY,KAAvB,CAAhB;AACA,cAAI,OAAOE,SAAP,KAAqB,WAAzB,EAAsC;AACpCA,sBAAUC,OAAV,CAAkB;AAAA,qBAAYJ,SAASE,IAAT,CAAZ;AAAA,aAAlB;AACD;AACF;AARc,OAAjB;AAUD;;AAED;;;;yBACKD,K,EAAOC,I,EAAM;AAChB,aAAO,IAAIG,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIC,UAAU;AACZP,iBAAOA,KADK;AAEZC,gBAAMA;AAFM,SAAd;;AAKA,yBAAOO,OAAP,CAAe;AACbf,mBAAS,iBADI;AAEbC,iBAAO,GAFM;AAGbO,gBAAMM;AAHO,SAAf;;AAMA,YAAId,UAAU,iBAAOA,OAAP,CAAe,aAAf,CAAd;AACA,YAAIgB,aAAahB,QAAQK,SAAR,CAAkB,GAAlB,EAAuB,UAACG,IAAD,EAAU;AAChD,cAAIA,KAAKS,KAAT,EAAgB;AACdJ,mBAAOL,KAAKS,KAAZ;AACD,WAFD,MAEO;AACLL,oBAAQJ,IAAR;AACD;AACDQ,qBAAWE,WAAX;AACD,SAPgB,CAAjB;AAQD,OArBM,CAAP;AAsBD;;AAED;;;;4BACQX,K,EAAOD,Q,EAAU;AACvB,WAAKZ,QAAL,CAAcC,QAAd,CAAuBY,KAAvB,IAAgC,KAAKb,QAAL,CAAcC,QAAd,CAAuBY,KAAvB,KAAiC,EAAjE;AACA,WAAKb,QAAL,CAAcC,QAAd,CAAuBY,KAAvB,EAA8BY,IAA9B,CAAmCb,QAAnC;AACD;;;;;;kBA3EkBb,e","file":"activity-emitter.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import postal from 'postal';\nimport 'postal.federation';\nimport 'postal.xframe';\n\n\nexport default class ActivityEmitter {\n\n  constructor() {\n    this.eventMap = {\n      receives: {}\n    };\n\n    this._registerIframeEvents();\n  }\n\n  _registerIframeEvents(){\n    postal.instanceId('activity');\n\n    postal.fedx.addFilter([\n      {\n        channel: 'activity-events', //发送事件到task parent\n        topic: '#',\n        direction: 'out'\n      },\n      {\n        channel: 'task-events',  //接收 task parent 的事件\n        topic: '#',\n        direction: 'in'\n      }\n    ]);\n\n    postal.fedx.signalReady();\n    this._registerReceiveTaskParentEvents();\n\n    return this;\n  }\n\n  _registerReceiveTaskParentEvents() {\n    postal.subscribe({\n      channel: 'task-events',\n      topic: '#',\n      callback: ({event, data}) => {\n        let listeners = this.eventMap.receives[event];\n        if (typeof listeners !== 'undefined') {\n          listeners.forEach(callback => callback(data));\n        }\n      }\n    });\n  }\n\n  //发送事件到task\n  emit(event, data) {\n    return new Promise((resolve, reject) => {\n      let message = {\n        event: event,\n        data: data\n      };\n\n      postal.publish({\n        channel: 'activity-events',\n        topic: '#',\n        data: message\n      });\n\n      let channel = postal.channel('task-events');\n      let subscriber = channel.subscribe('#', (data) => {\n        if (data.error) {\n          reject(data.error);\n        } else {\n          resolve(data);\n        }\n        subscriber.unsubscribe();\n      });\n    });\n  }\n\n  //监听task的事件\n  receive(event, callback) {\n    this.eventMap.receives[event] = this.eventMap.receives[event] || [];\n    this.eventMap.receives[event].push(callback);\n  }\n}\n"]}