{"version":3,"sources":["app/Resources/static-src/app/js/task/plugin/question/question.js"],"names":["url","$element","$","$form","validator","channel","render","on","publish","onSavePost","event","preventDefault","form","post","attr","serialize","done","html","find","append","number","parseInt","text","val","error","response","Notify","danger","message","get","validate","rules","messages","initEvent","fail","undelegate"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;;AAGE,kBAAYA,GAAZ,EAAiB;AAAA;;AACf,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,QAAL,GAAgBC,EAAE,wBAAF,CAAhB;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,OAAL,GAAe,iBAAOA,OAAP,CAAe,sBAAf,CAAf;AACA,SAAKC,MAAL;AACD;;;;gCAEW;AAAA;;AAEV,WAAKL,QAAL,CAAcM,EAAd,CAAiB,OAAjB,EAA0B,eAA1B,EAA2C,YAAM;AAC/C,cAAKF,OAAL,CAAaG,OAAb,CAAqB,cAArB;AACD,OAFD;;AAIA,WAAKL,KAAL,CAAWI,EAAX,CAAc,OAAd,EAAuB,cAAvB,EAAuC;AAAA,eAAS,MAAKE,UAAL,CAAgBC,KAAhB,CAAT;AAAA,OAAvC;AACD;;;+BAEUA,K,EAAO;AAAA;;AAChBA,YAAMC,cAAN;;AAEA,UAAI,CAAC,KAAKP,SAAN,IAAmB,CAAC,KAAKA,SAAL,CAAeQ,IAAf,EAAxB,EAA+C;AAC7C;AACD;;AAEDV,QAAEW,IAAF,CAAO,KAAKV,KAAL,CAAWW,IAAX,CAAgB,QAAhB,CAAP,EAAkC,KAAKX,KAAL,CAAWY,SAAX,EAAlC,EACKC,IADL,CACU,UAACC,IAAD,EAAU;AACd,eAAKhB,QAAL,CAAciB,IAAd,CAAmB,uBAAnB,EAA4CC,MAA5C,CAAmDF,IAAnD;AACA,YAAMG,SAASC,SAAS,OAAKpB,QAAL,CAAciB,IAAd,CAAmB,yBAAnB,EAA8CI,IAA9C,EAAT,CAAf;AACA,eAAKrB,QAAL,CAAciB,IAAd,CAAmB,yBAAnB,EAA8CI,IAA9C,CAAmDF,SAAS,CAA5D;AACA,eAAKjB,KAAL,CAAWe,IAAX,CAAgB,UAAhB,EAA4BK,GAA5B,CAAgC,EAAhC;AACD,OANL,EAOKC,KAPL,CAOW,UAAUC,QAAV,EAAoB;AACzBC,eAAOC,MAAP,CAAcF,SAASD,KAAT,CAAeI,OAA7B;AACD,OATL;AAUD;;;6BAEQ;AAAA;;AACP1B,QAAE2B,GAAF,CAAM,KAAK7B,GAAX,EACKgB,IADL,CACU,gBAAQ;AACZ,eAAKf,QAAL,CAAcgB,IAAd,CAAmBA,IAAnB;;AAEA,eAAKd,KAAL,GAAa,OAAKF,QAAL,CAAciB,IAAd,CAAmB,YAAnB,CAAb;AACA,eAAKd,SAAL,GAAiB,OAAKD,KAAL,CAAW2B,QAAX,CAAoB;AACnCC,iBAAO;AACL,6BAAiB;AADZ,WAD4B;AAInCC,oBAAU;AACR,6BAAiB;AADT;AAJyB,SAApB,CAAjB;;AASA,eAAKC,SAAL;AACD,OAfL,EAgBKC,IAhBL,CAgBU,iBAAS;AACb,8BAAO,QAAP,EAAiB,OAAjB;AACD,OAlBL;AAmBD;;;8BAES;AACR,WAAKjC,QAAL,CAAcgB,IAAd,CAAmB,EAAnB;AACA,WAAKhB,QAAL,CAAckC,UAAd;AACD","file":"question.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import notify from \"common/notify\";\nimport postal from \"postal\";\n\nexport default class {\n  constructor(url) {\n    this.url = url;\n    this.$element = $('.question-detail-block');\n    this.$form = null;\n    this.validator = null;\n    this.channel = postal.channel('task.plugin.question');\n    this.render();\n  }\n\n  initEvent() {\n\n    this.$element.on('click', '.back-to-list', () => {\n      this.channel.publish('back-to-list');\n    });\n\n    this.$form.on('click', '.btn-primary', event => this.onSavePost(event))\n  }\n\n  onSavePost(event) {\n    event.preventDefault();\n\n    if (!this.validator || !this.validator.form()) {\n      return;\n    }\n\n    $.post(this.$form.attr('action'), this.$form.serialize())\n        .done((html) => {\n          this.$element.find('[data-role=post-list]').append(html);\n          const number = parseInt(this.$element.find('[data-role=post-number]').text());\n          this.$element.find('[data-role=post-number]').text(number + 1);\n          this.$form.find('textarea').val('');\n        })\n        .error(function (response) {\n          Notify.danger(response.error.message);\n        });\n  }\n\n  render() {\n    $.get(this.url)\n        .done(html => {\n          this.$element.html(html);\n\n          this.$form = this.$element.find('.post-form');\n          this.validator = this.$form.validate({\n            rules: {\n              'post[content]': 'required'\n            },\n            messages: {\n              'post[content]': \"请输入回复内容\"\n            }\n          });\n\n          this.initEvent();\n        })\n        .fail(error => {\n          notify('danger', 'error')\n        })\n  }\n\n  destroy() {\n    this.$element.html('');\n    this.$element.undelegate();\n  }\n}"]}