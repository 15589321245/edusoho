'use strict';

/*** IMPORTS FROM imports-loader ***/
var define = false;
var _module = false;
var _exports = false;
(function () {

  // Console-polyfill. MIT license.
  // https://github.com/paulmillr/console-polyfill
  // Make it safe to do console.log() always.
  (function (global) {
    'use strict';

    if (!global.console) {
      global.console = {};
    }
    var con = global.console;
    var prop, method;
    var dummy = function dummy() {};
    var properties = ['memory'];
    var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' + 'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' + 'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');
    while (prop = properties.pop()) {
      if (!con[prop]) con[prop] = {};
    }while (method = methods.pop()) {
      if (typeof con[method] !== 'function') con[method] = dummy;
    } // Using `this` for web workers & supports Browserify / Webpack.
  })(typeof window === 'undefined' ? this : window);
}).call(window);