'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

require('store');

var _jsCookie = require('js-cookie');

var _jsCookie2 = _interopRequireDefault(_jsCookie);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var COURSE_All_INTRO = 'COURSE_All_INTRO';
var COURSE_BASE_INTRO = 'COURSE_BASE_INTRO';
var COURSE_TASK_INTRO = 'COURSE_TASK_INTRO';
var COURSE_TASK_DETAIL_INTRO = 'COURSE_TASK_DETAIL_INTRO';
var COURSE_LIST_INTRO = 'COURSE_LIST_INTRO';
var COURSE_LIST_INTRO_COOKIE = 'COURSE_LIST_INTRO_COOKIE';

var Intro = function () {
  function Intro() {
    _classCallCheck(this, Intro);
  }

  _createClass(Intro, [{
    key: 'introType',
    value: function introType() {
      if (this.isTaskCreatePage()) {
        this.initTaskCreatePageIntro();
        return;
      }
      if (this.isCourseListPage()) {
        this.initCourseListPageIntro();
        return;
      }
      this.initNotTaskCreatePageIntro();
    }
  }, {
    key: 'isCourseListPage',
    value: function isCourseListPage() {
      return !!$('#courses-list-table').length;
    }
  }, {
    key: 'isTaskCreatePage',
    value: function isTaskCreatePage() {
      return !!$('#step-3').length;
    }
  }, {
    key: 'isInitTaskDetailIntro',
    value: function isInitTaskDetailIntro() {
      $('.js-task-manage-item').attr('id', 'step-5');
      return !!$('.js-settings-list').length;
    }
  }, {
    key: 'introStart',
    value: function introStart(steps) {
      var intro = introJs();
      intro.setOptions({
        steps: steps,
        skipLabel: '我知道了',
        nextLabel: '下一步',
        prevLabel: '上一步'
      });

      intro.start();
    }
  }, {
    key: 'initTaskCreatePageIntro',
    value: function initTaskCreatePageIntro() {
      if (store.get(COURSE_All_INTRO)) {
        return;
      }
      if (!store.get(COURSE_BASE_INTRO)) {
        store.set(COURSE_All_INTRO, true);
        this.introStart(this.initAllSteps());
        return;
      }
      if (!store.get(COURSE_TASK_INTRO)) {
        store.set(COURSE_TASK_INTRO, true);
        this.introStart(this.initTaskSteps());
      }
    }
  }, {
    key: 'initTaskDetailIntro',
    value: function initTaskDetailIntro(element) {
      if (!store.get(COURSE_TASK_DETAIL_INTRO)) {
        store.set(COURSE_TASK_DETAIL_INTRO);
        this.introStart(this.initTaskDetailSteps(element));
      }
    }
  }, {
    key: 'initNotTaskCreatePageIntro',
    value: function initNotTaskCreatePageIntro() {
      if (store.get(COURSE_All_INTRO)) {
        return;
      }
      if (!store.get(COURSE_BASE_INTRO)) {
        console.log('ok');
        store.set(COURSE_BASE_INTRO, true);
        this.introStart(this.initNotTaskPageSteps());
      }
    }
  }, {
    key: 'initNotTaskPageSteps',
    value: function initNotTaskPageSteps() {
      return [{
        intro: "课程管理功能现已全新升级!"
      }, {
        element: '#step-1',
        intro: "教学内容的编辑、管理请点击左侧“计划任务”的菜单项进入!"
      }, {
        element: '#step-2',
        intro: "在“营销设置”中您可以通过设置决定课程如何销售、如何加入、如何学习!"
      }];
    }
  }, {
    key: 'initAllSteps',
    value: function initAllSteps() {
      var arry = [{
        intro: "课程管理功能现已全新升级!"
      }, {
        element: '#step-1',
        intro: "教学内容的编辑、管理请点击左侧“计划任务”的菜单项进入!"
      }, {
        element: '#step-2',
        intro: "在“营销设置”中您可以通过设置决定课程如何销售、如何加入、如何学习!"
      }, {
        element: '#step-3',
        intro: "您可以在这里选择各种不同的教学手段，然后上传文件/设置内容/设置学习完成条件。!"
      }];
      //如果存在任务
      if (this.isInitTaskDetailIntro()) {
        arry.push({
          element: '#step-5',
          intro: '\u5728\u8BBE\u8BA1\u5B66\u4E60\u4EFB\u52A1\u65F6\uFF0C\n        \u60A8\u53EF\u4EE5\u6309\u7167\u8BFE\u65F6\u53BB\u8BBE\u7F6E\u9884\u4E60\u3001\u5B66\u4E60\u3001\u7EC3\u4E60\u3001\u4F5C\u4E1A\u3001\u8BFE\u5916\u8FD9\u51E0\u4E2A\u73AF\u8282\uFF0C\n        \u6BCF\u4E2A\u73AF\u8282\u90FD\u53EF\u4EE5\u901A\u8FC7\u5404\u79CD\u6559\u5B66\u624B\u6BB5\u6765\u5B9E\u73B0\u3002!'
        });
      }

      return arry;
    }
  }, {
    key: 'initTaskSteps',
    value: function initTaskSteps() {
      var arry = [{
        element: '#step-3',
        intro: "您可以在这里选择各种不同的教学手段，然后上传文件/设置内容/设置学习完成条件。!"
      }];
      //如果存在任务
      if (this.isInitTaskDetailIntro()) {
        arry.push({
          element: '#step-5',
          intro: '\u5728\u8BBE\u8BA1\u5B66\u4E60\u4EFB\u52A1\u65F6\uFF0C\n        \u60A8\u53EF\u4EE5\u6309\u7167\u8BFE\u65F6\u53BB\u8BBE\u7F6E\u9884\u4E60\u3001\u5B66\u4E60\u3001\u7EC3\u4E60\u3001\u4F5C\u4E1A\u3001\u8BFE\u5916\u8FD9\u51E0\u4E2A\u73AF\u8282\uFF0C\n        \u6BCF\u4E2A\u73AF\u8282\u90FD\u53EF\u4EE5\u901A\u8FC7\u5404\u79CD\u6559\u5B66\u624B\u6BB5\u6765\u5B9E\u73B0\u3002!'
        });
      }

      return arry;
    }
  }, {
    key: 'initCourseListSteps',
    value: function initCourseListSteps(element) {
      return [{
        element: element,
        intro: '\u606D\u559C\u4F60\u521B\u5EFA\u4E86\u591A\u4E2A\u6559\u5B66\u8BA1\u5212!\n          \u5DE6\u4FA7\u7684\u529F\u80FD\u83DC\u5355\u4F1A\u6709\u6240\u7B80\u5316\uFF0C\n          \u53EA\u4F1A\u663E\u793A\u8BFE\u7A0B\u516C\u5171\u7684\u76F8\u5173\u8BBE\u7F6E\u3002'
      }];
    }
  }, {
    key: 'isSetCourseListCookies',
    value: function isSetCourseListCookies() {
      if (!store.get(COURSE_LIST_INTRO)) {
        console.log('ok');
        _jsCookie2.default.set(COURSE_LIST_INTRO_COOKIE, true);
      }
    }
  }, {
    key: 'initCourseListPageIntro',
    value: function initCourseListPageIntro() {
      var _this = this;

      var listLength = $('#courses-list-table').find('tbody tr').length;
      //不需要的情况：
      if (!(listLength === 2) || store.get(COURSE_LIST_INTRO)) {
        console.log('ok');
        return;
      }
      // if(listLength == 2 ) {

      //   setTimeout(function() {
      //     $('.js-sidenav-course-menu').slideUp(function () {
      //         setTimeout(function() {
      //           let intro = new Intro(); 
      //           intro.initCourseListIntro('.js-sidenav');
      //         }, 500);
      //     });
      //   }, 500);
      // }

      var promise = new Promise(function (resolve, reject) {
        setTimeout(function () {
          $('.js-sidenav-course-menu').slideUp(function (params) {});
          resolve("Hello");
        }, 3000);
      });

      var p1 = new Promise(function (resolve) {
        setTimeout(function () {
          $('.js-sidenav-course-menu').slideUp(1000);
          console.log('1111');
        }, 500);
      });

      var p2 = new Promise(function (resolve) {
        setTimeout(function () {
          _this.initCourseListIntro('.js-sidenav');
          console.log('initCourseListIntro');
        }, 2000);
      });

      // Promise.all([p1, p2]).then(function () {
      //     console.log(11); // ["Hello", "World"]
      // });
    }
  }, {
    key: 'initCourseListIntro',
    value: function initCourseListIntro(element) {
      if (!store.get(COURSE_LIST_INTRO)) {
        store.set(COURSE_LIST_INTRO, true);
        this.introStart(this.initCourseListSteps(element));
        _jsCookie2.default.remove(COURSE_LIST_INTRO_COOKIE);
      }
    }
  }, {
    key: 'initTaskDetailSteps',
    value: function initTaskDetailSteps(element) {
      return [{
        element: element,
        intro: '\u5728\u8BBE\u8BA1\u5B66\u4E60\u4EFB\u52A1\u65F6\uFF0C\n        \u60A8\u53EF\u4EE5\u6309\u7167\u8BFE\u65F6\u53BB\u8BBE\u7F6E\u9884\u4E60\u3001\u5B66\u4E60\u3001\u7EC3\u4E60\u3001\u4F5C\u4E1A\u3001\u8BFE\u5916\u8FD9\u51E0\u4E2A\u73AF\u8282\uFF0C\n        \u6BCF\u4E2A\u73AF\u8282\u90FD\u53EF\u4EE5\u901A\u8FC7\u5404\u79CD\u6559\u5B66\u624B\u6BB5\u6765\u5B9E\u73B0\u3002!'
      }];
    }
  }]);

  return Intro;
}();

exports.default = Intro;