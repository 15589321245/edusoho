{"version":3,"sources":["app/Resources/static-src/app/js/task/widget/task-event-emitter.js"],"names":["TaskEventEmitter","element","$","eventUrl","data","undefined","Error","eventMap","receives","_registerIframeEvents","_registerReceiveActivityIframeEvents","event","Promise","resolve","reject","post","eventName","done","response","postal","publish","channel","topic","fail","error","callback","push"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;;IAEqBA,gB;AACnB,4BAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKA,OAAL,GAAeC,EAAED,OAAF,CAAf;AACA,SAAKE,QAAL,GAAgB,KAAKF,OAAL,CAAaG,IAAb,CAAkB,UAAlB,CAAhB;AACA,QAAI,KAAKD,QAAL,KAAkBE,SAAtB,EAAiC;AAC/B,YAAMC,MAAM,6BAAN,CAAN;AACD;;AAED,SAAKC,QAAL,GAAgB;AACdC,gBAAU;AADI,KAAhB;;AAIA,SAAKC,qBAAL;AACD;;;;4CAEsB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAAKC,oCAAL;AACA,aAAO,IAAP;AACD;;;2DAEqC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAO,IAAP;AACD;;AAED;;;;yBACKC,K,EAAOP,I,EAAM;AAAA;;AAChB,aAAO,IAAIQ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCZ,UAAEa,IAAF,CAAO,MAAKZ,QAAZ,EAAsB,EAACa,WAAWL,KAAZ,EAAmBP,MAAMA,IAAzB,EAAtB,EACCa,IADD,CACM,UAACC,QAAD,EAAc;AAClBC,iBAAOC,OAAP,CAAe;AACbC,qBAAS,aADI;AAEbC,mBAAO,GAFM;AAGblB,kBAAM,EAAEO,OAAOO,SAASP,KAAlB,EAAyBP,MAAMc,SAASd,IAAxC;AAHO,WAAf;AAKAS,kBAAQK,QAAR;AACD,SARD,EASCK,IATD,CASM,UAACC,KAAD,EAAW;AACfV,iBAAOU,KAAP;AACD,SAXD;AAYD,OAbM,CAAP;AAcD;;AAED;;;;4BACQb,K,EAAOc,Q,EAAU;AACvB,WAAKlB,QAAL,CAAcC,QAAd,CAAuBG,KAAvB,IAAgC,KAAKJ,QAAL,CAAcC,QAAd,CAAuBG,KAAvB,KAAiC,EAAjE;AACA,WAAKJ,QAAL,CAAcC,QAAd,CAAuBG,KAAvB,EAA8Be,IAA9B,CAAmCD,QAAnC;AACD;;;;;;kBAvFkBzB,gB","file":"task-event-emitter.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["// import postal from 'postal';\n// import 'postal.federation/lib/postal.federation.min.js';\n// import 'postal.xframe/lib/postal.xframe.min.js';\n\nexport default class TaskEventEmitter {\n  constructor(element) {\n    this.element = $(element);\n    this.eventUrl = this.element.data('eventUrl');\n    if (this.eventUrl === undefined) {\n      throw Error('task event url is undefined');\n    }\n\n    this.eventMap = {\n      receives: {}\n    };\n\n    this._registerIframeEvents();\n  }\n\n  _registerIframeEvents(){\n    // postal.instanceId('task');\n\n    // postal.fedx.addFilter([\n    //   {\n    //     channel: 'activity-events', //接收 activity iframe的事件\n    //     topic: '#',\n    //     direction: 'in'\n    //   },\n    //   {\n    //     channel: 'task-events',  // 发送事件到activity iframe\n    //     topic: '#',\n    //     direction: 'out'\n    //   }\n    // ]);\n\n    this._registerReceiveActivityIframeEvents();\n    return this;\n  }\n\n  _registerReceiveActivityIframeEvents(){\n    // postal.subscribe({\n    //   channel: 'activity-events',\n    //   topic: '#',\n    //   callback: ({event, data}) => {\n    //     let listeners = this.eventMap.receives[event];\n    //     $.post(this.eventUrl, {eventName: event, data: data})\n    //         .done(response => {\n    //           if (typeof listeners !== 'undefined') {\n    //             listeners.forEach(callback => callback(response));\n    //           }\n    //           postal.publish({\n    //             channel: 'task-events',\n    //             topic: '#',\n    //             data: response\n    //           });\n    //         })\n    //         .fail((error) => {\n    //           postal.publish({\n    //             channel: 'task-events',\n    //             topic: '#',\n    //             data: { event: event, error: error }\n    //           });\n    //         });\n    //   }\n    // });\n\n    return this;\n  }\n\n  //发送事件到activity\n  emit(event, data) {\n    return new Promise((resolve, reject) => {\n      $.post(this.eventUrl, {eventName: event, data: data})\n      .done((response) => {\n        postal.publish({\n          channel: 'task-events',\n          topic: '#',\n          data: { event: response.event, data: response.data }\n        });\n        resolve(response);\n      })\n      .fail((error) => {\n        reject(error);\n      });\n    });\n  }\n\n  // 监听activity的事件\n  receive(event, callback) {\n    this.eventMap.receives[event] = this.eventMap.receives[event] || [];\n    this.eventMap.receives[event].push(callback);\n  }\n}\n"]}