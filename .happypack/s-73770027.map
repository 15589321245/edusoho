{"version":3,"sources":["app/Resources/static-src/common/es-webuploader.js"],"names":["EsWebUploader","option","self","config","Object","assign","fileSizeLimit","type","fileInput","title","formData","accept","extensions","mimeTypes","uploader","fileVal","element","$","onFileQueued","onUploadSuccess","ele","create","swf","server","app","uploadUrl","pick","id","attr","multiple","extend","token","data","_csrf_token","auto","fileNumLimit","on","file","console","log","response"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEMA,a;AACJ,yBAAYC,MAAZ,EAAoB;AAAA;;AAClB,QAAIC,OAAO,IAAX;AACA,QAAIC,SAASC,OAAOC,MAAP,CAAc,EAAd,EAAkB;AAC7BC,qBAAe,IAAI,IAAJ,GAAW,IADG;AAE7BC,YAAM,EAFuB;AAG7BC,iBAAW,EAHkB;AAI7BC,aAAO,IAJsB;AAK7BC,gBAAU,EALmB;AAM7BC,cAAQ;AACNF,eAAO,QADD;AAENG,oBAAY,sBAFN;AAGNC,mBAAW;AAHL,OANqB;AAW7BC,gBAAU,IAXmB;AAY7BC,eAAS,MAZoB;AAa7BC,eAASC,EAAEhB,OAAOe,OAAT;AAboB,KAAlB,EAcVf,MAdU,CAAb;;AAgBA,SAAKiB,YAAL,GAAoBf,OAAOe,YAAP,IAAuB,KAAKA,YAAhD;AACA,SAAKC,eAAL,GAAuBhB,OAAOgB,eAAP,IAA0B,KAAKA,eAAtD;;AAEA,QAAIC,MAAMH,EAAEd,OAAOa,OAAT,CAAV;AACA,QAAIF,WAAW,sBAAYO,MAAZ,CAAmB;AAChCC,6BADgC;AAEhCC,cAAQC,IAAIC,SAFoB,EAET;AACvBC,YAAM;AACJC,YAAI,MAAMP,IAAIQ,IAAJ,CAAS,IAAT,CADN;AAEJC,kBAAU;AAFN,OAH0B;AAOhCnB,gBAAUO,EAAEa,MAAF,CAAS3B,OAAOO,QAAhB,EAA0B;AAClCqB,eAAOX,IAAIY,IAAJ,CAAS,aAAT,CAD2B;AAElCC,qBAAahB,EAAE,uBAAF,EAA2BW,IAA3B,CAAgC,SAAhC;AAFqB,OAA1B,CAPsB;AAWhCjB,cAAQR,OAAOQ,MAXiB;AAYhCuB,YAAM,IAZ0B;AAahCC,oBAAc,CAbkB;AAchC7B,qBAAeH,OAAOG;AAdU,KAAnB,CAAf;;AAiBAQ,aAASsB,EAAT,CAAY,YAAZ,EAA0B,UAASC,IAAT,EAAe;AACvCC,cAAQC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;AACAnC,WAAKgB,YAAL,CAAkBmB,IAAlB;AACD,KAHD;;AAKAvB,aAASsB,EAAT,CAAY,eAAZ,EAA6B,UAASC,IAAT,EAAeG,QAAf,EAAyB;AACpDF,cAAQC,GAAR,CAAY,iBAAZ,EAA+BF,IAA/B,EAAqCG,QAArC;AACAtC,WAAKiB,eAAL,CAAqBkB,IAArB,EAA2BG,QAA3B;AACD,KAHD;AAIA1B,aAASsB,EAAT,CAAY,aAAZ,EAA2B,UAASC,IAAT,EAAeG,QAAf,EAAyB;AAClDF,cAAQC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B,EAAoCG,QAApC;AACA,4BAAO,OAAP,EAAgB,WAAhB;AACD,KAHD;;AAKA1B,aAASsB,EAAT,CAAY,OAAZ,EAAqB,UAAS7B,IAAT,EAAe;AAClC+B,cAAQC,GAAR,CAAY,UAAZ,EAAwBhC,IAAxB;AACA,cAAQA,IAAR;AACE,aAAK,qBAAL;AACE,gCAAO,OAAP,EAAgB,gBAAhB;AACA;AACF,aAAK,oBAAL;AACE,gCAAO,OAAP,EAAgB,YAAhB;AACA;AACF,aAAK,eAAL;AACE,gCAAO,OAAP,EAAgB,SAAhB;AACA;AACF;AACE;AAXJ;AAaD,KAfD;AAgBD;;;;iCAEY8B,I,EAAM;AACjB;AACD;;;oCAEeA,I,EAAMG,Q,EAAU;AAC9B;AACD;;;;;;kBAGYxC,a","file":"es-webuploader.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import notify from 'common/notify';\nimport WebUploader from './fex-webuploader/webuploader.js';\nimport SWF_PATH from './fex-webuploader/Uploader.swf';\n\nclass EsWebUploader {\n  constructor(option) {\n    let self = this;\n    let config = Object.assign({}, {\n      fileSizeLimit: 2 * 1024 * 1024,\n      type: '',\n      fileInput: '',\n      title: '上传',\n      formData: {},\n      accept: {\n        title: 'Images',\n        extensions: 'gif,jpg,jpeg,png,ico',\n        mimeTypes: 'image/png,image/jpg,image/jpeg,imge/bmp,image/gif'\n      },\n      uploader: null,\n      fileVal: 'file',\n      element: $(option.element)\n    }, option);\n\n    this.onFileQueued = config.onFileQueued || this.onFileQueued;\n    this.onUploadSuccess = config.onUploadSuccess || this.onUploadSuccess;\n\n    let ele = $(config.element);\n    let uploader = WebUploader.create({\n      swf: SWF_PATH,\n      server: app.uploadUrl, // 配置参见script_boot.html.twig\n      pick: {\n        id: '#' + ele.attr(\"id\"),\n        multiple: false\n      },\n      formData: $.extend(config.formData, {\n        token: ele.data(\"uploadToken\"),\n        _csrf_token: $('meta[name=csrf-token]').attr('content')\n      }),\n      accept: config.accept,\n      auto: true,\n      fileNumLimit: 1,\n      fileSizeLimit: config.fileSizeLimit\n    });\n\n    uploader.on('fileQueued', function(file) {\n      console.log('fileQueued :', file);\n      self.onFileQueued(file);\n    });\n\n    uploader.on('uploadSuccess', function(file, response) {\n      console.log('uploadSuccess: ', file, response);\n      self.onUploadSuccess(file, response);\n    });\n    uploader.on('uploadError', function(file, response) {\n      console.log('uploadError : ', file, response);\n      notify('error', '上传失败，请重试！');\n    });\n\n    uploader.on('error', function(type) {\n      console.log('error : ', type);\n      switch (type) {\n        case \"Q_EXCEED_SIZE_LIMIT\":\n          notify('error', '文件过大，请上传较小的文件！');\n          break;\n        case \"Q_EXCEED_NUM_LIMIT\":\n          notify('error', '添加的文件数量过多！');\n          break;\n        case \"Q_TYPE_DENIED\":\n          notify('error', '文件类型错误！');\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  onFileQueued(file) {\n    //override it if you need\n  }\n\n  onUploadSuccess(file, response) {\n    //override it if you need\n  }\n}\n\nexport default EsWebUploader;\n"]}