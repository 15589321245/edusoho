{"version":3,"sources":["webpack:///./app/Resources/static-src/app/js/settings/profile-avatar-crop-modal/cover-crop.js","webpack:///./app/Resources/static-src/app/js/settings/profile-avatar-crop-modal/index.js"],"names":["CoverCrop","props","avatarCrop","saveBtn","$uploadInput","$","init","imageInit","imageCrop","initEvent","on","event","stopPropagation","$this","currentTarget","console","log","crop","imgs","large","medium","small","post","button","sourceImg","attr","data","remove","element","cropedWidth","cropedHeight","group","afterCrop","res","trigger"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;;;KAEMA,S;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AACjB,UAAKC,UAAL,GAAkBD,MAAMC,UAAxB;AACA,UAAKC,OAAL,GAAeF,MAAME,OAArB;AACA,UAAKC,YAAL,GAAoBC,EAAE,yBAAF,CAApB;AACA,UAAKC,IAAL;AACD;;;;4BAEM;AACL,YAAKC,SAAL;AACA,WAAIC,YAAY,KAAKA,SAAL,EAAhB;AACA,YAAKC,SAAL,CAAeD,SAAf;AACD;;;+BAESA,S,EAAW;AACnBH,SAAE,KAAKF,OAAP,EAAgBO,EAAhB,CAAmB,OAAnB,EAA4B,UAACC,KAAD,EAAW;AACrCA,eAAMC,eAAN;AACA,aAAMC,QAAQR,EAAEM,MAAMG,aAAR,CAAd;AACAC,iBAAQC,GAAR,CAAY,YAAZ;AACAR,mBAAUS,IAAV,CAAe;AACbC,iBAAM;AACJC,oBAAO,CAAC,GAAD,EAAM,GAAN,CADH;AAEJC,qBAAQ,CAAC,GAAD,EAAM,GAAN,CAFJ;AAGJC,oBAAO,CAAC,EAAD,EAAK,EAAL;AAHH,YADO;AAMbC,iBAAM;AANO,UAAf;;AASAT,eAAMU,MAAN,CAAa,SAAb;AACD,QAdD;AAeD;;;iCAEW;AACV,WAAIC,YAAYnB,EAAE,2BAAF,CAAhB;;AAEAA,SAAE,KAAKH,UAAP,EAAmBuB,IAAnB,CAAwB;AACtB,gBAAOD,UAAUC,IAAV,CAAe,KAAf,CADe;AAEtB,kBAASD,UAAUC,IAAV,CAAe,OAAf,CAFa;AAGtB,mBAAUD,UAAUC,IAAV,CAAe,QAAf,CAHY;AAItB,+BAAsBD,UAAUE,IAAV,CAAe,eAAf,CAJA;AAKtB,gCAAuBF,UAAUE,IAAV,CAAe,gBAAf;AALD,QAAxB;;AAQAF,iBAAUG,MAAV;AACD;;;iCAEW;AAAA;;AACVZ,eAAQC,GAAR,CAAY,MAAZ;AACA,WAAIR,YAAY,0BAAgB;AAC9BoB,kBAAS,KAAK1B,UADgB;AAE9B2B,sBAAa,GAFiB;AAG9BC,uBAAc,GAHgB;AAI9BC,gBAAO;AAJuB,QAAhB,CAAhB;;AAOAvB,iBAAUwB,SAAV,GAAsB,UAACC,GAAD,EAAS;AAC7B,eAAK7B,YAAL,CAAkB8B,OAAlB,CAA0B,cAA1B,EAA0CD,GAA1C;AACD,QAFD;;AAIA,cAAOzB,SAAP;AACD;;;;;;mBAGYR,S;;;;;;;;;ACjEf;;;;;;AAEA,yBAAc;AACZE,eAAY,cADA;AAEZC,YAAS;AAFG,EAAd,E","file":"app/js/settings/profile-avatar-crop-modal/index.js","sourcesContent":["import EsImageCrop from 'common/es-image-crop';\n\nclass CoverCrop {\n  constructor(props) {\n    this.avatarCrop = props.avatarCrop;\n    this.saveBtn = props.saveBtn;\n    this.$uploadInput = $('.js-upload-image.active')\n    this.init();\n  }\n\n  init() {\n    this.imageInit();\n    let imageCrop = this.imageCrop();\n    this.initEvent(imageCrop);\n  }\n\n  initEvent(imageCrop) {\n    $(this.saveBtn).on('click', (event) => {\n      event.stopPropagation();\n      const $this = $(event.currentTarget);\n      console.log('start crop')\n      imageCrop.crop({\n        imgs: {\n          large: [200, 200],\n          medium: [120, 120],\n          small: [48, 48]\n        },\n        post: false\n      });\n\n      $this.button('loading');\n    });\n  }\n\n  imageInit() {\n    let sourceImg = $('.upload-source-img.active');\n\n    $(this.avatarCrop).attr({\n      'src': sourceImg.attr('src'),\n      'width': sourceImg.attr('width'),\n      'height': sourceImg.attr('height'),\n      'data-natural-width': sourceImg.data('natural-width'),\n      'data-natural-height': sourceImg.data('natural-height')\n    });\n\n    sourceImg.remove();\n  }\n\n  imageCrop() {\n    console.log('init')\n    let imageCrop = new EsImageCrop({\n      element: this.avatarCrop,\n      cropedWidth: 200,\n      cropedHeight: 200,\n      group: 'user'\n    });\n\n    imageCrop.afterCrop = (res) => {\n      this.$uploadInput.trigger('upload-image', res);\n    }\n\n    return imageCrop;\n  }\n}\n\nexport default CoverCrop;\n\n\n// WEBPACK FOOTER //\n// ./app/Resources/static-src/app/js/settings/profile-avatar-crop-modal/cover-crop.js","import CoverCrop from  './cover-crop';\n\nnew CoverCrop({\n  avatarCrop: '#avatar-crop',\n  saveBtn: '#save-btn'\n})\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/Resources/static-src/app/js/settings/profile-avatar-crop-modal/index.js"],"sourceRoot":""}