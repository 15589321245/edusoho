{"version":3,"sources":["node_modules/.1.2.7@core-js/modules/$.iter-define.js"],"names":["LIBRARY","require","$export","redefine","hide","has","Iterators","$iterCreate","setToStringTag","getProto","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","values","entries","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","methods","key","IteratorPrototype","call","name","P","F"],"mappings":"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","file":"$.iter-define.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["'use strict';\nvar LIBRARY        = require('./$.library')\n  , $export        = require('./$.export')\n  , redefine       = require('./$.redefine')\n  , hide           = require('./$.hide')\n  , has            = require('./$.has')\n  , Iterators      = require('./$.iterators')\n  , $iterCreate    = require('./$.iter-create')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , getProto       = require('./$').getProto\n  , ITERATOR       = require('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};"]}