"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _componentEmitter = require("component-emitter");

var _componentEmitter2 = _interopRequireDefault(_componentEmitter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// import Emitter from "es6-event-emitter";

var EsEmitter = function (_Emitter) {
  _inherits(EsEmitter, _Emitter);

  function EsEmitter() {
    _classCallCheck(this, EsEmitter);

    return _possibleConstructorReturn(this, (EsEmitter.__proto__ || Object.getPrototypeOf(EsEmitter)).call(this));
  }

  _createClass(EsEmitter, [{
    key: "delay",
    value: function delay(event, cb, time) {
      console.log('delay delay');
      time = time || 0;

      var delayCb = function delayCb() {
        var args = arguments;
        setTimeout(function () {
          cb.apply(self, [].concat(_toConsumableArray(args)));
        }, time);
      };

      return this.on(event, delayCb);
    }
  }, {
    key: "once",
    value: function once(event, cb) {
      var self = this;
      var onceCb = function onceCb() {
        cb.apply(self, [].concat(Array.prototype.slice.call(arguments)));
        self.off(event, onceCb);
      };
      return this.on(event, onceCb);
    }
  }]);

  return EsEmitter;
}(_componentEmitter2.default);

exports.default = EsEmitter;