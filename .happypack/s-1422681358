'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

require('select2');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Base = function () {
  function Base() {
    _classCallCheck(this, Base);

    this.init();
  }

  _createClass(Base, [{
    key: 'init',
    value: function init() {
      var $form = $('#courseset-form');
      var validator = $form.validate({
        onkeyup: false,
        rules: {
          title: {
            required: {
              depends: function depends() {
                $(this).val($.trim($(this).val()));
                return true;
              }
            },
            open_live_course_title: true
          },
          subtitle: {
            required: {
              depends: function depends() {
                $(this).val($.trim($(this).val()));
                return false;
              }
            }
          }
        },
        messages: {
          title: "请输入有效的课程标题（直播公开课标题暂不支持<、>、\"、&、‘、’、”、“字符）"
        }
      });

      $.validator.addMethod("open_live_course_title", function (value, element, params) {
        if ($('#courseSetType').val() === 'liveOpen' && !/^[^(<|>|'|"|&|‘|’|”|“)]*$/.test(value)) {
          return false;
        } else {
          return true;
        }
      }, Translator.trans('直播公开课标题暂不支持<、>、\"、&、‘、’、”、“字符'));

      $('#courseset-base-submit').click(function (event) {
        if (validator.form()) {
          $(event.currentTarget).button('loading');
          $form.submit();
        }
      });
    }
  }, {
    key: 'initSelect2',
    value: function initSelect2() {
      var _$$select;

      $('#tags').select2((_$$select = {
        ajax: {
          url: '/tag/match_jsonp#',
          dataType: 'json',
          quietMillis: 100,
          data: function data(term, page) {
            return {
              q: term,
              page_limit: 10
            };
          },
          results: function results(data) {
            var results = [];
            $.each(data, function (index, item) {
              results.push({
                id: item.name,
                name: item.name
              });
            });
            return {
              results: results
            };
          }
        },
        initSelection: function initSelection(element, callback) {
          var data = [];
          $(element.val().split(",")).each(function () {
            data.push({
              id: this,
              name: this
            });
          });
          callback(data);
        },
        formatSelection: function formatSelection(item) {
          return item.name;
        },
        formatResult: function formatResult(item) {
          return item.name;
        },
        formatSearching: '搜索中...',
        width: 'off',
        multiple: true,
        maximumSelectionSize: 20,
        placeholder: Translator.trans('请输入标签')
      }, _defineProperty(_$$select, 'width', 'off'), _defineProperty(_$$select, 'multiple', true), _defineProperty(_$$select, 'createSearchChoice', function createSearchChoice() {
        return null;
      }), _defineProperty(_$$select, 'maximumSelectionSize', 20), _$$select));
    }
  }]);

  return Base;
}();

new Base();