{"version":3,"sources":["app/Resources/static-src/libs/js/es-webuploader.js"],"names":["EsWebUploader","config","self","$","extend","fileSizeLimit","type","fileInput","title","formData","accept","extensions","mimeTypes","uploader","fileVal","element","onFileQueued","onUploadSuccess","ele","create","runtimeOrder","swf","server","app","uploadUrl","pick","id","attr","multiple","token","data","auto","fileNumLimit","on","file","console","log","response"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEMA,a;AAEH,wBAAYC,MAAZ,EAAoB;AAAA;;AACnB,MAAIC,OAAO,IAAX;AACAD,WAASE,EAAEC,MAAF,CAAS;AACnBC,kBAAe,IAAE,IAAF,GAAO,IADH;AAEbC,SAAM,EAFO;AAGbC,cAAW,EAHE;AAIbC,UAAO,IAJM;AAKbC,aAAU,EALG;AAMbC,WAAQ;AACJF,WAAO,QADH;AAEJG,gBAAY,sBAFR;AAGJC,eAAW;AAHP,IANK;AAWbC,aAAU,IAXG;AAYbC,YAAS,MAZI;AAabC,YAASZ,EAAEF,OAAOc,OAAT;AAbI,GAAT,EAcNd,MAdM,CAAT;;AAgBA,OAAKe,YAAL,GAAoBf,OAAOe,YAAP,IAAuB,KAAKA,YAAhD;AACA,OAAKC,eAAL,GAAuBhB,OAAOgB,eAAP,IAA0B,KAAKA,eAAtD;;AAEA,MAAIC,MAAMf,EAAEF,OAAOc,OAAT,CAAV;AACA,MAAIF,WAAW,sBAAYM,MAAZ,CAAmB;AAC9BC,iBAAc,OADgB;AAEjCC,0BAFiC;AAGjCC,WAAQC,IAAIC,SAHqB,EAGV;AACvBC,SAAM;AACLC,QAAI,MAAMR,IAAIS,IAAJ,CAAS,IAAT,CADL;AAELC,cAAU;AAFL,IAJ2B;AAQjCnB,aAAUN,EAAEC,MAAF,CAASH,OAAOQ,QAAhB,EAA0B;AACnCoB,WAAOX,IAAIY,IAAJ,CAAS,aAAT,CAD4B;AAEnC,mBAAe3B,EAAE,uBAAF,EAA2BwB,IAA3B,CAAgC,SAAhC;AAFoB,IAA1B,CARuB;AAYjCjB,WAAQT,OAAOS,MAZkB;AAajCqB,SAAM,IAb2B;AAcjCC,iBAAc,CAdmB;AAejC3B,kBAAeJ,OAAOI;AAfW,GAAnB,CAAf;AAiBAQ,WAASoB,EAAT,CAAa,YAAb,EAA2B,UAAUC,IAAV,EAAiB;AAC3CC,WAAQC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;AACChC,QAAKc,YAAL,CAAkBkB,IAAlB;AACA,GAHF;;AAKCrB,WAASoB,EAAT,CAAa,eAAb,EAA8B,UAAUC,IAAV,EAAgBG,QAAhB,EAA2B;AACxDF,WAAQC,GAAR,CAAY,iBAAZ,EAA+BF,IAA/B,EAAqCG,QAArC;AACGnC,QAAKe,eAAL,CAAqBiB,IAArB,EAA2BG,QAA3B;AACH,GAHD;AAIDxB,WAASoB,EAAT,CAAa,aAAb,EAA4B,UAAUC,IAAV,EAAgBG,QAAhB,EAA2B;AACtDF,WAAQC,GAAR,CAAY,gBAAZ,EAA8BF,IAA9B,EAAoCG,QAApC;AACI,yBAAO,OAAP,EAAgB,WAAhB;AACH,GAHF;;AAKCxB,WAASoB,EAAT,CAAY,OAAZ,EAAqB,UAAS3B,IAAT,EAAc;AAClC6B,WAAQC,GAAR,CAAY,UAAZ,EAAwB9B,IAAxB;AACA,WAAOA,IAAP;AACC,SAAK,qBAAL;AACC,2BAAO,OAAP,EAAgB,gBAAhB;AACA;AACD,SAAK,oBAAL;AACC,2BAAO,OAAP,EAAgB,YAAhB;AACA;AACD,SAAK,eAAL;AACC,2BAAO,OAAP,EAAgB,SAAhB;AACA;AATF;AAWA,GAbD;AAcD;;;;+BAEY4B,I,EAAM;AAClB;AACA;;;kCAEeA,I,EAAMG,Q,EAAS;AAC9B;AACA;;;;;;kBAGWrC,a","file":"es-webuploader.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import WebUploader from './fex-webuploader/webuploader.js';\nimport SWF_PATH from './fex-webuploader/Uploader.swf';\nimport notify from 'common/notify';\n\nclass EsWebUploader\n{\n  \tconstructor(config) {\n  \t\tlet self = this;\n  \t\tconfig = $.extend({\n\t\t\tfileSizeLimit: 2*1024*1024,\n\t        type: '',\n\t        fileInput: '',\n\t        title: '上传',\n\t        formData: {},\n\t        accept: {\n\t            title: 'Images',\n\t            extensions: 'gif,jpg,jpeg,png,ico',\n\t            mimeTypes: 'image/png,image/jpg,image/jpeg,imge/bmp,image/gif'\n\t        },\n\t        uploader: null,\n\t        fileVal: 'file',\n\t        element: $(config.element)\n\t  \t}, config);\n\n\t  \tthis.onFileQueued = config.onFileQueued || this.onFileQueued;\n\t  \tthis.onUploadSuccess = config.onUploadSuccess || this.onUploadSuccess;\n\n\t  \tlet ele = $(config.element);\n\t  \tlet uploader = WebUploader.create({\n        runtimeOrder: 'flash',\n\t  \t\tswf: SWF_PATH,\n\t  \t\tserver: app.uploadUrl, // 配置参见script_boot.html.twig\n\t  \t\tpick: {\n\t  \t\t\tid: '#' + ele.attr(\"id\"),\n\t  \t\t\tmultiple: false\n\t  \t\t},\n\t  \t\tformData: $.extend(config.formData, {\n\t  \t\t\ttoken: ele.data(\"uploadToken\"),\n\t  \t\t\t'_csrf_token': $('meta[name=csrf-token]').attr('content')\n\t  \t\t}),\n\t  \t\taccept: config.accept,\n\t  \t\tauto: true,\n\t  \t\tfileNumLimit: 1,\n\t  \t\tfileSizeLimit: config.fileSizeLimit\n\t  \t});\n\t  \tuploader.on( 'fileQueued', function( file ) {\n\t  \t\tconsole.log('fileQueued :', file);\n\t\t    self.onFileQueued(file);\n\t    });\n\n\t    uploader.on( 'uploadSuccess', function( file, response ) {\n\t    \tconsole.log('uploadSuccess: ', file, response);\n\t        self.onUploadSuccess(file, response);\n\t    });\n\t  \tuploader.on( 'uploadError', function( file, response ) {\n\t  \t\tconsole.log('uploadError : ', file, response);\n\t        notify('error', '上传失败，请重试！'); \n\t    });\n\n\t    uploader.on('error', function(type){\n\t    \tconsole.log('error : ', type);\n\t    \tswitch(type) {\n\t\t    \tcase \"Q_EXCEED_SIZE_LIMIT\":\n\t\t    \t\tnotify('error', '文件过大，请上传较小的文件！');\n\t\t    \t\tbreak;\n\t    \t\tcase \"Q_EXCEED_NUM_LIMIT\":\n\t    \t\t\tnotify('error', '添加的文件数量过多！');\n\t\t    \t\tbreak;\n\t\t    \tcase \"Q_TYPE_DENIED\":\n\t    \t\t\tnotify('error', '文件类型错误！');\n\t\t    \t\tbreak;\n\t    \t}\n\t    });\n  \t}\n\n  \tonFileQueued(file) {\n  \t\t//override it if you need\n  \t}\n\n  \tonUploadSuccess(file, response){\n  \t\t//override it if you need\n  \t}\n}\n\nexport default EsWebUploader;"]}