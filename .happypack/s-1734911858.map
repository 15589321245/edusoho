{"version":3,"sources":["app/Resources/static-src/app/common/component/question-operate/index.js"],"names":["QuestionOperate","$form","$modal","initEvent","on","deleteQuestion","event","replaceQuestion","previewQuestion","batchDelete","initSortList","find","sortable","containerPath","containerSelector","itemSelector","placeholder","exclude","onDrop","item","container","_super","hasClass","$tbody","parents","each","$tr","$","data","detach","insertAfter","refreshSeqs","$target","currentTarget","excludeIds","push","val","modal","get","join","type","html","stopPropagation","id","closest","remove","length","$redmin","self","index","questionId","preventDefault","window","open","seq"],"mappings":"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","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import notify from 'common/notify';\nimport { questionSubjectiveRemask } from '../question-subjective'\n\nexport default class QuestionOperate {\n  constructor($form, $modal) {\n    this.$form = $form;\n    this.$modal = $modal;\n    this.initEvent();\n  }\n\n  initEvent() { \n    this.$form.on('click','[data-role=\"item-delete-btn\"]',event=>this.deleteQuestion(event));\n    this.$form.on('click','[data-role=\"replace-item\"]',event=>this.replaceQuestion(event));\n    this.$form.on('click','[data-role=\"preview-btn\"]',event=>this.previewQuestion(event));\n    this.$form.on('click','[data-role=\"batch-delete-btn\"]',event=>this.batchDelete(event));\n    this.initSortList();\n  }\n\n  initSortList() {\n    this.$form.find('tbody').sortable({\n      containerPath: '> tr',\n      containerSelector:'tbody',\n      itemSelector: 'tr.is-question',\n      placeholder: '<tr class=\"placeholder\"/>',\n      exclude: '.notMoveHandle',\n      onDrop: (item, container, _super) => {\n        _super(item, container);\n        if (item.hasClass('have-sub-questions')) {\n            let $tbody = item.parents('tbody');\n            $tbody.find('tr.is-question').each(function() {\n                let $tr = $(this);\n                $tbody.find('[data-parent-id=' + $tr.data('id') + ']').detach().insertAfter($tr);\n            });\n        }\n        this.refreshSeqs();\n      }\n    });\n  }\n\n  replaceQuestion(event) {\n    let $target = $(event.currentTarget);\n    let excludeIds = [];\n    let $tbody = this.$form.find(\"tbody:visible\");\n\n    $tbody.find('[name=\"questionIds[]\"]').each(function(){\n      excludeIds.push($(this).val());\n    })\n\n    this.$modal.data('manager', this).modal();\n    $.get($target.data('url'), {excludeIds: excludeIds.join(','), type: $tbody.data('type')}, html => {\n      this.$modal.html(html);\n    });\n  }\n\n  deleteQuestion(event) {\n    event.stopPropagation();\n    let $target = $(event.currentTarget);\n    let id = $target.closest('tr').data('id');\n    let $tbody =  $target.closest('tbody');\n    $tbody.find('[data-parent-id=\"'+id+'\"]').remove();\n    $target.closest('tr').remove();\n    questionSubjectiveRemask(this.$form);\n    this.refreshSeqs();\n  }\n\n  batchDelete(event) {\n    if (this.$form.find('[data-role=\"batch-item\"]:checked').length == 0) {\n\n      let $redmin\n      notify('danger', '请选择题目');\n      \n    }\n    let self = this;\n\n    this.$form.find('[data-role=\"batch-item\"]:checked').each(function(index,item){\n      let questionId = $(this).val();\n\n      if ($(this).closest('tr').data('type') == 'material') {\n        self.$form.find('[data-parent-id=\"'+questionId+'\"]').remove();\n      }\n      $(this).closest('tr').remove();\n      \n    })\n    questionSubjectiveRemask(this.$form);\n  }\n\n  previewQuestion(event) {\n    event.preventDefault();\n    window.open($(event.currentTarget).data('url'), '_blank', \"directories=0,height=580,width=820,scrollbars=1,toolbar=0,status=0,menubar=0,location=0\");\n  }\n\n  refreshSeqs() {\n    let seq = 1;\n    this.$form.find(\"tbody tr\").each(function(){\n      let $tr = $(this);\n                  \n      if (!$tr.hasClass('have-sub-questions')) { \n        $tr.find('td.seq').html(seq);\n        seq ++;\n      }\n    });  \n\n    this.$form.find('[name=\"questionLength\"]').val((seq - 1) > 0 ? (seq - 1 ) : null );       \n  }\n}"]}