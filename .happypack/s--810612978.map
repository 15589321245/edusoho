{"version":3,"sources":["app/Resources/static-src/app/js/activity-manage/exercise/index.js"],"names":["Exercise","$form","$element","validator2","_setValidateRule","_init","_initEvent","_inItStep2form","$step2_form","$","validate","rules","title","required","maxlength","trim","itemCount","positiveInteger","min","max","range","difficulty","remote","url","data","type","dataType","async","val","courseId","length","lessonId","JSON","stringify","types","each","push","messages","$step3_form","validator","onkeyup","finishCondition","addMethod","value","element","optional","test","format","click","form","change","checkQuestionNum","post","text","attr","i","n","questionNum","closest","find"],"mappings":"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","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import SelectLinkage from 'app/js/question-manage/widget/select-linkage.js';\n\nclass Exercise {\n  constructor($form) {\n    this.$element = $form;\n    this.validator2 = null;\n    this._setValidateRule();\n    this._init();\n    this._initEvent();\n  }\n\n  _init() {\n    this._inItStep2form();\n  }\n\n  _initEvent() {\n  }\n\n  _inItStep2form() {\n    let $step2_form = $(\"#step2-form\");\n\n    this.validator2 = $step2_form.validate({\n      rules: {\n        title: {\n          required: true,\n          maxlength: 50,\n          trim: true,\n        },\n        itemCount: {\n          required: true,\n          positiveInteger: true,\n          min: 1,\n          max: 9999\n        },\n        range: {\n          required: true,\n        },\n        difficulty: {\n          required: true\n        },\n        'questionTypes[]': {\n          required: true,\n          remote: {\n            url: $('[name=\"checkQuestion\"]').data('checkUrl'),\n            type: \"post\",\n            dataType: \"json\",\n            async: false,\n            data: {\n              itemCount: function () {\n                return $('[name=\"itemCount\"]').val();\n              },\n              range: function () {\n                let range = {}\n                let courseId = $('[name=\"range[courseId]\"]').val();\n                range.courseId = courseId;\n                if ($('[name=\"range[lessonId]\"]').length > 0) {\n                  let lessonId = $('[name=\"range[lessonId]\"]').val();\n                  range.lessonId = lessonId;\n                }\n\n                return JSON.stringify(range);\n              },\n              difficulty: function () {\n                return $('[name=\"difficulty\"]').val();\n              },\n              types: function () {\n                let types = [];\n                $('[name=\"questionTypes\\[\\]\"]:checked').each(function () {\n                  types.push($(this).val());\n                });\n                return types;\n              }\n            }\n          }\n        }\n      },\n      messages: {\n        required: \"请填写标题\",\n        range: \"题目来源\",\n        itemCount: {\n          required: '请填写题目个数',\n          positiveInteger: '请输入正整数',\n          min: '题目个数无效',\n          max: '题目个数过大'\n        },\n        difficulty: \"请选择难易程度\",\n        'questionTypes[]': {\n          required: \"请选择题型\",\n          remote: \"题目数量不足\"\n        },\n      }\n    });\n\n    $step2_form.data('validator', this.validator2);\n  }\n\n  _inItStep3form() {\n    var $step3_form = $(\"#step3-form\");\n    var validator = $step3_form.validate({\n      onkeyup: false,\n      rules: {\n        finishCondition: {\n          required: true,\n        },\n      },\n      messages: {\n        finishCondition: \"请输完成条件\",\n      }\n    });\n    $step3_form.data('validator', validator);\n  }\n\n  _setValidateRule() {\n    $.validator.addMethod(\"positiveInteger\", function (value, element) {\n      return this.optional(element) || /^[1-9]\\d*$/.test(value);\n    }, $.validator.format(\"必须为正整数\"));\n\n  }\n\n  fix() {\n    $('.js-question-type').click( () =>{\n      this.validator2.form();\n    })\n  }\n}\n\nnew Exercise($('#step2-form'));\nnew SelectLinkage($('[name=\"range[courseId]\"]'), $('[name=\"range[lessonId]\"]'));\n\n\n\n$('[name=\"range[courseId]\"]').change(function () {\n  let url = $(this).data('checkNumUrl');\n  checkQuestionNum(url);\n})\n\n$('[name=\"range[lessonId]\"]').change(function () {\n  let url = $(this).data('checkNumUrl');\n  checkQuestionNum(url);\n})\n\n$('[name=\"difficulty\"]').change(function () {\n  let url = $(this).data('checkNumUrl');\n  checkQuestionNum(url);\n})\n\nfunction checkQuestionNum(url) {\n  let courseId = $('[name=\"range[courseId]\"]').val();\n  let lessonId = $('[name=\"range[lessonId]\"]').val();\n  let difficulty = $('[name=\"difficulty\"]').val();\n\n  $.post(url, { courseId: courseId, lessonId: lessonId, difficulty: difficulty }, function (data) {\n    $('[role=\"questionNum\"]').text(0);\n    $('input[type=\"checkbox\"]').attr({ 'disabled': true, 'checked': false });\n\n    $.each(data, function (i, n) {\n      $(\"[type='\" + i + \"']\").text(n.questionNum);\n      $(\"[type='\" + i + \"']\").closest('.js-question-type').find('input[type=\"checkbox\"]').attr('disabled', false);\n    });\n  })\n}\n"]}