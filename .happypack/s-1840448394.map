{"version":3,"sources":["node_modules/.1.2.7@core-js/modules/es6.array.from.js"],"names":["ctx","require","$export","toObject","call","isArrayIter","toLength","getIterFn","S","F","iter","Array","from","arrayLike","O","C","$$","arguments","$$len","length","mapfn","undefined","mapping","index","iterFn","result","step","iterator","next","done","value"],"mappings":"AAAA;;AACA,IAAIA,MAAcC,QAAQ,SAAR,CAAlB;AAAA,IACIC,UAAcD,QAAQ,YAAR,CADlB;AAAA,IAEIE,WAAcF,QAAQ,eAAR,CAFlB;AAAA,IAGIG,OAAcH,QAAQ,eAAR,CAHlB;AAAA,IAIII,cAAcJ,QAAQ,mBAAR,CAJlB;AAAA,IAKIK,WAAcL,QAAQ,eAAR,CALlB;AAAA,IAMIM,YAAcN,QAAQ,4BAAR,CANlB;AAOAC,QAAQA,QAAQM,CAAR,GAAYN,QAAQO,CAAR,GAAY,CAACR,QAAQ,iBAAR,EAA2B,UAASS,IAAT,EAAc;AAAEC,QAAMC,IAAN,CAAWF,IAAX;AAAmB,CAA9D,CAAjC,EAAkG,OAAlG,EAA2G;AACzG;AACAE,QAAM,SAASA,IAAT,CAAcC,SAAd,CAAuB,4CAAvB,EAAoE;AACxE,QAAIC,IAAUX,SAASU,SAAT,CAAd;AAAA,QACIE,IAAU,OAAO,IAAP,IAAe,UAAf,GAA4B,IAA5B,GAAmCJ,KADjD;AAAA,QAEIK,KAAUC,SAFd;AAAA,QAGIC,QAAUF,GAAGG,MAHjB;AAAA,QAIIC,QAAUF,QAAQ,CAAR,GAAYF,GAAG,CAAH,CAAZ,GAAoBK,SAJlC;AAAA,QAKIC,UAAUF,UAAUC,SALxB;AAAA,QAMIE,QAAU,CANd;AAAA,QAOIC,SAAUjB,UAAUO,CAAV,CAPd;AAAA,QAQIK,MARJ;AAAA,QAQYM,MARZ;AAAA,QAQoBC,IARpB;AAAA,QAQ0BC,QAR1B;AASA,QAAGL,OAAH,EAAWF,QAAQpB,IAAIoB,KAAJ,EAAWF,QAAQ,CAAR,GAAYF,GAAG,CAAH,CAAZ,GAAoBK,SAA/B,EAA0C,CAA1C,CAAR;AACX;AACA,QAAGG,UAAUH,SAAV,IAAuB,EAAEN,KAAKJ,KAAL,IAAcN,YAAYmB,MAAZ,CAAhB,CAA1B,EAA+D;AAC7D,WAAIG,WAAWH,OAAOpB,IAAP,CAAYU,CAAZ,CAAX,EAA2BW,SAAS,IAAIV,CAAJ,EAAxC,EAA+C,CAAC,CAACW,OAAOC,SAASC,IAAT,EAAR,EAAyBC,IAAzE,EAA+EN,OAA/E,EAAuF;AACrFE,eAAOF,KAAP,IAAgBD,UAAUlB,KAAKuB,QAAL,EAAeP,KAAf,EAAsB,CAACM,KAAKI,KAAN,EAAaP,KAAb,CAAtB,EAA2C,IAA3C,CAAV,GAA6DG,KAAKI,KAAlF;AACD;AACF,KAJD,MAIO;AACLX,eAASb,SAASQ,EAAEK,MAAX,CAAT;AACA,WAAIM,SAAS,IAAIV,CAAJ,CAAMI,MAAN,CAAb,EAA4BA,SAASI,KAArC,EAA4CA,OAA5C,EAAoD;AAClDE,eAAOF,KAAP,IAAgBD,UAAUF,MAAMN,EAAES,KAAF,CAAN,EAAgBA,KAAhB,CAAV,GAAmCT,EAAES,KAAF,CAAnD;AACD;AACF;AACDE,WAAON,MAAP,GAAgBI,KAAhB;AACA,WAAOE,MAAP;AACD;AA1BwG,CAA3G","file":"es6.array.from.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["'use strict';\nvar ctx         = require('./$.ctx')\n  , $export     = require('./$.export')\n  , toObject    = require('./$.to-object')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\n$export($export.S + $export.F * !require('./$.iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , $$      = arguments\n      , $$len   = $$.length\n      , mapfn   = $$len > 1 ? $$[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        result[index] = mapping ? mapfn(O[index], index) : O[index];\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n"]}