{"version":3,"sources":["app/Resources/static-src/app/js/activity/text/index.js"],"names":["Text","element","$","emitter","receive","data","finishTime","parseInt","learnedTime","emit"],"mappings":";;AAAA;;;;AACA;;;;;;;;;;;;IAEMA,I;;;AACJ,sBAAuB;AAAA,QAAVC,OAAU,QAAVA,OAAU;;AAAA;;AAAA;;AAErB,UAAKA,OAAL,GAAeC,EAAED,OAAF,CAAf;;AAEA,UAAKE,OAAL,GAAe,+BAAf;AACA,UAAKA,OAAL,CAAaC,OAAb,CAAqB,OAArB,EAA8B,UAACC,IAAD,EAAU;AACtC,UAAIC,aAAaC,SAAS,MAAKN,OAAL,CAAaI,IAAb,CAAkB,YAAlB,CAAT,CAAjB;;AAEA,UAAG,CAACC,UAAJ,EAAe;AACb;AACD;;AAED,UAAGD,KAAKG,WAAL,IAAoBF,UAAvB,EAAkC;AAChC,cAAKH,OAAL,CAAaM,IAAb,CAAkB,QAAlB;AACD;AACF,KAVD;AALqB;AAgBtB;;;;;AAKH,IAAIT,IAAJ,CAAS;AACPC,WAAS;AADF,CAAT","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import Emitter from \"common/es-event-emitter\";\nimport ActivityEmitter from \"../activity-emitter\";\n\nclass Text extends Emitter  {\n  constructor({element}) {\n    super();\n    this.element = $(element);\n\n    this.emitter = new ActivityEmitter();\n    this.emitter.receive('doing', (data) => {\n      let finishTime = parseInt(this.element.data('finishTime'));\n\n      if(!finishTime){\n        return;\n      }\n\n      if(data.learnedTime >= finishTime){\n        this.emitter.emit('finish');\n      }\n    })\n  }\n\n}\n\n\nnew Text({\n  element: '#text-activity'\n});"]}