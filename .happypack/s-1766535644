'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _activityEmitter = require('../activity-emitter');

var _activityEmitter2 = _interopRequireDefault(_activityEmitter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var LiveShow = function () {
  function LiveShow() {
    _classCallCheck(this, LiveShow);

    this.init();
  }

  _createClass(LiveShow, [{
    key: 'init',
    value: function init() {
      var that = this;
      var activityData = JSON.parse($('#activity-data').text());
      console.log('activityData : ', activityData);
      var liveStartTimeFormat = activityData.startTimeFormat;
      var liveEndTimeFormat = activityData.endTimeFormat;
      var startTime = parseInt(activityData.startTime);
      var endTime = parseInt(activityData.endTime);
      var nowDate = parseInt(activityData.nowDate);
      var summary = $('#activity-summary').text();

      var courseId = activityData.fromCourseId;
      var activityId = activityData.id;
      var replayStatus = activityData.ext.replayStatus || 'ungenerated';

      var $liveNotice = "<p>" + Translator.trans('直播将于%liveStartTime%开始，于%liveEndTime%结束，请在课前10分钟内提早进入。', {
        liveStartTime: '<strong>' + liveStartTimeFormat + '</strong>',
        liveEndTime: '<strong>' + liveEndTimeFormat + '</strong>'
      }) + "</p>";

      var iID = void 0;
      if (iID) {
        clearInterval(iID);
      }

      var intervalSecond = 0;
      this.entry_url = location.protocol + "//" + location.hostname + '/course/' + courseId + '/activity/' + activityId + '/live_entry';

      function generateHtml() {

        nowDate = nowDate + intervalSecond;
        var startLeftSeconds = parseInt(startTime - nowDate);
        var endLeftSeconds = parseInt(endTime - nowDate);
        var days = Math.floor(startLeftSeconds / (60 * 60 * 24));
        var modulo = startLeftSeconds % (60 * 60 * 24);
        var hours = Math.floor(modulo / (60 * 60));
        modulo = modulo % (60 * 60);
        var minutes = Math.floor(modulo / 60);
        var seconds = modulo % 60;
        var $replayGuid = Translator.trans('老师们：');
        $replayGuid += "<br>";

        if (activityData.ext.liveProvider == 1) {
          $replayGuid += "&nbsp;&nbsp;&nbsp;&nbsp;" + Translator.trans('录制直播课程时，需在直播课程间点击');
          $replayGuid += "<span style='color:red'>" + Translator.trans('录制面板') + "</span>";
          $replayGuid += Translator.trans('，录制完成后点击');
          $replayGuid += "<span style='color:red'>" + Translator.trans('暂停') + "</span>";
          $replayGuid += Translator.trans('结束录播，录播结束后在');
          $replayGuid += "<span style='color:red'>" + Translator.trans('录播管理') + "</span>";
          $replayGuid += Translator.trans('界面生成回放。');
          $replayGuid += "<br>";
        } else {
          $replayGuid += "&nbsp;&nbsp;&nbsp;&nbsp;";
          $replayGuid += Translator.trans('直播平台') + "<span style='color:red'>" + Translator.trans('下课后') + "</span>" + Translator.trans('且') + "<span style='color:red'>" + Translator.trans('直播时间') + "</span>" + Translator.trans('结束后，在课时管理的');
          $replayGuid += "<span style='color:red'>" + Translator.trans('录播管理') + "</span>";
          $replayGuid += Translator.trans('点击生成回放。');
          $replayGuid += "<br>";
        }

        $replayGuid = '<div>' + $replayGuid + '</div>';

        var $countDown = that._getCountDown(days, hours, minutes, seconds);

        if (0 < startLeftSeconds && startLeftSeconds < 7200) {
          $liveNotice = "<p>" + Translator.trans('直播将于%liveStartTime%开始，于%liveEndTime%结束，请在课前10分钟内提早进入。', {
            liveStartTime: '<strong>' + liveStartTimeFormat + '</strong>',
            liveEndTime: '<strong>' + liveEndTimeFormat + '</strong>'
          }) + "</p>";
          if (activityData.isTeacher) {
            $countDown = $replayGuid + $countDown;
            $countDown = "<p>" + $countDown + "&nbsp;<a class='btn btn-primary js-start-live' href='javascript:;' onclick='liveShow.entryLiveRoom()'>" + Translator.trans('进入直播教室') + "</a><br><br></p>";
          } else {
            $countDown = "<p>" + $countDown + "&nbsp;<a class='btn btn-primary js-start-live' href='javascript:;' onclick='liveShow.entryLiveRoom()'>" + Translator.trans('进入直播教室') + "</a><br><br></p>";
          }
        }
        ;
        if (startLeftSeconds <= 0) {
          clearInterval(iID);
          $liveNotice = "<p>" + Translator.trans('直播已经开始，直播将于%liveEndTime%结束。', { liveEndTime: '<strong>' + liveEndTimeFormat + '</strong>' }) + "</p>";
          if (!!activityData.isTeacher) {
            $countDown = $replayGuid;
            $countDown += "<p><a class='btn btn-primary js-start-live' href='javascript:;' onclick='liveShow.entryLiveRoom()'>" + Translator.trans('进入直播教室') + "</a><br><br></p>";
          } else {
            $countDown = "<p><a class='btn btn-primary js-start-live' href='javascript:;' onclick='liveShow.entryLiveRoom()'>" + Translator.trans('进入直播教室') + "</a><br><br></p>";
          }
        }
        ;

        if (endLeftSeconds <= 0) {

          $liveNotice = "<p style='margin: 10px 0 0 10px; font-weight: bold; font-size: 1.5em;'>" + Translator.trans('直播已经结束') + "</p>";
          $countDown = "";

          if (activityData.replays && activityData.replays.length > 0) {
            $.each(activityData.replays, function (i, n) {
              $countDown += "<a class='btn btn-primary' href='" + n.url + "' target='_blank'>" + n.title + "</a>&nbsp;&nbsp;";
            });
          }
        }

        var $content = $liveNotice + '<div class="mt20 mb10">' + summary + '</div>' + '<br>' + $countDown;
        $("#lesson-live-content").find('.lesson-content-text-body').html($content);

        intervalSecond++;
      }

      generateHtml();
      if (endTime > nowDate) {
        iID = setInterval(generateHtml, 1000);
      }

      $("#lesson-live-content").show();
      $("#lesson-live-content").scrollTop(0);

      that.started = false;
    }
  }, {
    key: 'entryLiveRoom',
    value: function entryLiveRoom() {
      var that = this;
      console.log('startLive', that.started, that.entry_url);
      if (!that.started) {
        that.started = true;
        var emitter = new _activityEmitter2.default();
        emitter.emit('start', {}).then(function () {
          console.log('live.start');
        }).catch(function (error) {
          console.error(error);
        });
      }
      window.open(that.entry_url, '_blank');
    }
  }, {
    key: '_getCountDown',
    value: function _getCountDown(days, hours, minutes, seconds) {
      var content = '';
      content += days ? days + Translator.trans(' 天 ') : "";
      content += hours ? hours + Translator.trans(' 小时 ') : "";
      content += minutes ? minutes + Translator.trans(' 分钟 ') : "";
      content += seconds ? seconds + Translator.trans(' 秒 ') : "";
      content = Translator.trans('还剩： ') + '<span class="color-warning">' + content + '</span>';
      return content;
    }
  }]);

  return LiveShow;
}();

window.liveShow = new LiveShow();