'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SelectLinkage = function () {
  function SelectLinkage($select1, $select2) {
    _classCallCheck(this, SelectLinkage);

    this.select1 = $select1;
    this.select2 = $select2;

    this._initEvent();
  }

  _createClass(SelectLinkage, [{
    key: '_initEvent',
    value: function _initEvent() {
      var _this = this;

      this.select1.on('change', function (event) {
        return _this._selectChange(event);
      });
    }
  }, {
    key: '_selectChange',
    value: function _selectChange(event) {
      var url = this.select1.data('url');
      var value = this.select1.val();
      var self = this;

      self.select2.text('');

      if (value == 0) {
        this.select2.hide();
        return;
      }

      $.post(url, { courseId: value }, function (result) {
        if (result != '') {
          var option = '<option value="0">请选择</option>';
          $.each(result, function (index, task) {
            option += '<option value="' + task.id + '">' + task.title + '</option>';
          });
          self.select2.append(option);
          self.select2.show();
        } else {
          self.select2.hide();
        }
      });
    }
  }]);

  return SelectLinkage;
}();

exports.default = SelectLinkage;