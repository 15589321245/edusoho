{"version":3,"sources":["app/Resources/static-src/app/js/task/plugin/question/index.js"],"names":["QuestionPlugin","$element","$","$list","find","$detail","form","question","initEvent","on","onRedirectQuestion","event","channel","subscribe","data","envelope","prepend","html","remove","onBackList","$target","currentTarget","url","hide","show","destroy"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEMA,c;AACJ,4BAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgBC,EAAE,gBAAF,CAAhB;AACA,SAAKC,KAAL,GAAa,KAAKF,QAAL,CAAcG,IAAd,CAAmB,sBAAnB,CAAb;AACA,SAAKC,OAAL,GAAe,KAAKJ,QAAL,CAAcG,IAAd,CAAmB,wBAAnB,CAAf;AACA,SAAKE,IAAL,GAAY,oBAAZ;AACA,SAAKC,QAAL,GAAgB,IAAhB;AACA,SAAKC,SAAL;AACD;;;;gCAEW;AAAA;;AAEV,WAAKP,QAAL,CAAcQ,EAAd,CAAiB,OAAjB,EAA0B,8BAA1B,EAA0D;AAAA,eAAS,MAAKC,kBAAL,CAAwBC,KAAxB,CAAT;AAAA,OAA1D;;AAEA,UAAMC,UAAU,iBAAOA,OAAP,CAAe,sBAAf,CAAhB;;AAEAA,cAAQC,SAAR,CAAkB,WAAlB,EAA+B,UAACC,IAAD,EAAOC,QAAP,EAAoB;AACjD,cAAKd,QAAL,CAAcG,IAAd,CAAmB,oBAAnB,EAAyCY,OAAzC,CAAiDF,KAAKG,IAAtD;AACA,cAAKhB,QAAL,CAAcG,IAAd,CAAmB,aAAnB,EAAkCc,MAAlC;AACD,OAHD;;AAKAN,cAAQC,SAAR,CAAkB,cAAlB,EAAkC;AAAA,eAAM,MAAKM,UAAL,EAAN;AAAA,OAAlC;AACD;;;uCAEkBR,K,EAAO;AACxB,UAAMS,UAAUlB,EAAES,MAAMU,aAAR,CAAhB;AACA,UAAMC,MAAMF,QAAQN,IAAR,CAAa,KAAb,CAAZ;AACA,WAAKP,QAAL,GAAgB,uBAAae,GAAb,CAAhB;AACA,WAAKnB,KAAL,CAAWoB,IAAX;AACA,WAAKlB,OAAL,CAAamB,IAAb;AACD;;;iCAEW;AACV,WAAKjB,QAAL,IAAiB,KAAKA,QAAL,CAAckB,OAAd,EAAjB;AACA,WAAKtB,KAAL,CAAWqB,IAAX;AACA,WAAKnB,OAAL,CAAakB,IAAb;AACD;;;;;;AAGH,IAAIvB,cAAJ","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import postal from \"postal\";\nimport QuestionForm from './form';\nimport Question from './question'\n\nclass QuestionPlugin {\n  constructor() {\n    this.$element = $('.question-pane');\n    this.$list = this.$element.find('.question-list-block');\n    this.$detail = this.$element.find('.question-detail-block');\n    this.form = new QuestionForm();\n    this.question = null;\n    this.initEvent();\n  }\n\n  initEvent() {\n\n    this.$element.on('click', '.js-redirect-question-detail', event => this.onRedirectQuestion(event));\n\n    const channel = postal.channel('task.plugin.question');\n\n    channel.subscribe('form.save', (data, envelope) => {\n      this.$element.find('[data-role=\"list\"]').prepend(data.html);\n      this.$element.find('.empty-item').remove();\n    });\n\n    channel.subscribe('back-to-list', () => this.onBackList())\n  }\n\n  onRedirectQuestion(event) {\n    const $target = $(event.currentTarget);\n    const url = $target.data('url');\n    this.question = new Question(url);\n    this.$list.hide();\n    this.$detail.show();\n  }\n\n  onBackList(){\n    this.question && this.question.destroy();\n    this.$list.show();\n    this.$detail.hide();\n  }\n}\n\nnew QuestionPlugin();"]}