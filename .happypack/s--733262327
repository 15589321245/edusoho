'use strict';

var _chapterAnimate = require('app/common/widget/chapter-animate');

var _swiper = require('swiper');

var _swiper2 = _interopRequireDefault(_swiper);

var _attachmentActions = require('app/js/attachment/widget/attachment-actions');

var _attachmentActions2 = _interopRequireDefault(_attachmentActions);

var _utils = require('common/utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import 'libs/js/excanvas.compiled.js';

if (!Function.prototype.bind) {
    Function.prototype.bind = function (oThis) {
        if (typeof this !== "function") {
            // closest thing possible to the ECMAScript 5 internal IsCallable function
            throw new TypeError("Function.prototype.bind - what is trying to be bound is not callable");
        }

        var aArgs = Array.prototype.slice.call(arguments, 1),
            fToBind = this,
            fNOP = function fNOP() {},
            fBound = function fBound() {
            return fToBind.apply(this instanceof fNOP && oThis ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));
        };

        fNOP.prototype = this.prototype;
        fBound.prototype = new fNOP();

        return fBound;
    };
}

var orderLearnSwiper = null;

(0, _chapterAnimate.chapterAnimate)();
initTaskLearnChart();
triggerMemberExpired();

if ($('.js-attachment-list').length > 0) {
    new _attachmentActions2.default($('.js-attachment-list'));
}

$('.js-task-show-type').on('click', 'a', function () {
    var $this = $(this).addClass('active');
    $($this.data('list')).removeClass('hidden');
    $($this.siblings('a').removeClass('active').data('list')).addClass('hidden');
    if ($this.data('type') == 'chart' && !orderLearnSwiper) {
        initSwiper();
    }
});

function initTaskLearnChart() {
    $('#freeprogress').easyPieChart({
        easing: 'easeOutBounce',
        trackColor: '#ebebeb',
        barColor: '#46c37b',
        scaleColor: false,
        lineWidth: 14,
        size: 145,
        onStep: function onStep(from, to, percent) {
            if (Math.round(percent) == 100) {
                $(this.el).addClass('done');
            }
            $(this.el).find('.percent').html('学习进度' + '<br><span class="num">' + Math.round(percent) + '%</span>');
        }
    });

    $('#orderprogress-plan').easyPieChart({
        easing: 'easeOutBounce',
        trackColor: '#ebebeb',
        barColor: '#fd890c',
        scaleColor: false,
        lineWidth: 14,
        size: 145
    });

    var bg = $('#orderprogress-plan').length > 0 ? 'transparent' : '#ebebeb';

    $('#orderprogress').easyPieChart({
        easing: 'easeOutBounce',
        trackColor: bg,
        barColor: '#46c37b',
        scaleColor: false,
        lineWidth: 14,
        size: 145,
        onStep: function onStep(from, to, percent) {
            if (Math.round(percent) == 100) {
                $(this.el).addClass('done');
            }
            $(this.el).find('.percent').html('学习进度' + '<br><span class="num">' + Math.round(percent) + '%</span>');
        }
    });
}

function triggerMemberExpired() {
    if ($('.member-expire').length) {
        $(".member-expire a").trigger('click');
    }
}

function initSwiper() {
    orderLearnSwiper = new _swiper2.default('.swiper-container', {
        pagination: '.swiper-pager',
        loop: true,
        grabCursor: true,
        paginationClickable: true
    });
    $('.arrow-left').on('click', function (e) {
        e.preventDefault();
        orderLearnSwiper.swipePrev();
    });
    $('.arrow-right').on('click', function (e) {
        e.preventDefault();
        orderLearnSwiper.swipeNext();
    });

    // $('data-toggle="tooltip"').tooTip()
}