{"version":3,"sources":["app/Resources/static-src/app/js/task/index.js"],"names":["TaskShow","element","courseId","taskId","mode","$","eventEmitter","find","ui","init","initPlugin","initSidebar","bindEvent","tooltip","popover","html","trigger","learnedTime","minute","timeStep","delay","parseInt","eventData","emit","then","undefined","receiveFinish","response","on","post","data","modal","val","learned","receive","console","log","result","status","get","attr","learnedWeakPrompt","sidebar","reload","url","px","time","animate","right"],"mappings":"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","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import TaskSidebar from \"./widget/sidebar\";\nimport TaskUi from \"./widget/task-ui\";\nimport TaskEventEmitter from \"./widget/task-event-emitter\";\nimport Emitter from \"common/es-event-emitter\";\n\nclass TaskShow extends Emitter {\n  constructor({element, courseId, taskId, mode}) {\n    super();\n    this.element = $(element);\n    this.courseId = courseId;\n    this.taskId = taskId;\n    this.mode = mode;\n    this.eventEmitter = new TaskEventEmitter(this.element.find('#task-content-iframe'));\n    this.ui = new TaskUi({\n      element: '.js-task-dashboard-page'\n    });\n\n    this.init();\n  }\n\n  init() {\n    this.initPlugin();\n    this.initSidebar();\n\n    if (this.mode != 'preview') {\n      this.bindEvent();\n    }\n  }\n\n  initPlugin() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    $('[data-toggle=\"popover\"]').popover({\n      html: true,\n      trigger: 'hover'\n    });\n  }\n\n  bindEvent() {\n    let learnedTime = 0;\n    let minute = 60 * 1000;\n    let timeStep = 1; // 分钟\n    //注册doing延时监听\n    this.delay('doing', (timeStep) => {\n      learnedTime = parseInt(timeStep) + parseInt(learnedTime);\n      let eventData = {\n        timeStep: timeStep,\n        learnedTime: learnedTime,\n        taskId: this.taskId\n      };\n      this.eventEmitter.emit('doing', eventData)\n          .then(undefined, response => {\n            \n            this.receiveFinish(response);\n          })\n          ['catch'](() => {\n          })\n          .then(undefined, () => { //always\n            this.emit('doing', timeStep);\n          });\n    }, timeStep * minute);\n\n    this.emit('doing', timeStep);\n\n    this.element.on('click', '#learn-btn', event => {\n      $.post($('#learn-btn').data('url'), response => {\n        $('#modal').modal('show');\n        $('#modal').html(response);\n        $('input[name=\"task-result-status\"]', $('#js-hidden-data')).val('finish');\n        this.ui.learned();\n      });\n    });\n\n    // 接收活动的finish事件\n    this.eventEmitter.receive('finish', response => {\n      this.receiveFinish(response);\n    });\n\n  }\n\n  receiveFinish(response) {\n    console.log('response get');\n    if (response.result.status == 'finish' && $('input[name=\"task-result-status\"]', $('#js-hidden-data')).val() != 'finish') {\n        console.log('get');\n        $.get($(\".js-learned-prompt\").data('url'), html => {\n          console.log('finsh');\n          $(\".js-learned-prompt\").attr('data-content', html);\n          this.ui.learnedWeakPrompt();\n          this.ui.learned();\n          this.sidebar.reload();\n          $('input[name=\"task-result-status\"]', $('#js-hidden-data')).val('finish');\n      });\n    }\n  }\n\n  initSidebar() {\n    this.sidebar = new TaskSidebar({\n      element: this.element.find('#dashboard-sidebar'),\n      url: this.element.find('#js-hidden-data [name=\"plugins_url\"]').val()\n    });\n    this.sidebar\n        .on('popup', (px, time) => {\n          this.element.find('#dashboard-content').animate({\n            right: px\n          }, time);\n        })\n        .on('fold', (px, time) => {\n          this.element.find('#dashboard-content').animate({\n            right: px\n          }, time);\n        });\n  }\n}\n\nnew TaskShow({\n  element: $('body'),\n  courseId: $('body').find('#js-hidden-data [name=\"course-id\"]').val(),\n  taskId: $('body').find('#js-hidden-data [name=\"task-id\"]').val(),\n  mode: $('body').find('#js-hidden-data [name=\"mode\"]').val()\n});\n"]}