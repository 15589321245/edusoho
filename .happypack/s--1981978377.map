{"version":3,"sources":["app/Resources/static-src/app/js/activity/doc/index.js"],"names":["$element","$","watermarkUrl","data","console","log","get","watermark","initDocPlayer","contents","doc","element","swfUrl","pdfUrl","watermarkOptions","xPosition","yPosition","rotate","activityEmitter","finishType","finishDetail","receive","learnedTime","emit"],"mappings":";;AAAA;;;;AACA;;;;;;AACA,IAAIA,WAAWC,EAAE,mBAAF,CAAf;AACA,IAAIC,eAAeF,SAASG,IAAT,CAAc,eAAd,CAAnB;;AAEAC,QAAQC,GAAR,CAAYH,YAAZ;;AAEA,IAAGA,YAAH,EAAiB;AACfE,UAAQC,GAAR,CAAY,cAAZ;AACAJ,IAAEK,GAAF,CAAMJ,YAAN,EAAoB,UAASK,SAAT,EAAoB;AACtCH,YAAQC,GAAR,CAAYE,SAAZ;AACAC,kBAAcD,SAAd;AACD,GAHD;AAID,CAND,MAMM;AACJC,gBAAc,EAAd;AACD;;AAED,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAC/B,MAAIC,MAAM,wBAAc;AACtBC,aAASX,QADa;AAEtBY,YAAQZ,SAASG,IAAT,CAAc,KAAd,CAFc;AAGtBU,YAAQb,SAASG,IAAT,CAAc,KAAd,CAHc;AAItBW,sBAAkB;AAChBL,wBADgB;AAEhBM,iBAAW,QAFK;AAGhBC,iBAAW,QAHK;AAIhBC,cAAQ;AAJQ;AAJI,GAAd,CAAV;AAWD;;AAMD,IAAIC,kBAAkB,+BAAtB;;AAEA,IAAIC,aAAanB,SAASG,IAAT,CAAc,YAAd,CAAjB;;AAEA,IAAIgB,cAAc,MAAlB,EAA0B;AAAA;AACxB,QAAIC,eAAepB,SAASG,IAAT,CAAc,cAAd,CAAnB;AACAe,oBAAgBG,OAAhB,CAAwB,OAAxB,EAAiC,UAAClB,IAAD,EAAU;AACzC,UAAIiB,gBAAgBjB,KAAKmB,WAAzB,EAAsC;AACpCJ,wBAAgBK,IAAhB,CAAqB,QAArB;AACD;AACF,KAJD;AAFwB;AAOzB","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import DocPlayer from '../../../common/doc-player';\nimport ActivityEmitter from '../activity-emitter';\nlet $element = $('#document-content');\nlet watermarkUrl = $element.data('watermark-url');\n\nconsole.log(watermarkUrl);\n\nif(watermarkUrl) {\n  console.log('watermarkUrl');\n  $.get(watermarkUrl, function(watermark) {\n    console.log(watermark);\n    initDocPlayer(watermark);\n  });\n}else {\n  initDocPlayer('');\n}\n\nfunction initDocPlayer(contents) {\n  let doc = new DocPlayer({\n    element: $element,\n    swfUrl: $element.data('swf'),\n    pdfUrl: $element.data('pdf'),\n    watermarkOptions: {\n      contents,\n      xPosition: 'center',\n      yPosition: 'center',\n      rotate: 45,\n    }\n  });\n}\n\n\n\n\n\nlet activityEmitter = new ActivityEmitter();\n\nlet finishType = $element.data('finishType');\n\nif (finishType == 'time') {\n  let finishDetail = $element.data('finishDetail');\n  activityEmitter.receive('doing', (data) => {\n    if (finishDetail <= data.learnedTime) {\n      activityEmitter.emit('finish');\n    }\n  });\n}\n"]}