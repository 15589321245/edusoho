'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

require('store');

var _jsCookie = require('js-cookie');

var _jsCookie2 = _interopRequireDefault(_jsCookie);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var COURSE_All_INTRO = 'COURSE_All_INTRO';
var COURSE_BASE_INTRO = 'COURSE_BASE_INTRO';
var COURSE_TASK_INTRO = 'COURSE_TASK_INTRO';
var COURSE_TASK_DETAIL_INTRO = 'COURSE_TASK_DETAIL_INTRO';
var COURSE_LIST_INTRO = 'COURSE_LIST_INTRO';
var COURSE_LIST_INTRO_COOKIE = 'COURSE_LIST_INTRO_COOKIE';

var Intro = function () {
  function Intro() {
    _classCallCheck(this, Intro);
  }

  _createClass(Intro, [{
    key: 'init',
    value: function init() {
      if (this.isTaskCreatePage()) {
        this.initTaskCreatePageIntro();
        return;
      }
      this.initNotTaskCreatePageIntro();
    }
  }, {
    key: 'introStart',
    value: function introStart(steps) {
      var intro = introJs();
      intro.setOptions({
        steps: steps,
        skipLabel: '我知道了',
        nextLabel: '下一步',
        prevLabel: '上一步'
      });

      intro.start();
    }
  }, {
    key: 'isTaskCreatePage',
    value: function isTaskCreatePage() {
      return $('#step-3').length;
    }
  }, {
    key: 'initTaskCreatePageIntro',
    value: function initTaskCreatePageIntro() {
      if (store.get(COURSE_All_INTRO)) {
        return;
      }
      if (!store.get(COURSE_BASE_INTRO)) {
        store.set(COURSE_All_INTRO, true);
        this.introStart(this.initAllSteps());
        // 判断是否有任务
        return;
      }
      if (!store.get(COURSE_TASK_INTRO)) {
        store.set(COURSE_TASK_INTRO, true);
        this.introStart(this.initTaskSteps());
        // 判断是否有任务
      }
    }
  }, {
    key: 'initTaskDetailIntro',
    value: function initTaskDetailIntro(element) {
      if (!store.get(COURSE_TASK_DETAIL_INTRO)) {
        store.set(COURSE_TASK_DETAIL_INTRO);
        this.introStart(this.initTaskDetailSteps(element));
      }
    }
  }, {
    key: 'initNotTaskCreatePageIntro',
    value: function initNotTaskCreatePageIntro() {
      if (store.get(COURSE_All_INTRO)) {
        return;
      }
      if (!store.get(COURSE_BASE_INTRO)) {
        console.log('ok');
        store.set(COURSE_BASE_INTRO, true);
        this.introStart(this.initNotTaskPageSteps());
      }
    }
  }, {
    key: 'initNotTaskPageSteps',
    value: function initNotTaskPageSteps() {
      return [{
        intro: "课程管理功能现已全新升级!"
      }, {
        element: '#step-1',
        intro: "教学内容的编辑、管理请点击左侧“计划任务”的菜单项进入!"
      }, {
        element: '#step-2',
        intro: "在“营销设置”中您可以通过设置决定课程如何销售、如何加入、如何学习!"
      }];
    }
  }, {
    key: 'initAllSteps',
    value: function initAllSteps() {
      return [{
        intro: "课程管理功能现已全新升级!"
      }, {
        element: '#step-1',
        intro: "教学内容的编辑、管理请点击左侧“计划任务”的菜单项进入!"
      }, {
        element: '#step-2',
        intro: "在“营销设置”中您可以通过设置决定课程如何销售、如何加入、如何学习!"
      }, {
        element: '#step-3',
        intro: "您可以在这里选择各种不同的教学手段，然后上传文件/设置内容/设置学习完成条件。!"
      }];
    }
  }, {
    key: 'initTaskSteps',
    value: function initTaskSteps() {
      return [{
        element: '#step-3',
        intro: "您可以在这里选择各种不同的教学手段，然后上传文件/设置内容/设置学习完成条件。!"
      }];
    }
  }, {
    key: 'initCourseListSteps',
    value: function initCourseListSteps(element) {
      return [{
        element: element,
        intro: "您可以在这里选择各种不同的教学手段，然后上传文件/设置内容/设置学习完成条件。!"
      }];
    }
  }, {
    key: 'isCourseListIntro',
    value: function isCourseListIntro() {
      if (!store.get(COURSE_LIST_INTRO)) {
        console.log('ok');
        _jsCookie2.default.set(COURSE_LIST_INTRO_COOKIE, true);
      }
    }
  }, {
    key: 'initCourseListIntro',
    value: function initCourseListIntro(element) {
      if (!store.get(COURSE_LIST_INTRO)) {
        store.set(COURSE_LIST_INTRO, true);
        this.introStart(this.initCourseListSteps(element));
        store.remove(COURSE_LIST_INTRO_COOKIE);
      }
    }
  }, {
    key: 'initTaskDetailSteps',
    value: function initTaskDetailSteps(element) {
      return [{
        element: element,
        intro: '\u5728\u8BBE\u8BA1\u5B66\u4E60\u4EFB\u52A1\u65F6\uFF0C\n        \u60A8\u53EF\u4EE5\u6309\u7167\u8BFE\u65F6\u53BB\u8BBE\u7F6E\u9884\u4E60\u3001\u5B66\u4E60\u3001\u7EC3\u4E60\u3001\u4F5C\u4E1A\u3001\u8BFE\u5916\u8FD9\u51E0\u4E2A\u73AF\u8282\uFF0C\n        \u6BCF\u4E2A\u73AF\u8282\u90FD\u53EF\u4EE5\u901A\u8FC7\u5404\u79CD\u6559\u5B66\u624B\u6BB5\u6765\u5B9E\u73B0\u3002!'
      }];
    }
  }]);

  return Intro;
}();

exports.default = Intro;