{"version":3,"sources":["app/Resources/static-src/app/js/task/index.js"],"names":["TaskShow","element","mode","$","eventEmitter","TaskEventEmitter","find","ui","init","initPlugin","initSidebar","initTaskPipe","initLearnBtn","tooltip","popover","html","trigger","on","post","data","modal","response","val","learned","addListener","_receiveFinish","get","attr","learnedWeakPrompt","sidebar","reload","url","px","time","animate","right"],"mappings":"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","file":"index.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import TaskSidebar from \"./widget/sidebar\";\nimport TaskUi from \"./widget/task-ui\";\nimport TaskPipe from \"./widget/task-pipe\";\nimport Emitter from \"common/es-event-emitter\";\n\nclass TaskShow extends Emitter {\n  constructor({element, mode}) {\n    super();\n    this.element = $(element);\n    this.mode = mode;\n    this.eventEmitter = new TaskEventEmitter(this.element.find('#task-content-iframe'));\n\n    this.ui = new TaskUi({\n      element: '.js-task-dashboard-page'\n    });\n\n    this.init();\n  }\n\n  init() {\n    this.initPlugin();\n    this.initSidebar();\n    if (this.mode != 'preview') {\n      this.initTaskPipe();\n      this.initLearnBtn();\n    }\n  }\n\n  initPlugin() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    $('[data-toggle=\"popover\"]').popover({\n      html: true,\n      trigger: 'hover'\n    });\n  }\n\n  initLearnBtn() {\n    this.element.on('click', '#learn-btn', event => {\n      $.post($('#learn-btn').data('url'), response => {\n        $('#modal').modal('show');\n        $('#modal').html(response);\n        $('input[name=\"task-result-status\"]', $('#js-hidden-data')).val('finish');\n        this.ui.learned();\n      });\n    });\n  }\n\n  initTaskPipe() {\n    this.eventEmitter = new TaskPipe(this.element.find('#task-content-iframe'));\n    this.eventEmitter.addListener('finish', response => {\n      this._receiveFinish(response);\n    });\n\n  }\n\n  _receiveFinish(response) {\n    // response.result.status == 'finish'\n    //     &&\n    if ( $('input[name=\"task-result-status\"]', $('#js-hidden-data')).val() != 'finish') {\n        // 盘点是任务式学习还是自由式学习\n        $.get($(\".js-learned-prompt\").data('url'), html => {\n        $(\".js-learned-prompt\").attr('data-content', html);\n        this.ui.learnedWeakPrompt();\n        this.ui.learned();\n        this.sidebar.reload();\n        $('input[name=\"task-result-status\"]', $('#js-hidden-data')).val('finish');\n      });\n    }\n  }\n\n  initSidebar() {\n    this.sidebar = new TaskSidebar({\n      element: this.element.find('#dashboard-sidebar'),\n      url: this.element.find('#js-hidden-data [name=\"plugins_url\"]').val()\n    });\n    this.sidebar\n        .on('popup', (px, time) => {\n          this.element.find('#dashboard-content').animate({\n            right: px\n          }, time);\n        })\n        .on('fold', (px, time) => {\n          this.element.find('#dashboard-content').animate({\n            right: px\n          }, time);\n        });\n  }\n}\n\nnew TaskShow({\n  element: $('body'),\n  mode: $('body').find('#js-hidden-data [name=\"mode\"]').val()\n});\n"]}