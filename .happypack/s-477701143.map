{"version":3,"sources":["node_modules/.1.2.7@core-js/modules/es6.regexp.constructor.js"],"names":["$","require","global","isRegExp","$flags","$RegExp","RegExp","Base","proto","prototype","re1","re2","CORRECT_NEW","p","f","piRE","fiU","undefined","constructor","source","call","each","getNames","key","setDesc","configurable","get","set","it"],"mappings":";;AAAA,IAAIA,IAAWC,QAAQ,KAAR,CAAf;AAAA,IACIC,SAAWD,QAAQ,YAAR,CADf;AAAA,IAEIE,WAAWF,QAAQ,eAAR,CAFf;AAAA,IAGIG,SAAWH,QAAQ,WAAR,CAHf;AAAA,IAIII,UAAWH,OAAOI,MAJtB;AAAA,IAKIC,OAAWF,OALf;AAAA,IAMIG,QAAWH,QAAQI,SANvB;AAAA,IAOIC,MAAW,IAPf;AAAA,IAQIC,MAAW;AACb;AATF;AAAA,IAUIC,cAAc,IAAIP,OAAJ,CAAYK,GAAZ,MAAqBA,GAVvC;;AAYA,IAAGT,QAAQ,iBAAR,MAA+B,CAACW,WAAD,IAAgBX,QAAQ,WAAR,EAAqB,YAAU;AAC/EU,MAAIV,QAAQ,SAAR,EAAmB,OAAnB,CAAJ,IAAmC,KAAnC;AACA;AACA,SAAOI,QAAQK,GAAR,KAAgBA,GAAhB,IAAuBL,QAAQM,GAAR,KAAgBA,GAAvC,IAA8CN,QAAQK,GAAR,EAAa,GAAb,KAAqB,MAA1E;AACD,CAJiD,CAA/C,CAAH,EAII;AACFL,YAAU,SAASC,MAAT,CAAgBO,CAAhB,EAAmBC,CAAnB,EAAqB;AAC7B,QAAIC,OAAOZ,SAASU,CAAT,CAAX;AAAA,QACIG,MAAOF,MAAMG,SADjB;AAEA,WAAO,EAAE,gBAAgBZ,OAAlB,KAA8BU,IAA9B,IAAsCF,EAAEK,WAAF,KAAkBb,OAAxD,IAAmEW,GAAnE,GAAyEH,CAAzE,GACHD,cACE,IAAIL,IAAJ,CAASQ,QAAQ,CAACC,GAAT,GAAeH,EAAEM,MAAjB,GAA0BN,CAAnC,EAAsCC,CAAtC,CADF,GAEEP,KAAK,CAACQ,OAAOF,aAAaR,OAArB,IAAgCQ,EAAEM,MAAlC,GAA2CN,CAAhD,EAAmDE,QAAQC,GAAR,GAAcZ,OAAOgB,IAAP,CAAYP,CAAZ,CAAd,GAA+BC,CAAlF,CAHN;AAID,GAPD;AAQAd,IAAEqB,IAAF,CAAOD,IAAP,CAAYpB,EAAEsB,QAAF,CAAWf,IAAX,CAAZ,EAA8B,UAASgB,GAAT,EAAa;AACzCA,WAAOlB,OAAP,IAAkBL,EAAEwB,OAAF,CAAUnB,OAAV,EAAmBkB,GAAnB,EAAwB;AACxCE,oBAAc,IAD0B;AAExCC,WAAK,eAAU;AAAE,eAAOnB,KAAKgB,GAAL,CAAP;AAAmB,OAFI;AAGxCI,WAAK,aAASC,EAAT,EAAY;AAAErB,aAAKgB,GAAL,IAAYK,EAAZ;AAAiB;AAHI,KAAxB,CAAlB;AAKD,GAND;AAOApB,QAAMU,WAAN,GAAoBb,OAApB;AACAA,UAAQI,SAAR,GAAoBD,KAApB;AACAP,UAAQ,cAAR,EAAwBC,MAAxB,EAAgC,QAAhC,EAA0CG,OAA1C;AACD;;AAEDJ,QAAQ,iBAAR,EAA2B,QAA3B","file":"es6.regexp.constructor.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["var $        = require('./$')\n  , global   = require('./$.global')\n  , isRegExp = require('./$.is-regexp')\n  , $flags   = require('./$.flags')\n  , $RegExp  = global.RegExp\n  , Base     = $RegExp\n  , proto    = $RegExp.prototype\n  , re1      = /a/g\n  , re2      = /a/g\n  // \"new\" creates a new object, old webkit buggy here\n  , CORRECT_NEW = new $RegExp(re1) !== re1;\n\nif(require('./$.descriptors') && (!CORRECT_NEW || require('./$.fails')(function(){\n  re2[require('./$.wks')('match')] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\n}))){\n  $RegExp = function RegExp(p, f){\n    var piRE = isRegExp(p)\n      , fiU  = f === undefined;\n    return !(this instanceof $RegExp) && piRE && p.constructor === $RegExp && fiU ? p\n      : CORRECT_NEW\n        ? new Base(piRE && !fiU ? p.source : p, f)\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f);\n  };\n  $.each.call($.getNames(Base), function(key){\n    key in $RegExp || $.setDesc($RegExp, key, {\n      configurable: true,\n      get: function(){ return Base[key]; },\n      set: function(it){ Base[key] = it; }\n    });\n  });\n  proto.constructor = $RegExp;\n  $RegExp.prototype = proto;\n  require('./$.redefine')(global, 'RegExp', $RegExp);\n}\n\nrequire('./$.set-species')('RegExp');"]}