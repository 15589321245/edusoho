'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Options = function (_Component) {
  _inherits(Options, _Component);

  function Options(props) {
    _classCallCheck(this, Options);

    var _this = _possibleConstructorReturn(this, (Options.__proto__ || Object.getPrototypeOf(Options)).call(this, props));

    _this.state = {
      resultful: _this.props.resultful
    };
    return _this;
  }

  _createClass(Options, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var options = [];
      this.props.searchResult.map(function (item, i) {
        var temp = _react2.default.createElement(
          'li',
          { key: i },
          _react2.default.createElement(
            'a',
            { 'data-item': JSON.stringify(item), onClick: function onClick(event) {
                return _this2.handleChange(event);
              }, 'data-name': item.nickname },
            item.nickname
          )
        );
        options.push(temp);
      });
      if (options.length <= 0) {
        options.push(_react2.default.createElement(
          'li',
          { className: 'not-find' },
          _react2.default.createElement(
            'a',
            null,
            '\u672A\u627E\u5230...'
          )
        ));
      }
      return _react2.default.createElement(
        'ul',
        { className: 'dropdown-menu options ' + (this.state.resultful && 'show') + ' ' },
        options
      );
    }
  }, {
    key: 'handleChange',
    value: function handleChange(event) {
      this.setState({
        resultful: false
      });
      var data = event.currentTarget.attributes["data-item"].value;
      this.props.selectChange(event.currentTarget.attributes['data-name'].value, JSON.parse(data));
    }
  }]);

  return Options;
}(_react.Component);

exports.default = Options;