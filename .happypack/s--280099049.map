{"version":3,"sources":["app/Resources/static-src/app/js/question-manage/type/question-choice.js"],"names":["Choice","$form","isSubmit","$submit","$questionOptions","$","dataSource","data","dataAnswer","JSON","parse","imageUploadUrl","imageDownloadUrl","console","log","initTitleEditor","validator","initAnalysisEditor","initOptions","subscriptionMessage","on","submitForm","event","currentTarget","form","submit","publishMessage","button","render","document","getElementById","publish","channel","topic","isValidator","subscribe","callback","envelope"],"mappings":"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","file":"question-choice.js","sourceRoot":"/Users/kz/projects/edusoho","sourcesContent":["import QuestionFormBase from './form-base';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport QuestionOptions from 'app/common/component/question-options';\nimport postal from 'postal';\n\nclass Choice extends QuestionFormBase {\n  constructor($form) {\n    super($form);\n    this.isSubmit =  false;\n    this.$submit = null;\n    this.$questionOptions = $('#question-options');\n    this.dataSource = this.$questionOptions.data('choices');\n    this.dataAnswer = this.$questionOptions.data('answer');\n    if(this.dataSource) {\n      this.dataSource = JSON.parse(this.dataSource);\n      this.dataAnswer = JSON.parse(this.dataAnswer);\n    }else {\n      this.dataSource = [];\n      this.dataAnswer =[];\n    }\n    this.imageUploadUrl = this.$questionOptions.data('imageUploadUrl');\n    this.imageDownloadUrl = this.$questionOptions.data('imageDownloadUrl');\n    console.log(this.imageUploadUrl);\n    console.log(this.imageDownloadUrl);\n    this.initTitleEditor(this.validator);\n    this.initAnalysisEditor();\n    this.initOptions();\n    this.subscriptionMessage();\n  }\n\n  _initEvent() {\n    this.$form.on('click','[data-role=submit]',event=>this.submitForm(event));\n  }\n\n  submitForm(event) {\n    this.$submit = $(event.currentTarget);\n    console.log(this.validator.form());\n    console.log( this.isSubmit);\n    if(this.validator.form() && this.isSubmit ) {\n      this.submit();\n    }\n    if(!this.isSubmit ) {\n      this.publishMessage();\n    }\n  }\n\n  submit() {\n    console.log('submit');\n    this.$submit.button('loading');\n    this.$form.submit();\n  }\n\n  initOptions() {\n    ReactDOM.render( <QuestionOptions imageUploadUrl={this.imageUploadUrl} imageDownloadUrl={this.imageDownloadUrl} dataSource={this.dataSource} dataAnswer={this.dataAnswer}  minCheckedNum={ 2 } />,\n      document.getElementById('question-options')\n    );\n  }\n\n  publishMessage() {\n    console.log('publishMessage');\n    postal.publish({\n      channel : \"manage-question\",\n      topic : \"question-create-form-validator-start\",\n      data : {\n        isValidator: true,\n      }\n    });\n  }\n\n  subscriptionMessage() {\n    console.log('subscriptionMessage');\n    postal.subscribe({\n      channel  : \"manage-question\",\n      topic    : \"question-create-form-validator-end\",\n      callback : (data, envelope) =>{\n        this.isSubmit = data.isValidator;\n        console.log({\n          'subscriptionMessage':this.isSubmit\n        });\n        if(this.isSubmit &&  this.validator.form()) {\n          console.log('submit by subscriptionMessage');\n          this.submit();\n        }\n      }\n    });\n  }\n}\n\nexport default Choice;"]}