'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _sortable = require('common/sortable');

var _sortable2 = _interopRequireDefault(_sortable);

var _part = require('./part');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var List = function (_Component) {
  _inherits(List, _Component);

  function List(props) {
    _classCallCheck(this, List);

    var _this = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, props));

    _this.listId = (0, _part.getRandomString)();
    _this.$list = null;
    _this.$item = null;
    return _this;
  }

  _createClass(List, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var sortId = '#' + this.listId;
      this.$list = $(sortId);
      if (this.context.sortable) {
        (0, _sortable2.default)({
          element: sortId,
          itemSelector: "li",
          ajax: false
        }, function (data) {
          //@TODO需优化成React的组件
          $(sortId).children().remove();
          $(sortId).append(_this2.$item);
          _this2.context.sortItem(data);
        });
        this.onChange(sortId);
      }
    }
  }, {
    key: 'onChange',
    value: function onChange(sortId) {
      var _this3 = this;

      //sortList操作了真实的DOM需要还原；
      this.$list.on('mousedown', 'li', function () {
        _this3.$item = $(sortId).children('.list-group-item');
      });
    }
  }, {
    key: 'componentWillMount',
    value: function componentWillMount() {
      this.$item = $(this.listId).children().clone();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var _context = this.context,
          dataSourceUi = _context.dataSourceUi,
          sortable = _context.sortable,
          inputName = _context.inputName,
          listClassName = _context.listClassName;

      var name = '';
      if (dataSourceUi.length > 0) {
        name = 'list-group';
      }
      return _react2.default.createElement(
        'ul',
        { id: this.listId, className: 'multi-list sortable-list ' + name + ' ' + listClassName },
        dataSourceUi.map(function (item, i) {
          return _react2.default.createElement(
            'li',
            { className: 'list-group-item', id: item.itemId, key: i, 'data-seq': item.seq },
            _react2.default.createElement('i', { className: sortable ? 'es-icon es-icon-yidong mrl color-gray inline-block vertical-middle' : 'hidden' }),
            _react2.default.createElement(
              'span',
              { className: 'label-name text-overflow inline-block vertical-middle' },
              item.label
            ),
            _react2.default.createElement(
              'a',
              { className: 'link-gray mts pull-right', onClick: function onClick(event) {
                  return _this4.context.removeItem(event);
                }, 'data-item-id': item.itemId },
              _react2.default.createElement('i', { className: 'es-icon es-icon-close01 inline-block vertical-top text-12' })
            ),
            _react2.default.createElement('input', { type: 'hidden', name: inputName, value: item.label })
          );
        })
      );
    }
  }]);

  return List;
}(_react.Component);

exports.default = List;
;

List.contextTypes = {
  removeItem: _react2.default.PropTypes.func,
  sortItem: _react2.default.PropTypes.func,
  sortable: _react2.default.PropTypes.bool,
  listClassName: _react2.default.PropTypes.string,
  inputName: _react2.default.PropTypes.string,
  dataSourceUi: _react2.default.PropTypes.array.isRequired
};