'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _editor = require('../editor');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Text = function () {
  function Text(props) {
    _classCallCheck(this, Text);

    this._init();
  }

  _createClass(Text, [{
    key: '_init',
    value: function _init() {
      this._inItStep2form();
      this._inItStep3form();
    }
  }, {
    key: '_inItStep2form',
    value: function _inItStep2form() {
      var $step2_form = $("#step2-form");
      var validator = $step2_form.data('validator');
      validator = $step2_form.validate({
        rules: {
          title: {
            required: true,
            maxlength: 50,
            trim: true
          },
          content: {
            required: true
          }
        }
      });
      (0, _editor.initEditor)($('[name="content"]'), validator);
    }
  }, {
    key: '_inItStep3form',
    value: function _inItStep3form() {
      var $step3_form = $("#step3-form");
      var validator = $step3_form.data('validator');
      validator = $step3_form.validate({
        rules: {
          'finishDetail': {
            required: true,
            digits: true,
            max: 300
          }
        },
        messages: {
          finishDetail: {
            required: '请输入至少观看多少分钟'
          }
        }
      });
    }
  }]);

  return Text;
}();

new Text();